<?xml version="1.0" encoding="UTF-8"?><!--
'*	nav_0000_btn_universal.xml
--><params>
	<object>
		<format>2.0</format>
		<label>Кнопка универсальная</label>
		<description>Кнопка универсальная</description>
		<width>75</width>
		<height>75</height>
		<state_extension>false</state_extension>
	</object>
	<page name="Основные" w="320" h="180">
		<param type="edit" id="hidden_noimg" text="" def="Не все картинки заданы" x="-50" y="-50" w="1" h="1"/>

		<param type="label" id="lab_n1_img" text="Доступная" def="" x="10" y="10" w="120" h="13"/>
		<param type="file" id="n1_img" text="" def="" x="130" y="9" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
		<param type="label" id="lab_n2_img" text="При наведении мыши" def="" x="10" y="26" w="120" h="13"/>
		<param type="file" id="n2_img" text="" def="" x="130" y="25" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
		<param type="label" id="lab_n3_img" text="Недоступная" def="" x="10" y="42" w="120" h="13"/>
		<param type="file" id="n3_img" text="" def="" x="130" y="41" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
		<param type="label" id="" text="Подсказка - доступно" def="" x="10" y="58" w="120" h="13"/>
		<param type="edit" id="alt_enabled" text="" def="" x="130" y="57" w="180" h="13"/>
		<param type="label" id="" text="Подсказка - недоступно" def="" x="10" y="74" w="180" h="13"/>
		<param type="edit" id="alt_disabled" text="" def="" x="130" y="73" w="120" h="13"/>
		<param type="check" id="navibutton" text="Подчиняться событиям навигации" def="yes" x="10" y="90" w="240" h="13">
			<events>
				<event name="check" target="nav_lock" action="enable"/>
				<event name="uncheck" target="nav_lock" action="disable"/>
			</events>
		</param>
		<param type="check" id="nav_lock" text="Использовать режим строгой навигации" def="yes" x="10" y="106" w="240" h="13"/>
		<param type="check" id="use_object" text="Использовать методы появления-скрытия объекта" def="no" x="10" y="122" w="240" h="13">
			<events>
				<event name="check" target="lab_target_object" action="enable"/>
				<event name="check" target="target_object" action="enable"/>
				<event name="uncheck" target="lab_target_object" action="disable"/>
				<event name="uncheck" target="target_object" action="disable"/>
			</events>
		</param>
		<param type="label" id="lab_target_object" text="Объект-мишень" def="" x="10" y="138" w="120" h="13"/>
		<param type="objectid" id="target_object" text="" def="" x="130" y="136" w="163" h="13"/>
	</page>
    <page name="Звук" w="320" h="180">

		<param type="line" id="LINE_snd_1" text="" def="" x="5" y="8" w="310" h="48"/>
		<param type="line" id="LINE_snd_2" text="" def="" x="5" y="24" w="310" h="32"/>
		<param type="label" id="lab_snd_click" text="Нажатие мыши" def="" x="15" y="12" w="120" h="11"/>
		<param type="select" id="sound_click" text="" def="none" x="15" y="34" w="113" h="13">
			<items>
				<item id="none" label="Без звука">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="click1" label="Стандартный 1">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="click2" label="Стандартный 2">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="click3" label="Стандартный 3">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="click4" label="Стандартный 4">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="custom" label="По выбору">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="enable"/>
					</events>
				</item>
			</items>
		</param>
		<param type="file" id="sound_click_file_custom" text="" def="" x="130" y="34" w="158" h="13" ext="Звуковые файлы (*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf)|*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf|MP3 (*.mp3)|*.mp3|OGG (*.oga;*.ogg)|*.ogg;*.oga;|WebM (*.webm)|*.webm|WAV (*.wav)|*.wav|Все файлы (*.*)|*.*|||"/>

		<param type="line" id="LINE_snd_3" text="" def="" x="5" y="62" w="310" h="48"/>
		<param type="line" id="LINE_snd_4" text="" def="" x="5" y="78" w="310" h="32"/>
		<param type="label" id="lab_snd_over" text="Наведение мыши" def="" x="15" y="66" w="120" h="11"/>
		<param type="select" id="sound_over" text="" def="none" x="15" y="88" w="113" h="13">
			<items>
				<item id="none" label="Без звука">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="over1" label="Стандартный 1">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="over2" label="Стандартный 2">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="over3" label="Стандартный 3">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="over4" label="Стандартный 4">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="custom" label="По выбору">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="enable"/>
					</events>
				</item>
			</items>
		</param>
		<param type="file" id="sound_over_file_custom" text="" def="" x="130" y="88" w="158" h="13" ext="Звуковые файлы (*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf)|*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf|MP3 (*.mp3)|*.mp3|OGG (*.oga;*.ogg)|*.ogg;*.oga;|WebM (*.webm)|*.webm|WAV (*.wav)|*.wav|Все файлы (*.*)|*.*|||"/>
    </page>
    <methods>
		<method name="Constructor" label="_Constructor" access="private">
			<params>
			</params>
			<body>
			<![CDATA[function Constructor(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				if(oCurObj.jxParams.find("n1_img").text()=="" || oCurObj.jxParams.find("n2_img").text()=="" || oCurObj.jxParams.find("n3_img").text()=="")
				{
					return false;
				}
				oCurObj.data =
				{
					sState: "enabled",
					bNaviBtn: (oCurObj.jxParams.find("navibutton").text()=="yes"),
					bNaviStrict: (oCurObj.jxParams.find("nav_lock").text()=="yes"),
					bUseMethod: (oCurObj.jxParams.find("use_object").text()=="yes"),
					bNaviLockedByAction: false,
					sTargetId: oCurObj.jxParams.find("target_object").text(),
					sSoundClick: oCurObj.jxParams.children("sound_click").text(),
					sSoundOver: oCurObj.jxParams.children("sound_over").text()
				};
				if(oCurObj.data.sSoundClick=="custom")
				{
					oCurObj.data.sSoundClickFile = oCurObj.jxParams.children("sound_click_file_custom").text();
				}
				if(oCurObj.data.sSoundOver=="custom")
				{
					oCurObj.data.sSoundOverFile = oCurObj.jxParams.children("sound_over_file_custom").text();
				}
				var jEventDiv = jCurObjDiv.children(".cl-wrapper");
				if(jEventDiv.length!=0)
				{
					jEventDiv[0].removeAttribute("style");
					jEventDiv[0].setAttribute("data-parent-id", argobj.pid);
					var sBody;
					var sNewFn;
					sBody = jEventDiv[0].getAttribute("onclick");
					if(sBody!=null && sBody!="")
					{
						jEventDiv[0].setAttribute("onclick", 'if(CLO[this.getAttribute("data-parent-id")].data.sState=="enabled") {' + sBody + '}');
					}
					sBody = jEventDiv[0].getAttribute("ondblclick");
					if(sBody!=null && sBody!="")
					{
						jEventDiv[0].setAttribute("ondblclick", 'if(CLO[this.getAttribute("data-parent-id")].data.sState=="enabled") {' + sBody + '}');
					}
					sBody = jEventDiv[0].getAttribute("onmousedown");
					if(sBody!=null && sBody!="")
					{
						jEventDiv[0].setAttribute("onmousedown", 'if(CLO[this.getAttribute("data-parent-id")].data.sState=="enabled") {' + sBody + '}');
					}
					sBody = jEventDiv[0].getAttribute("onmouseup");
					if(sBody!=null && sBody!="")
					{
						jEventDiv[0].setAttribute("onmouseup", 'if(CLO[this.getAttribute("data-parent-id")].data.sState=="enabled") {' + sBody + '}');
					}
				}
				if(CL.bTouch)
				{
					jCurObjDiv.find(".cl-btn").addClass("cl-idle").on("click", function () { oCurObj.CallMethod({ sMethod: "Click", oMethodArgs: { pid: argobj.pid } }) });
				}
				else
				{
					jCurObjDiv.find(".cl-btn").addClass("cl-idle").on("mouseover", function () { oCurObj.CallMethod({ sMethod: "SetState", oMethodArgs: { pid: argobj.pid, sState: "over" } }) }).on("mouseout", function () { oCurObj.CallMethod({ sMethod: "SetState", oMethodArgs: { pid: argobj.pid, sState: "out" } }) }).on("click", function () { oCurObj.CallMethod({ sMethod: "Click", oMethodArgs: { pid: argobj.pid } }) });
				}
				if(oCurObj.data.bNaviBtn)
				{
					CL.Event.Subscribe({ aList: [ { sId: argobj.pid, sEvtName: "EVENT_SLIDE_OPENED" }, { sId: argobj.pid, sEvtName: "EVENT_SLIDE_COMPLETE" }, { sId: argobj.pid, sEvtName: "EVENT_NAVIGATION" } ] });
					if(CLO[oCurObj.data.sTargetId]!=null)
					{
						if(CLO[oCurObj.data.sTargetId].data!=null)
						{
							if(CLO[oCurObj.data.sTargetId].data.sRole!=null)
							{
								oCurObj.data.sRole = CLO[oCurObj.data.sTargetId].data.sRole;
							}
						}
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="HandleEvt" label="_HandleEvt" access="private">
			<params>
			</params>
			<body>
			<![CDATA[function HandleEvt(oEvtHandler, oArg)
			{
				if(CLO[argobj.pid]==null || CLO[argobj.pid].div==null)
				{
					return false;
				}
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				switch(argobj.evt)
				{
					case "EVENT_SLIDE_OPENED":
					{
						if(oCurObj.data.sSlideId!=CLZ.sCurrentSlideId)
						{
							oCurObj.data.sSlideId = CLZ.sCurrentSlideId;
							oCurObj.data.bNaviLockedByAction = false;
						}
						oCurObj.CallMethod({ sMethod: ((oCurObj.data.bNaviStrict || oCurObj.data.bNaviLockedByAction) ? "DisableAccess" : "EnableAccess") });
						break;
					}
					case "EVENT_SLIDE_COMPLETE":
					{
						oCurObj.CallMethod({ sMethod: ((oCurObj.data.bNaviLockedByAction) ? "DisableAccess" : "EnableAccess") });
						break;
					}
					case "EVENT_NAVIGATION":
					{
						if(argobj.sTargets!=null)
						{
							if(argobj.sTargets=="all" || argobj.sTargets=="tabs" || (argobj.sTargets=="contents" && oCurObj.data.sRole=="contents"))
							{
								switch(argobj.sAction)
								{
									case "off":
									{
										if(!oCurObj.data.bNaviLockedByAction)
										{
											oCurObj.data.bNaviLockedByAction = true;
											oCurObj.CallMethod({ sMethod: "DisableAccess" });
										}
										break;
									}
									case "on":
									default:
									{
										oCurObj.data.bNaviLockedByAction = false;
										oCurObj.CallMethod({ sMethod: "EnableAccess" });
										break;
									}
								}
							}
						}
						break;
					}					
				}
				return true;
			}]]>
			</body>
		</method>
        <method name="SetState" label="_SetState" access="private">
            <params>
            </params>
            <body>
			<![CDATA[function SetState(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jBtn = jCurObjDiv.find(".cl-btn");
				if(jBtn.hasClass("cl-disabled") && argobj.sState!="enabled") return false;
				switch(argobj.sState)
				{
					case "over":
					{
						jBtn.removeClass("cl-idle").addClass("cl-over");
						CL.Sound.Stop({ sId: argobj.pid, sEvent: "over" });
						if(oCurObj.data.sSoundOver!="none")
						{
							CL.Sound.Play({ sId: argobj.pid, sEvent: "over", sType: oCurObj.data.sSoundOver, sFile: oCurObj.data.sSoundOverFile })
						}
						break;
					}
					case "out":
					{
						jBtn.removeClass("cl-over").addClass("cl-idle");
						break;
					}
					case "disabled":
					{
						jBtn.removeClass("cl-idle cl-over").addClass("cl-disabled");
						CLO[argobj.pid].data.sState = "disabled";
						if(argobj.bWindow==true)
						{
							oCurObj.data.bNaviLockedByAction = true;
						}
						break;
					}
					case "enabled":
					{
						jBtn.removeClass("cl-disabled").addClass("cl-idle");
						CLO[argobj.pid].data.sState = "enabled";
						if(argobj.bWindow==true)
						{
							oCurObj.data.bNaviLockedByAction = false;
						}
						break;
					}
				}
				return true;
			}]]>
            </body>
        </method>
        <method name="DisableAccess" label="ЗАПРЕТИТЬ" access="public">
            <params>
            </params>
            <body>
			<![CDATA[function DisableAccess(argobj)
			{
				CLO[argobj.pid].CallMethod({ sMethod: "SetState", oMethodArgs: { sState: "disabled" } });
				return true;
			}]]>
            </body>
        </method>
        <method name="EnableAccess" label="РАЗРЕШИТЬ" access="public">
            <params>
            </params>
            <body>
			<![CDATA[function EnableAccess(argobj)
			{
				CLO[argobj.pid].CallMethod({ sMethod: "SetState", oMethodArgs: { sState: "enabled" } });
				return true;
			}]]>
            </body>
        </method>
		<method name="GetProperty" label="_GetProperty" access="private">
			<params>
			</params>
			<body>
			<![CDATA[function GetProperty(argobj)
			{
				switch(argobj.property.toLowerCase())
				{
					case "disabled":
					{
						return (CLO[argobj.pid].data.sState=="disabled" ? "1" : "0");
					}
				}
				return "";
			}]]>
			</body>
		</method>
		<method name="Click" label="_Click" access="private">
			<params>
			</params>
			<body>
			<![CDATA[function Click(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				if(oCurObj.data.sState=="disabled") return false;
				if(oCurObj.data.bUseMethod)
				{
					var sObjectId = oCurObj.jxParams.find("target_object").text();
					if(sObjectId==null || sObjectId=="") return false;
					if(CLO[sObjectId]==null)
					{
						CLO[sObjectId] = new CLObject({ xNode: CL.axSlides.find("object[id='" + sObjectId + "']") });
					}
					if(CLO[sObjectId].oMethods["Open"]!=null && CLO[sObjectId].oMethods["Close"]!=null)
					{
						if(CLO[sObjectId].bOpen==true)
						{
							CLO[sObjectId].CallMethod({ sMethod: "Close" });
						}
						else
						{
							CLO[sObjectId].CallMethod({ sMethod: "Open" });
						}
					}
				}
				CL.Sound.Stop({ sId: argobj.pid, sEvent: "click" });
				if(oCurObj.data.sSoundClick!="none")
				{
					CL.Sound.Play({ sId: argobj.pid, sEvent: "click", sType: oCurObj.data.sSoundClick, sFile: oCurObj.data.sSoundClickFile })
				}
				return true;
			}]]>
			</body>
		</method>
    </methods>
</params>