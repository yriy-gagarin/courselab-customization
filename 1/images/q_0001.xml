<?xml version="1.0" encoding="UTF-8"?><!--
'*    q_0001_test.xml
'*
--><params>
	<object>
		<format>3.0</format>
		<label>Тест</label>
		<description>Тест</description>
		<width>700</width>
		<height>400</height>
		<default_text>text_main</default_text>
		<default_color_bg>bg_color</default_color_bg>
		<default_color_border>border_color</default_color_border>
		<theme>theme</theme>
		<state_extension>false</state_extension>
	</object>
    <page name="Основные" w="320" h="280">
		<param type="line" id="line_theme" text="" def="" x="4" y="4" w="312" h="34"/>
		<param type="label" id="lab_theme" text="Тема" def="" x="10" y="10" w="120" h="11"/>
		<param type="label" id="lab_border_color" text="Граница" def="" x="130" y="10" w="60" h="11"/>
		<param type="label" id="lab_bg_color" text="Заливка" def="" x="190" y="10" w="60" h="11"/>
		<param type="label" id="lab_base_color" text="Подложка" def="" x="250" y="10" w="60" h="11"/>
		<param type="select" id="theme" text="" def="light" x="10" y="20" w="115" h="13">
			<items>
				<item id="simple" label="Простая"/>
				<item id="light" label="Легкая"/>
				<item id="standard" label="Стандартная"/>
			</items>
		</param>
		<param type="color" id="border_color" text="" def="#0080C0" x="130" y="20" w="40" h="13"/>
		<param type="color" id="bg_color" text="" def="#D5EAFF" x="190" y="20" w="40" h="13"/>
		<param type="color" id="base_color" text="" def="#FFFFFF" x="250" y="20" w="40" h="13"/>
		<param type="label" text="Вопросы" x="10" y="44" w="120" h="13"/>
		<param type="list" id="q_questions" text="" def="no" x="10" y="42" w="300" h="200" importable="yes">
			<page name="Вопрос" w="320" h="300">
				<param type="label" id="lab_question_type" text="Тип вопроса" def="" x="10" y="10" w="120" h="13"/>
				<param type="select" id="question_type" text="Тип вопроса" def="choice" x="130" y="8" w="180" h="13">
					<items>
						<item id="true-false" label="Да-Нет">
							<events>
								<event name="selendok" target="lab_q_text_true" action="show"/>
								<event name="selendok" target="q_text_true" action="show"/>
								<event name="selendok" target="lab_q_text_false" action="show"/>
								<event name="selendok" target="q_text_false" action="show"/>
								<event name="selendok" target="lab_q_order" action="show"/>
								<event name="selendok" target="q_elements_order" action="show"/>
								<event name="selendok" target="q_elements_layout" action="show"/>
								<event name="selendok" target="lab_q_eval" action="show"/>
								<event name="selendok" target="q_eval" action="show"/>
								<event name="selendok" target="lab_q_attempts" action="disable"/>
								<event name="selendok" target="q_attempts_type" action="disable"/>
								<event name="selendok" target="q_attempts" action="disable"/>
								<event name="selendok" target="q_scoring_type_tf" action="show"/>
								<event name="selendok" target="q_scoring_type_choice" action="hide"/>
								<event name="selendok" target="lab_q_variants_choice" action="hide"/>
								<event name="selendok" target="q_variants_choice" action="hide"/>
								<event name="selendok" target="q_shuffle_choice" action="hide"/>
								<event name="selendok" target="lab_q_variants_select" action="hide"/>
								<event name="selendok" target="q_variants_select" action="hide"/>
								<event name="selendok" target="q_shuffle_select" action="hide"/>
								<event name="selendok" target="lab_q_variants_order" action="hide"/>
								<event name="selendok" target="q_variants_order" action="hide"/>
								<event name="selendok" target="lab_q_variants_numeric" action="hide"/>
								<event name="selendok" target="q_variants_numeric" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="lab_q_variants_fib" action="hide"/>
								<event name="selendok" target="q_variants_fib" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_fib" action="hide"/>
								<event name="selendok" target="q_var_logic_fib" action="hide"/>
								<event name="selendok" target="lab_q_variants_oto" action="hide"/>
								<event name="selendok" target="q_variants_oto" action="hide"/>
							</events>
						</item>
						<item id="choice" label="Единственный выбор">
							<events>
								<event name="selendok" target="lab_q_text_true" action="hide"/>
								<event name="selendok" target="q_text_true" action="hide"/>
								<event name="selendok" target="lab_q_text_false" action="hide"/>
								<event name="selendok" target="q_text_false" action="hide"/>
								<event name="selendok" target="lab_q_order" action="hide"/>
								<event name="selendok" target="q_elements_order" action="hide"/>
								<event name="selendok" target="q_elements_layout" action="hide"/>
								<event name="selendok" target="lab_q_eval" action="hide"/>
								<event name="selendok" target="q_eval" action="hide"/>
								<event name="selendok" target="lab_q_attempts" action="enable"/>
								<event name="selendok" target="q_attempts_type" action="enable"/>
								<event name="selendok" target="q_attempts" action="enable"/>
								<event name="selendok" target="q_scoring_type_tf" action="hide"/>
								<event name="selendok" target="q_scoring_type_choice" action="show"/>
								<event name="selendok" target="lab_q_variants_choice" action="show"/>
								<event name="selendok" target="q_variants_choice" action="show"/>
								<event name="selendok" target="q_shuffle_choice" action="show"/>
								<event name="selendok" target="lab_q_variants_select" action="hide"/>
								<event name="selendok" target="q_variants_select" action="hide"/>
								<event name="selendok" target="q_shuffle_select" action="hide"/>
								<event name="selendok" target="lab_q_variants_order" action="hide"/>
								<event name="selendok" target="q_variants_order" action="hide"/>
								<event name="selendok" target="lab_q_variants_numeric" action="hide"/>
								<event name="selendok" target="q_variants_numeric" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="lab_q_variants_fib" action="hide"/>
								<event name="selendok" target="q_variants_fib" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_fib" action="hide"/>
								<event name="selendok" target="q_var_logic_fib" action="hide"/>
								<event name="selendok" target="lab_q_variants_oto" action="hide"/>
								<event name="selendok" target="q_variants_oto" action="hide"/>
							</events>
						</item>
						<item id="select" label="Множественный выбор">
							<events>
								<event name="selendok" target="lab_q_text_true" action="hide"/>
								<event name="selendok" target="q_text_true" action="hide"/>
								<event name="selendok" target="lab_q_text_false" action="hide"/>
								<event name="selendok" target="q_text_false" action="hide"/>
								<event name="selendok" target="lab_q_order" action="hide"/>
								<event name="selendok" target="q_elements_order" action="hide"/>
								<event name="selendok" target="q_elements_layout" action="hide"/>
								<event name="selendok" target="lab_q_eval" action="hide"/>
								<event name="selendok" target="q_eval" action="hide"/>
								<event name="selendok" target="lab_q_attempts" action="enable"/>
								<event name="selendok" target="q_attempts_type" action="enable"/>
								<event name="selendok" target="q_attempts" action="enable"/>
								<event name="selendok" target="q_scoring_type_tf" action="hide"/>
								<event name="selendok" target="q_scoring_type_choice" action="show"/>
								<event name="selendok" target="lab_q_variants_choice" action="hide"/>
								<event name="selendok" target="q_variants_choice" action="hide"/>
								<event name="selendok" target="q_shuffle_choice" action="hide"/>
								<event name="selendok" target="lab_q_variants_select" action="show"/>
								<event name="selendok" target="q_variants_select" action="show"/>
								<event name="selendok" target="q_shuffle_select" action="show"/>
								<event name="selendok" target="lab_q_variants_order" action="hide"/>
								<event name="selendok" target="q_variants_order" action="hide"/>
								<event name="selendok" target="lab_q_variants_numeric" action="hide"/>
								<event name="selendok" target="q_variants_numeric" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="lab_q_variants_fib" action="hide"/>
								<event name="selendok" target="q_variants_fib" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_fib" action="hide"/>
								<event name="selendok" target="q_var_logic_fib" action="hide"/>
								<event name="selendok" target="lab_q_variants_oto" action="hide"/>
								<event name="selendok" target="q_variants_oto" action="hide"/>
							</events>
						</item>
						<item id="order" label="Упорядочивание">
							<events>
								<event name="selendok" target="lab_q_text_true" action="hide"/>
								<event name="selendok" target="q_text_true" action="hide"/>
								<event name="selendok" target="lab_q_text_false" action="hide"/>
								<event name="selendok" target="q_text_false" action="hide"/>
								<event name="selendok" target="lab_q_order" action="hide"/>
								<event name="selendok" target="q_elements_order" action="hide"/>
								<event name="selendok" target="q_elements_layout" action="hide"/>
								<event name="selendok" target="lab_q_eval" action="hide"/>
								<event name="selendok" target="q_eval" action="hide"/>
								<event name="selendok" target="lab_q_attempts" action="enable"/>
								<event name="selendok" target="q_attempts_type" action="enable"/>
								<event name="selendok" target="q_attempts" action="enable"/>
								<event name="selendok" target="q_scoring_type_tf" action="hide"/>
								<event name="selendok" target="q_scoring_type_choice" action="show"/>
								<event name="selendok" target="lab_q_variants_choice" action="hide"/>
								<event name="selendok" target="q_variants_choice" action="hide"/>
								<event name="selendok" target="q_shuffle_choice" action="hide"/>
								<event name="selendok" target="lab_q_variants_select" action="hide"/>
								<event name="selendok" target="q_variants_select" action="hide"/>
								<event name="selendok" target="q_shuffle_select" action="hide"/>
								<event name="selendok" target="lab_q_variants_order" action="show"/>
								<event name="selendok" target="q_variants_order" action="show"/>
								<event name="selendok" target="lab_q_variants_numeric" action="hide"/>
								<event name="selendok" target="q_variants_numeric" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="lab_q_variants_fib" action="hide"/>
								<event name="selendok" target="q_variants_fib" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_fib" action="hide"/>
								<event name="selendok" target="q_var_logic_fib" action="hide"/>
								<event name="selendok" target="lab_q_variants_oto" action="hide"/>
								<event name="selendok" target="q_variants_oto" action="hide"/>
							</events>
						</item>
						<item id="numeric" label="Числовой ввод">
							<events>
								<event name="selendok" target="lab_q_text_true" action="hide"/>
								<event name="selendok" target="q_text_true" action="hide"/>
								<event name="selendok" target="lab_q_text_false" action="hide"/>
								<event name="selendok" target="q_text_false" action="hide"/>
								<event name="selendok" target="lab_q_order" action="hide"/>
								<event name="selendok" target="q_elements_order" action="hide"/>
								<event name="selendok" target="q_elements_layout" action="hide"/>
								<event name="selendok" target="lab_q_eval" action="hide"/>
								<event name="selendok" target="q_eval" action="hide"/>
								<event name="selendok" target="lab_q_attempts" action="enable"/>
								<event name="selendok" target="q_attempts_type" action="enable"/>
								<event name="selendok" target="q_attempts" action="enable"/>
								<event name="selendok" target="q_scoring_type_tf" action="hide"/>
								<event name="selendok" target="q_scoring_type_choice" action="show"/>
								<event name="selendok" target="lab_q_variants_choice" action="hide"/>
								<event name="selendok" target="q_variants_choice" action="hide"/>
								<event name="selendok" target="q_shuffle_choice" action="hide"/>
								<event name="selendok" target="lab_q_variants_select" action="hide"/>
								<event name="selendok" target="q_variants_select" action="hide"/>
								<event name="selendok" target="q_shuffle_select" action="hide"/>
								<event name="selendok" target="lab_q_variants_order" action="hide"/>
								<event name="selendok" target="q_variants_order" action="hide"/>
								<event name="selendok" target="lab_q_variants_numeric" action="show"/>
								<event name="selendok" target="q_variants_numeric" action="show"/>
								<event name="selendok" target="lab_q_var_logic_numeric" action="show"/>
								<event name="selendok" target="q_var_logic_numeric" action="show"/>
								<event name="selendok" target="lab_q_variants_fib" action="hide"/>
								<event name="selendok" target="q_variants_fib" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_fib" action="hide"/>
								<event name="selendok" target="q_var_logic_fib" action="hide"/>
								<event name="selendok" target="lab_q_variants_oto" action="hide"/>
								<event name="selendok" target="q_variants_oto" action="hide"/>
							</events>
						</item>
						<item id="fib" label="Текстовый ввод">
							<events>
								<event name="selendok" target="lab_q_text_true" action="hide"/>
								<event name="selendok" target="q_text_true" action="hide"/>
								<event name="selendok" target="lab_q_text_false" action="hide"/>
								<event name="selendok" target="q_text_false" action="hide"/>
								<event name="selendok" target="lab_q_order" action="hide"/>
								<event name="selendok" target="q_elements_order" action="hide"/>
								<event name="selendok" target="q_elements_layout" action="hide"/>
								<event name="selendok" target="lab_q_eval" action="hide"/>
								<event name="selendok" target="q_eval" action="hide"/>
								<event name="selendok" target="lab_q_attempts" action="enable"/>
								<event name="selendok" target="q_attempts_type" action="enable"/>
								<event name="selendok" target="q_attempts" action="enable"/>
								<event name="selendok" target="q_scoring_type_tf" action="hide"/>
								<event name="selendok" target="q_scoring_type_choice" action="show"/>
								<event name="selendok" target="lab_q_variants_choice" action="hide"/>
								<event name="selendok" target="q_variants_choice" action="hide"/>
								<event name="selendok" target="q_shuffle_choice" action="hide"/>
								<event name="selendok" target="lab_q_variants_select" action="hide"/>
								<event name="selendok" target="q_variants_select" action="hide"/>
								<event name="selendok" target="q_shuffle_select" action="hide"/>
								<event name="selendok" target="lab_q_variants_order" action="hide"/>
								<event name="selendok" target="q_variants_order" action="hide"/>
								<event name="selendok" target="lab_q_variants_numeric" action="hide"/>
								<event name="selendok" target="q_variants_numeric" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="lab_q_variants_fib" action="show"/>
								<event name="selendok" target="q_variants_fib" action="show"/>
								<event name="selendok" target="lab_q_var_logic_fib" action="show"/>
								<event name="selendok" target="q_var_logic_fib" action="show"/>
								<event name="selendok" target="lab_q_variants_oto" action="hide"/>
								<event name="selendok" target="q_variants_oto" action="hide"/>
							</events>
						</item>
						<item id="oto" label="Парное соответствие">
							<events>
								<event name="selendok" target="lab_q_text_true" action="hide"/>
								<event name="selendok" target="q_text_true" action="hide"/>
								<event name="selendok" target="lab_q_text_false" action="hide"/>
								<event name="selendok" target="q_text_false" action="hide"/>
								<event name="selendok" target="lab_q_order" action="hide"/>
								<event name="selendok" target="q_elements_order" action="hide"/>
								<event name="selendok" target="q_elements_layout" action="hide"/>
								<event name="selendok" target="lab_q_eval" action="hide"/>
								<event name="selendok" target="q_eval" action="hide"/>
								<event name="selendok" target="lab_q_attempts" action="enable"/>
								<event name="selendok" target="q_attempts_type" action="enable"/>
								<event name="selendok" target="q_attempts" action="enable"/>
								<event name="selendok" target="q_scoring_type_tf" action="hide"/>
								<event name="selendok" target="q_scoring_type_choice" action="show"/>
								<event name="selendok" target="lab_q_variants_choice" action="hide"/>
								<event name="selendok" target="q_variants_choice" action="hide"/>
								<event name="selendok" target="q_shuffle_choice" action="hide"/>
								<event name="selendok" target="lab_q_variants_select" action="hide"/>
								<event name="selendok" target="q_variants_select" action="hide"/>
								<event name="selendok" target="q_shuffle_select" action="hide"/>
								<event name="selendok" target="lab_q_variants_order" action="hide"/>
								<event name="selendok" target="q_variants_order" action="hide"/>
								<event name="selendok" target="lab_q_variants_numeric" action="hide"/>
								<event name="selendok" target="q_variants_numeric" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="q_var_logic_numeric" action="hide"/>
								<event name="selendok" target="lab_q_variants_fib" action="hide"/>
								<event name="selendok" target="q_variants_fib" action="hide"/>
								<event name="selendok" target="lab_q_var_logic_fib" action="hide"/>
								<event name="selendok" target="q_var_logic_fib" action="hide"/>
								<event name="selendok" target="lab_q_variants_oto" action="show"/>
								<event name="selendok" target="q_variants_oto" action="show"/>
							</events>
						</item>
					</items>
				</param>
				<param type="check" id="display_question_text" text="Текст вопроса" def="yes" x="10" y="24" w="120" h="13" listcolumn="0">
					<events>
						<event name="check" target="q_question" action="enable"/>
						<event name="uncheck" target="q_question" action="disable"/>
					</events>
				</param>
				<param type="textedit" id="text_main" text="Текст вопроса" def="Текст по умолчанию" x="130" y="24" w="163" h="13"/>
				<param type="label" id="lab_q_text_true" text="Текст Правда" def="" x="10" y="42" w="120" h="11"/>
				<param type="textedit" id="q_text_true" text="" def="Да" x="130" y="40" w="163" h="13" listcolumn="0"/>
				<param type="label" id="lab_q_text_false" text="Текст Ложь" def="" x="10" y="58" w="120" h="11"/>
				<param type="textedit" id="q_text_false" text="" def="Нет" x="130" y="56" w="163" h="13" listcolumn="0"/>
				<param type="label" id="lab_q_order" text="Порядок вариантов" def="" x="10" y="74" w="120" h="11"/>
					<param type="select" id="q_elements_order" text="" def="tf" x="130" y="72" w="90" h="13" listcolumn="0">
						<items>
						<item id="tf" label="Правда-Ложь"/>
						<item id="ft" label="Ложь-Правда"/>
						<item id="random" label="Случайный"/>
						</items>
					</param>
					<param type="select" id="q_elements_layout" text="" def="v" x="222" y="72" w="88" h="13" listcolumn="0">
						<items>
						<item id="v" label="Вертикально"/>
						<item id="h" label="Горизонтально"/>
						</items>
					</param>
				<param type="label" id="lab_q_eval" text="Правильный ответ" def="" x="10" y="90" w="120" h="11"/>
					<param type="select" id="q_eval" text="" def="t" x="130" y="88" w="180" h="13" listcolumn="0">
						<items>
						<item id="true" label="Правда"/>
						<item id="false" label="Ложь"/>
						</items>
					</param>
				<param type="label" id="lab_q_variants_choice" text="Варианты" def="" x="10" y="42" w="120" h="11"/>
					<param type="list" id="q_variants_choice" text="" def="yes" x="10" y="40" w="300" h="78" listcolumn="0">
						<params w="260" h="110">
						<param type="check" id="q_right" text="Правильный ответ" def="no" x="10" y="8" w="240" h="13"/>
						<param type="label" id="lab_q_variant" text="Текст варианта" def="" x="10" y="26" w="120" h="11"/>
						<param type="textedit" id="q_variant" text="Текст варианта" def="Текст по умолчанию" x="130" y="24" w="103" h="13"/>
						<!--<param type="line" id="line_choice_weight" text="" def="" x="10" y="40" w="240" h="44" />
						<param type="label" id="lab_q_weight_by_connection" text="Вес варианта" def="" x="15" y="46" w="110" h="11" />
						<param type="dec_spinner" id="q_weight_by_connection" text="Вес варианта" def="1.0" x="130" y="44" w="32" h="13" min="-99" max="99" />
						<param type="label" id="lab_weight1" text="Вес учитывается только при некоторых типах расчета оценки" def="" x="15" y="60" w="228" h="22" />-->
						<param type="button" id="OK" text="OK" def="" x="145" y="88" w="50" h="14"/>
						<param type="button" id="CANCEL" text="Отмена" def="" x="200" y="88" w="50" h="14"/>
						</params>
					</param>
				<param type="check" id="q_shuffle_choice" text="Показывать варианты в случайном порядке" def="no" x="10" y="122" w="300" h="13" listcolumn="0"/>
				<param type="label" id="lab_q_variants_select" text="Варианты" def="" x="10" y="42" w="120" h="11"/>
					<param type="list" id="q_variants_select" text="" def="yes" x="10" y="40" w="300" h="78" listcolumn="0">
						<params w="260" h="110">
						<param type="check" id="q_right" text="Правильный ответ" def="no" x="10" y="8" w="240" h="13"/>
						<param type="label" id="lab_q_variant" text="Текст варианта" def="" x="10" y="26" w="120" h="11"/>
						<param type="textedit" id="q_variant" text="Текст варианта" def="Текст по умолчанию" x="130" y="24" w="103" h="13"/>
						<!--<param type="line" id="line_select_weight" text="" def="" x="10" y="40" w="240" h="44" />
						<param type="label" id="lab_q_weight_by_connection" text="Вес варианта" def="" x="15" y="46" w="110" h="11" />
						<param type="dec_spinner" id="q_weight_by_connection" text="Вес варианта" def="1.0" x="130" y="44" w="32" h="13" min="-99" max="99" />
						<param type="label" id="lab_weight1" text="Вес учитывается только при некоторых типах расчета оценки" def="" x="15" y="60" w="228" h="22" />-->
						<param type="button" id="OK" text="OK" def="" x="145" y="88" w="50" h="14"/>
						<param type="button" id="CANCEL" text="Отмена" def="" x="200" y="88" w="50" h="14"/>
						</params>
					</param>
				<param type="check" id="q_shuffle_select" text="Показывать варианты в случайном порядке" def="no" x="10" y="122" w="300" h="13" listcolumn="0"/>
				<param type="label" id="lab_q_variants_order" text="Варианты" def="" x="10" y="42" w="120" h="13" listcolumn="0"/>
					<param type="list" id="q_variants_order" text="" def="yes" x="10" y="40" w="300" h="94" listcolumn="0">
						<params w="260" h="92">
						<param type="label" id="lab_q_variant" text="Текст варианта" def="" x="10" y="10" w="120" h="13"/>
						<param type="textedit" id="q_variant" text="Текст варианта" def="Текст по умолчанию" x="130" y="8" w="103" h="13"/>
						<!--<param type="line" id="" text="" def="" x="10" y="24" w="240" h="44" />
						<param type="label" id="lab_q_weight_by_connection" text="Вес варианта" def="" x="15" y="30" w="110" h="13" />
						<param type="dec_spinner" id="q_weight_by_connection" text="Вес варианта" def="1.0" x="130" y="28" w="32" h="13" min="-99" max="99" />
						<param type="label" id="lab_weight1" text="Вес учитывается только при некоторых типах расчета оценки" def="" x="15" y="44" w="228" h="22" />-->
						<param type="button" id="OK" text="OK" def="" x="145" y="72" w="50" h="14"/>
						<param type="button" id="CANCEL" text="Отмена" def="" x="200" y="72" w="50" h="14"/>
						</params>
					</param>
				<param type="label" id="lab_q_variants_numeric" text="Варианты" x="10" y="42" w="120" h="13"/>
					<param type="list" id="q_variants_numeric" text="" def="yes" x="10" y="40" w="300" h="78" listcolumn="0">
						<params w="260" h="170">
						<param type="label" id="lab_q_explanation" text="Инструкция" x="10" y="10" w="120" h="11"/>
						<param type="textedit" id="q_explanation" text="Инструкция" def="" x="130" y="9" w="103" h="13"/>
						<param type="label" id="lab_q_exp_position" text="Расположение" x="10" y="26" w="120" h="11"/>
							<param type="select" id="q_exp_position" text="Расположение" def="right" x="130" y="24" w="120" h="13" listcolumn="0">
								<items>
								<item id="left" label="Слева"/>
								<item id="right" label="Справа"/>
								</items>
							</param>
						<param type="label" text="Условия" x="10" y="42" w="120" h="11"/>
							<param type="list" id="q_conditions" text="" def="no" x="10" y="40" w="240" h="64">
								<params w="260" h="74">
								<param type="label" id="lab_q_condition" text="Условие" x="10" y="10" w="120" h="11"/>
									<param type="select" id="q_condition" text="Условие" def="eq" x="130" y="8" w="120" h="13">
										<items>
										<item id="eq" label="Равно"/>
										<item id="ne" label="Не равно"/>
										<item id="gt" label="Больше"/>
										<item id="gte" label="Больше или равно"/>
										<item id="lt" label="Меньше"/>
										<item id="lte" label="Меньше или равно"/>
										</items>
									</param>
								<param type="label" id="lab_q_value" text="Значение" x="10" y="26" w="120" h="11"/>
								<param type="edit" id="q_value" text="Значение" def="" x="130" y="24" w="44" h="13"/>
								<param type="line" x="8" y="44" w="244" h="1"/>
								<param type="button" id="OK" text="OK" x="145" y="50" w="50" h="14"/>
								<param type="button" id="CANCEL" text="Отмена" x="200" y="50" w="50" h="14"/>
								</params>
							</param>
						<param type="label" id="lab_q_cond_logic" text="Правильно если" x="10" y="112" w="120" h="11"/>
							<param type="select" id="q_cond_logic" text="Оператор" def="AND" x="130" y="110" w="120" h="13">
								<items>
								<item id="AND" label="Все верны (И)"/>
								<item id="OR" label="Хотя бы одно верно (ИЛИ)"/>
								</items>
							</param>
						<param type="label" id="lab_q_width_numeric" text="Ограничение по длине" x="10" y="128" w="120" h="11"/>
						<param type="spinner" id="q_width_numeric" text="Макс." def="0" x="130" y="126" w="32" h="13" min="0" max="99"/>
						<param type="label" id="lab_q_width_numeric_sym" text="символов" x="165" y="128" w="60" h="11"/>
						<param type="line" x="8" y="146" w="244" h="1"/>
						<param type="button" id="OK" text="OK" x="145" y="150" w="50" h="14"/>
						<param type="button" id="CANCEL" text="Отмена" x="200" y="150" w="50" h="14"/>
						</params>
					</param>
				<param type="label" id="lab_q_var_logic_numeric" text="Правильно если" x="10" y="124" w="120" h="11"/>
					<param type="select" id="q_var_logic_numeric" text="" def="AND" x="130" y="122" w="180" h="13" listcolumn="0">
						<items>
						<item id="AND" label="Все верны (И)"/>
						<item id="OR" label="Хотя бы одно верно (ИЛИ)"/>
						</items>
					</param>
				<param type="label" id="lab_q_variants_fib" text="Варианты" x="10" y="42" w="120" h="13"/>
					<param type="list" id="q_variants_fib" text="" def="yes" x="10" y="40" w="300" h="78" listcolumn="0">
						<params w="260" h="170">
						<param type="label" id="lab_q_explanation" text="Инструкция" def="" x="10" y="10" w="120" h="11"/>
						<param type="textedit" id="q_explanation" text="Инструкция" def="" x="130" y="8" w="103" h="13"/>
						<param type="label" id="lab_q_exp_position" text="Расположение" x="10" y="26" w="120" h="11"/>
							<param type="select" id="q_exp_position" text="Расположение" def="right" x="130" y="24" w="120" h="13" listcolumn="0">
								<items>
								<item id="left" label="Слева"/>
								<item id="right" label="Справа"/>
								</items>
							</param>
						<param type="label" id="lab_q_conditions" text="Условия" def="" x="10" y="42" w="120" h="11"/>
							<param type="list" id="q_conditions" text="" def="no" x="10" y="40" w="240" h="64">
								<params w="260" h="90">
								<param type="label" id="lab_q_condition" text="Условие" def="" x="10" y="10" w="120" h="11"/>
									<param type="select" id="q_condition" text="Условие" def="eq" x="130" y="8" w="120" h="13">
										<items>
										<item id="eq" label="Равно"/>
										<item id="bw" label="Начинается"/>
										<item id="ew" label="Заканчивается"/>
										<item id="cn" label="Содержит"/>
										</items>
									</param>
								<param type="label" id="lab_q_value" text="Значение" def="" x="10" y="26" w="120" h="11"/>
								<param type="edit" id="q_value" text="Значение" def="" x="130" y="24" w="120" h="13"/>
								<param type="check" id="q_case" text="Соблюдать регистр" def="no" x="10" y="40" w="240" h="13"/>
								<param type="line" text="" def="" x="8" y="60" w="244" h="1"/>
								<param type="button" id="OK" text="OK" def="" x="145" y="66" w="50" h="14"/>
								<param type="button" id="CANCEL" text="Отмена" def="" x="200" y="66" w="50" h="14"/>
								</params>
							</param>
						<param type="label" id="lab_q_cond_logic" text="Правильно если" x="10" y="112" w="120" h="11"/>
							<param type="select" id="q_cond_logic" text="Оператор" def="AND" x="130" y="110" w="120" h="13">
								<items>
								<item id="AND" label="Все верны (И)"/>
								<item id="OR" label="Хотя бы одно верно (ИЛИ)"/>
								</items>
							</param>
						<param type="label" id="lab_q_width" text="Ограничение по длине" x="10" y="128" w="120" h="11"/>
						<param type="spinner" id="q_width" text="Макс." def="0" x="130" y="126" w="32" h="13" min="0" max="999"/>
						<param type="label" id="lab_q_width_sym" text="символов" x="165" y="128" w="60" h="11"/>
						<param type="line" x="8" y="146" w="244" h="1"/>
						<param type="button" id="OK" text="OK" x="145" y="150" w="50" h="14"/>
						<param type="button" id="CANCEL" text="Отмена" x="200" y="150" w="50" h="14"/>
						</params>
					</param>
				<param type="label" id="lab_q_var_logic_fib" text="Правильно если" x="10" y="124" w="120" h="11"/>
					<param type="select" id="q_var_logic_fib" text="" def="AND" x="130" y="122" w="180" h="13" listcolumn="0">
						<items>
						<item id="AND" label="Все верны (И)"/>
						<item id="OR" label="Хотя бы одно верно (ИЛИ)"/>
						</items>
					</param>
				<param type="label" id="lab_q_variants_oto" text="Пары" def="" x="10" y="42" w="120" h="11"/>
					<param type="list" id="q_variants_oto" text="" def="yes" x="10" y="40" w="300" h="94" listcolumn="0">
						<params w="260" h="110">
						<param type="label" id="" text="База" def="" x="10" y="10" w="120" h="11"/>
						<param type="textedit" id="q_target" text="База" def="Текст по умолчанию" x="130" y="9" w="103" h="13"/>
						<param type="label" id="" text="Соответствие" def="" x="10" y="26" w="120" h="11"/>
						<param type="textedit" id="q_bullet" text="Соответствие" def="Текст по умолчанию" x="130" y="24" w="103" h="13"/>
						<!--<param type="line" text="" def="" x="10" y="40" w="240" h="44" />
						<param type="label" id="lab_q_weight_by_connection" text="Вес варианта" def="" x="15" y="46" w="110" h="13" />
						<param type="dec_spinner" id="q_weight_by_connection" text="Вес варианта" def="1.0" x="130" y="44" w="32" h="13" min="-99" max="99" />
						<param type="label" id="lab_weight1" text="Вес учитывается только при некоторых типах расчета оценки" def="" x="15" y="60" w="228" h="22" />-->
						<param type="button" id="OK" text="OK" def="" x="145" y="88" w="50" h="14"/>
						<param type="button" id="CANCEL" text="Отмена" def="" x="200" y="88" w="50" h="14"/>
						</params>
					</param>
				<param type="label" id="lab_q_attempts" text="Количество попыток" def="" x="10" y="140" w="120" h="11"/>
					<param type="select" id="q_attempts_type" text="" def="fixed" x="130" y="138" w="120" h="13" listcolumn="0">
						<items>
							<item id="fixed" label="По выбору">
								<events>
								<event name="selendok" target="q_attempts" action="show"/>
								</events>
							</item>
							<item id="auto" label="Автоматически">
								<events>
								<event name="selendok" target="q_attempts" action="hide"/>
								</events>
							</item>
						</items>
					</param>
				<param type="spinner" id="q_attempts" text="" def="1" x="252" y="138" w="32" h="13" min="1" max="100" listcolumn="0"/>
				<param type="line" id="line_scoring" text="" def="" x="4" y="162" w="312" h="106"/>
				<param type="check" id="q_scored" text="Оценка вопроса" def="yes" x="10" y="168" w="120" h="13" listcolumn="0">
					<events>
						<event name="check" target="q_scoring_type_tf" action="enable"/>
						<event name="check" target="q_scoring_type_choice" action="enable"/>
						<event name="check" target="lab_q_weight_1" action="enable"/>
						<event name="check" target="q_weight" action="enable"/>
						<event name="check" target="lab_q_scoreboards" action="enable"/>
						<event name="check" target="q_scoreboards" action="enable"/>
						<event name="uncheck" target="q_scoring_type_tf" action="disable"/>
						<event name="uncheck" target="q_scoring_type_choice" action="disable"/>
						<event name="uncheck" target="lab_q_weight_1" action="disable"/>
						<event name="uncheck" target="q_weight" action="disable"/>
						<event name="uncheck" target="lab_q_scoreboards" action="disable"/>
						<event name="uncheck" target="q_scoreboards" action="disable"/>
					</events>
				</param>
				<param type="select" id="q_scoring_type_tf" text="" def="plain" x="130" y="168" w="180" h="13" listcolumn="0">
					<items>
						<item id="plain" label="Базовый балл"/>
						<item id="byobj" label="Баллы по списку целей"/>
					</items>
				</param>
				<param type="select" id="q_scoring_type_choice" text="" def="plain" x="130" y="168" w="180" h="13" listcolumn="0">
					<items>
						<item id="plain" label="Базовый балл"/>
						<item id="regressive" label="Базовый балл регрессивно по попыткам"/>
						<item id="byobj" label="Баллы по списку целей"/>
					</items>
				</param>
				<param type="label" id="lab_q_weight_1" text="Базовый балл" def="" x="10" y="186" w="120" h="11"/>
				<param type="dec_spinner" id="q_weight" text="" def="1.0" x="130" y="184" w="32" h="13" min="-99" max="99" listcolumn="0"/>
				<param type="label" id="lab_q_scoreboards" text="Цели" def="" x="10" y="202" w="120" h="11"/>
				<param type="list" id="q_scoreboards" text="" def="yes" x="10" y="200" w="300" h="64" listcolumn="0">
					<params w="260" h="80">
						<param type="label" id="" text="Цель" def="" x="10" y="10" w="120" h="11"/>
						<param type="objectiveid" id="q_board" text="Цель" def="total" x="130" y="8" w="103" h="13"/>
						<param type="label" id="lab_q_weight_byobj" text="Балл цели" def="" x="10" y="26" w="100" h="13"/>
						<param type="dec_spinner" id="q_weight_byobj" text="Балл цели" def="1.0" x="130" y="25" w="32" h="13" min="-99" max="99"/>
						<param type="line" id="" text="" def="" x="10" y="46" w="220" h="2"/>
						<param type="button" id="OK" text="OK" def="" x="125" y="52" w="50" h="14"/>
						<param type="button" id="CANCEL" text="Отмена" def="" x="180" y="52" w="50" h="14"/>
					</params>
				</param>

				<param type="check" id="q_timer_switch" text="Ограничение времени" def="no" x="10" y="272" w="120" h="13" listcolumn="0">
					<events>
						<event name="check" target="q_timer" action="enable"/>
						<event name="check" target="lab_q_timer2" action="enable"/>
						<event name="uncheck" target="q_timer" action="disable"/>
						<event name="uncheck" target="lab_q_timer2" action="disable"/>
					</events>
				</param>
				<param type="spinner" id="q_timer" text="" def="10" x="130" y="272" w="32" h="13" min="1" max="9999" listcolumn="0"/>
				<param type="label" id="lab_q_timer2" text="сек" def="" x="165" y="274" w="30" h="11"/>
			</page>
			<page name="Обратная связь" w="320" h="300">
				<param type="check" id="q_fb_test" text="Использовать общие сообщения теста" def="yes" x="10" y="8" w="300" h="13" listcolumn="0">
					<events>
						<event name="check" target="display_fb_correct" action="hide"/>
						<event name="check" target="fb_correct" action="hide"/>
						<event name="check" target="display_fb_incorrect" action="hide"/>
						<event name="check" target="fb_incorrect" action="hide"/>
						<event name="check" target="display_fb_lastattempt" action="hide"/>
						<event name="check" target="fb_lastattempt" action="hide"/>
						<event name="check" target="display_fb_exceed" action="hide"/>
						<event name="check" target="fb_exceed" action="hide"/>
						<event name="check" target="display_fb_timeout" action="hide"/>
						<event name="check" target="fb_timeout" action="hide"/>

						<event name="uncheck" target="display_fb_correct" action="show"/>
						<event name="uncheck" target="fb_correct" action="show"/>
						<event name="uncheck" target="display_fb_incorrect" action="show"/>
						<event name="uncheck" target="fb_incorrect" action="show"/>
						<event name="uncheck" target="display_fb_lastattempt" action="show"/>
						<event name="uncheck" target="fb_lastattempt" action="show"/>
						<event name="uncheck" target="display_fb_exceed" action="show"/>
						<event name="uncheck" target="fb_exceed" action="show"/>
						<event name="uncheck" target="display_fb_timeout" action="show"/>
						<event name="uncheck" target="fb_timeout" action="show"/>
					</events>
				</param>
				<param type="line" x="10" y="24" w="300" h="1"/>
				<param type="check" id="display_fb_correct" text="Правильный ответ" def="yes" x="10" y="30" w="120" h="13" listcolumn="0">
					<events>
						<event name="check" target="fb_correct" action="enable"/>
						<event name="uncheck" target="fb_correct" action="disable"/>
					</events>
				</param>
				<param type="textedit" id="fb_correct" text="" def="Правильно" x="130" y="30" w="163" h="13" listcolumn="0"/>
				<param type="check" id="display_fb_incorrect" text="Неправильный ответ" def="yes" x="10" y="46" w="120" h="13" listcolumn="0">
					<events>
						<event name="check" target="fb_incorrect" action="enable"/>
						<event name="uncheck" target="fb_incorrect" action="disable"/>
					</events>
				</param>
				<param type="textedit" id="fb_incorrect" text="" def="К сожалению, Вы ошиблись" x="130" y="46" w="163" h="13" listcolumn="0"/>
				<param type="check" id="display_fb_lastattempt" text="Последняя попытка" def="no" x="10" y="62" w="120" h="13" listcolumn="0">
					<events>
						<event name="check" target="fb_lastattempt" action="enable"/>
						<event name="uncheck" target="fb_lastattempt" action="disable"/>
					</events>
				</param>
				<param type="textedit" id="fb_lastattempt" text="" def="К сожалению, Вы ошиблись. Осталась всего одна попытка." x="130" y="62" w="163" h="13" listcolumn="0"/>
				<param type="check" id="display_fb_exceed" text="Попытки исчерпаны" def="no" x="10" y="78" w="120" h="13" listcolumn="0">
					<events>
						<event name="check" target="fb_exceed" action="enable"/>
						<event name="uncheck" target="fb_exceed" action="disable"/>
					</events>
				</param>
				<param type="textedit" id="fb_exceed" text="" def="К сожалению Вы исчерпали все попытки, но не ввели правильный ответ" x="130" y="78" w="163" h="13" listcolumn="0"/>
				<param type="check" id="display_fb_timeout" text="Истечение времени" def="no" x="10" y="94" w="120" h="13" listcolumn="0">
					<events>
						<event name="check" target="fb_timeout" action="enable"/>
						<event name="uncheck" target="fb_timeout" action="disable"/>
					</events>
				</param>
				<param type="textedit" id="fb_timeout" text="" def="К сожалению время, отведенное на ответ, закончилось" x="130" y="94" w="163" h="13" listcolumn="0"/>
			</page>
		</param>
		<param type="check" id="test_scored" text="Оцениваемый тест" def="yes" x="10" y="246" w="240" h="13"/>
		<param type="check" id="randomize" text="Случайно выбрать" def="no" x="10" y="262" w="120" h="13">
			<events>
				<event name="check" target="lab_random_quantity" action="enable"/>
				<event name="check" target="random_quantity" action="enable"/>
				<event name="uncheck" target="lab_random_quantity" action="disable"/>
				<event name="uncheck" target="random_quantity" action="disable"/>
			</events>
		</param>
		<param type="spinner" id="random_quantity" text="" def="1" x="130" y="262" w="32" h="13" min="1" max="999"/>
		<param type="label" id="lab_random_quantity" text="вопросов" x="165" y="264" w="90" h="13"/>
    </page>
	<page name="Вид" w="320" h="280">
		<param type="check" id="display_goal" text="Показывать инструкцию вопроса" def="yes" x="10" y="8" w="260" h="13"/>
		<param type="label" id="lab_display_type" text="Режим показа" def="" x="10" y="26" w="120" h="11"/>
		<param type="select" id="display_type" text="" def="page" x="130" y="24" w="120" h="13">
			<items>
				<item id="page" label="По одному вопросу">
					<events>
						<event name="selendok" target="adjust_height" action="enable"/>
						<event name="selendok" target="lab_display_question_number" action="enable"/>
						<event name="selendok" target="display_question_number" action="enable"/>
						<event name="selendok" target="allow_partial_answer" action="disable"/>
						<event name="selendok" target="combine_btn_next" action="enable"/>
					</events>
				</item>
				<item id="list" label="Списком весь тест">
					<events>
						<event name="selendok" target="adjust_height" action="disable"/>
						<event name="selendok" target="lab_display_question_number" action="disable"/>
						<event name="selendok" target="display_question_number" action="disable"/>
						<event name="selendok" target="allow_partial_answer" action="enable"/>
						<event name="selendok" target="combine_btn_next" action="disable"/>
					</events>
				</item>
			</items>
		</param>
		<param type="label" id="lab_display_question_number" text="Показать вопрос" x="130" y="42" w="90" h="13"/>
		<param type="spinner" id="display_question_number" text="" def="1" x="220" y="40" w="32" h="13" min="1" max="999"/>
		<param type="check" id="adjust_height" text="Адаптировать высоту" def="yes" x="130" y="56" w="180" h="13"/>
		<param type="label" id="lab_shadow" text="Тень" def="" x="10" y="74" w="120" h="13"/>
		<param type="select" id="shadow_strength" text="" def="normal" x="130" y="72" w="120" h="13">
			<items>
				<item id="none" label="Без тени"/>
				<item id="extralight" label="Очень слабая"/>
				<item id="light" label="Слабая"/>
				<item id="normal" label="Нормальная"/>
				<item id="dark" label="Интенсивная"/>
				<item id="extradark" label="Очень интенсивная"/>
			</items>
		</param>
		<param type="check" id="allow_partial_answer" text="Разрешить ответ не на все вопросы" def="yes" x="10" y="88" w="180" h="13"/>
		<param type="check" id="combine_btn_next" text="Автоматический переход к следующему вопросу" def="no" x="10" y="104" w="180" h="13"/>
		<param type="check" id="spot_color_switch" text="Спец. цвет области" def="no" x="10" y="120" w="120" h="13">
			<events>
				<event name="check" target="spot_color" action="enable"/>
				<event name="uncheck" target="spot_color" action="disable"/>
			</events>
		</param>
		<param type="color" id="spot_color" text="" def="#0080C0" x="130" y="120" w="40" h="13"/>
		<param type="check" id="font_color_switch" text="Спец. цвет шрифта" def="no" x="10" y="136" w="120" h="13">
			<events>
				<event name="check" target="font_color" action="enable"/>
				<event name="uncheck" target="font_color" action="disable"/>
			</events>
		</param>
		<param type="color" id="font_color" text="" def="#0080C0" x="130" y="136" w="40" h="13"/>
		<param type="check" id="q_text_padding_override" text="Отбивка текста вопроса" def="no" x="10" y="152" w="120" h="11"/>
		<param type="spinner" id="q_text_padding" text="" def="10" x="130" y="152" w="32" h="13" min="1" max="99"/>
		<param type="label" id="lab_q_text_padding_px" text="пкс" def="" x="165" y="154" w="30" h="11"/>
		<param type="check" id="q_item_padding_override" text="Отбивка элементов" def="no" x="10" y="168" w="120" h="11"/>
		<param type="spinner" id="q_item_padding" text="" def="10" x="130" y="168" w="32" h="13" min="1" max="99"/>
		<param type="label" id="lab_q_item_padding_px" text="пкс" def="" x="170" y="154" w="30" h="11"/>
		<param type="check" id="q_base_override" text="База - ширина и отбивка" def="no" x="10" y="184" w="120" h="11"/>
		<param type="spinner" id="q_base_width" text="" def="50" x="130" y="184" w="32" h="13" min="1" max="99"/>
		<param type="label" id="lab_q_base_width_pc" text="%" def="" x="165" y="186" w="20" h="11"/>
		<param type="spinner" id="q_base_padding" text="" def="10" x="220" y="184" w="32" h="13" min="1" max="99"/>
		<param type="label" id="lab_q_base_padding_px" text="пкс" def="" x="255" y="186" w="30" h="11"/>
	</page>
	<page name="Ограничения" w="320" h="280">
		<param type="check" id="test_timer_switch" text="Время теста" def="no" x="10" y="8" w="120" h="13">
			<events>
				<event name="check" target="lab_q_timer2" action="enable"/>
				<event name="check" target="lab_q_timer3" action="enable"/>
				<event name="check" target="test_timer" action="enable"/>
				<event name="check" target="test_timer_s" action="enable"/>

				<event name="uncheck" target="lab_q_timer2" action="disable"/>
				<event name="uncheck" target="lab_q_timer3" action="disable"/>
				<event name="uncheck" target="test_timer" action="disable"/>
				<event name="uncheck" target="test_timer_s" action="disable"/>
			</events>
		</param>
		<param type="spinner" id="test_timer" text="" def="10" x="130" y="8" w="32" h="13" min="0" max="9999"/>
		<param type="label" id="lab_q_timer2" text="мин" x="165" y="10" w="30" h="13"/>
		<param type="spinner" id="test_timer_s" text="" def="0" x="190" y="8" w="32" h="13" min="0" max="59"/>
		<param type="label" id="lab_q_timer3" text="сек" x="225" y="10" w="30" h="13"/>
		<param type="check" id="test_q_timer_switch" text="Разрешить ограничение времени ответа на вопросы" def="no" x="10" y="24" w="300" h="13"/>
		<param type="check" id="repeat_test" text="Разрешить повторное прохождение" def="no" x="10" y="40" w="260" h="13"/>
 		<!--<param type="check" id="qtiimages" text="Разрешить показ картинок вопросов" def="no" x="10" y="92" w="260" h="13"/>-->
	</page>
	<page name="Обратная связь" w="320" h="280">
		<param type="check" id="q_showright" text="Показывать правильный ответ" def="no" x="10" y="8" w="200" h="13"/>
		<param type="check" id="q_fb_switch" text="Показывать сообщения обратной связи" def="no" x="10" y="24" w="200" h="13">
			<events>
				<event name="check" target="fs_fb" action="show"/>
				<event name="uncheck" target="fs_fb" action="hide"/>
			</events>
		</param>
		<param type="line" id="" text="" def="" x="10" y="40" w="300" h="1"/>
		<param type="fieldset" id="fs_fb">
			<param type="label" id="lab_preview" text="Просмотр" def="" x="270" y="28" w="40" h="11"/>
			<param type="check" id="q_display_fb_correct" text="Правильный ответ" def="yes" x="10" y="46" w="120" h="13">
				<events>
					<event name="check" target="q_fb_correct" action="enable"/>
					<event name="check" target="q_fb_correct_preview" action="enable"/>
					<event name="check" target="lab_q_fb_correct_color" action="enable"/>
					<event name="check" target="q_fb_correct_color_bg" action="enable"/>
					<event name="check" target="q_fb_correct_color_border" action="enable"/>
					<event name="check" target="q_fb_correct_color_close" action="enable"/>
					<event name="uncheck" target="q_fb_correct" action="disable"/>
					<event name="uncheck" target="q_fb_correct_preview" action="disable"/>
					<event name="uncheck" target="lab_q_fb_correct_color" action="disable"/>
					<event name="uncheck" target="q_fb_correct_color_bg" action="disable"/>
					<event name="uncheck" target="q_fb_correct_color_border" action="disable"/>
					<event name="uncheck" target="q_fb_correct_color_close" action="disable"/>
				</events>
			</param>
			<param type="textedit" id="q_fb_correct" text="" def="Правильно" x="130" y="46" w="123" h="13"/>
			<param type="check" id="q_fb_correct_preview" text="" def="no" x="280" y="46" w="16" h="13"/>
			<param type="check" id="q_display_fb_incorrect" text="Неправильный ответ" def="yes" x="10" y="62" w="120" h="13">
				<events>
					<event name="check" target="q_fb_incorrect" action="enable"/>
					<event name="check" target="q_fb_incorrect_preview" action="enable"/>
					<event name="check" target="lab_q_fb_incorrect_color" action="enable"/>
					<event name="check" target="q_fb_incorrect_color_bg" action="enable"/>
					<event name="check" target="q_fb_incorrect_color_border" action="enable"/>
					<event name="check" target="q_fb_incorrect_color_close" action="enable"/>
					<event name="uncheck" target="q_fb_incorrect" action="disable"/>
					<event name="uncheck" target="q_fb_incorrect_preview" action="disable"/>
					<event name="uncheck" target="lab_q_fb_incorrect_color" action="disable"/>
					<event name="uncheck" target="q_fb_incorrect_color_bg" action="disable"/>
					<event name="uncheck" target="q_fb_incorrect_color_border" action="disable"/>
					<event name="uncheck" target="q_fb_incorrect_color_close" action="disable"/>
				</events>
			</param>
			<param type="textedit" id="q_fb_incorrect" text="" def="К сожалению, Вы ошиблись" x="130" y="62" w="123" h="13"/>
			<param type="check" id="q_fb_incorrect_preview" text="" def="no" x="280" y="62" w="16" h="13"/>
			<param type="check" id="q_display_fb_lastattempt" text="Последняя попытка" def="no" x="10" y="78" w="120" h="13">
				<events>
					<event name="check" target="q_fb_lastattempt" action="enable"/>
					<event name="check" target="q_fb_lastattempt_preview" action="enable"/>
					<event name="check" target="lab_q_fb_lastattempt_color" action="enable"/>
					<event name="check" target="q_fb_lastattempt_color_bg" action="enable"/>
					<event name="check" target="q_fb_lastattempt_color_border" action="enable"/>
					<event name="check" target="q_fb_lastattempt_color_close" action="enable"/>
					<event name="uncheck" target="q_fb_lastattempt" action="disable"/>
					<event name="uncheck" target="q_fb_lastattempt_preview" action="disable"/>
					<event name="uncheck" target="lab_q_fb_lastattempt_color" action="disable"/>
					<event name="uncheck" target="q_fb_lastattempt_color_bg" action="disable"/>
					<event name="uncheck" target="q_fb_lastattempt_color_border" action="disable"/>
					<event name="uncheck" target="q_fb_lastattempt_color_close" action="disable"/>
				</events>
			</param>
			<param type="textedit" id="q_fb_lastattempt" text="" def="К сожалению, Вы ошиблись. Осталась всего одна попытка." x="130" y="78" w="123" h="13"/>
			<param type="check" id="q_fb_lastattempt_preview" text="" def="no" x="280" y="78" w="16" h="13"/>
			<param type="check" id="q_display_fb_exceed" text="Попытки исчерпаны" def="no" x="10" y="94" w="120" h="13">
				<events>
					<event name="check" target="q_fb_exceed" action="enable"/>
					<event name="check" target="q_fb_exceed_preview" action="enable"/>
					<event name="check" target="lab_q_fb_exceed_color" action="enable"/>
					<event name="check" target="q_fb_exceed_color_bg" action="enable"/>
					<event name="check" target="q_fb_exceed_color_border" action="enable"/>
					<event name="check" target="q_fb_exceed_color_close" action="enable"/>
					<event name="uncheck" target="q_fb_exceed" action="disable"/>
					<event name="uncheck" target="q_fb_exceed_preview" action="disable"/>
					<event name="uncheck" target="lab_q_fb_exceed_color" action="disable"/>
					<event name="uncheck" target="q_fb_exceed_color_bg" action="disable"/>
					<event name="uncheck" target="q_fb_exceed_color_border" action="disable"/>
					<event name="uncheck" target="q_fb_exceed_color_close" action="disable"/>
				</events>
			</param>
			<param type="textedit" id="q_fb_exceed" text="" def="К сожалению Вы исчерпали все попытки, но не ввели правильный ответ" x="130" y="94" w="123" h="13"/>
			<param type="check" id="q_fb_exceed_preview" text="" def="no" x="280" y="94" w="16" h="13"/>
			<param type="check" id="q_display_fb_timeout" text="Истечение времени" def="no" x="10" y="110" w="120" h="13">
				<events>
					<event name="check" target="q_fb_timeout" action="enable"/>
					<event name="check" target="q_fb_timeout_preview" action="enable"/>
					<event name="check" target="lab_q_fb_timeout_color" action="enable"/>
					<event name="check" target="q_fb_timeout_color_bg" action="enable"/>
					<event name="check" target="q_fb_timeout_color_border" action="enable"/>
					<event name="check" target="q_fb_timeout_color_close" action="enable"/>
					<event name="uncheck" target="q_fb_timeout" action="disable"/>
					<event name="uncheck" target="q_fb_timeout_preview" action="disable"/>
					<event name="uncheck" target="lab_q_fb_timeout_color" action="disable"/>
					<event name="uncheck" target="q_fb_timeout_color_bg" action="disable"/>
					<event name="uncheck" target="q_fb_timeout_color_border" action="disable"/>
					<event name="uncheck" target="q_fb_timeout_color_close" action="disable"/>
				</events>
			</param>
			<param type="textedit" id="q_fb_timeout" text="" def="К сожалению время, отведенное на ответ, закончилось" x="130" y="110" w="123" h="13"/>
			<param type="check" id="q_fb_timeout_preview" text="" def="no" x="280" y="110" w="16" h="13"/>
			<param type="check" id="q_fb_timerswitch" text="Прятать автоматически через" def="no" x="10" y="126" w="120" h="13">
				<events>
					<event name="check" target="q_fb_timer" action="enable"/>
					<event name="check" target="lab_q_fbtimer2" action="enable"/>
					<event name="uncheck" target="q_fb_timer" action="disable"/>
					<event name="uncheck" target="lab_q_fbtimer2" action="disable"/>
				</events>
			</param>
			<param type="time" id="q_fb_timer" text="" def="3000" x="130" y="126" w="32" h="13" min="100" max="99999"/>
			<param type="label" id="lab_q_fbtimer2" text="сек" def="" x="165" y="128" w="30" h="11"/>
			<param type="label" id="lab_q_fb_box_width" text="Ширина бокса" def="" x="10" y="144" w="120" h="11"/>
			<param type="spinner" id="q_fb_box_width" text="" def="30" x="130" y="142" w="32" h="13" min="1" max="99"/>
			<param type="label" id="lab_q_fb_box_width_pc" text="%" def="" x="165" y="144" w="60" h="11"/>
			<param type="check" id="q_fb_position" text="Расположение по выбору" def="no" x="10" y="158" w="120" h="13">
				<events>
					<event name="check" target="q_fb_left" action="enable"/>
					<event name="check" target="lab_q_fb_left_pc" action="enable"/>
					<event name="check" target="q_fb_top" action="enable"/>
					<event name="check" target="lab_q_fb_top_pc" action="enable"/>
					<event name="uncheck" target="q_fb_left" action="disable"/>
					<event name="uncheck" target="lab_q_fb_left_pc" action="disable"/>
					<event name="uncheck" target="q_fb_top" action="disable"/>
					<event name="uncheck" target="lab_q_fb_top_pc" action="disable"/>
				</events>
			</param>
			<param type="spinner" id="q_fb_left" text="" def="40" x="130" y="158" w="32" h="13" min="-100" max="200"/>
			<param type="label" id="lab_q_fb_left_pc" text="% X" def="" x="165" y="160" w="20" h="11"/>
			<param type="spinner" id="q_fb_top" text="" def="10" x="190" y="158" w="32" h="13" min="-100" max="200"/>
			<param type="label" id="lab_q_fb_top_pc" text="% Y" def="" x="225" y="160" w="20" h="11"/>
			<param type="label" id="lab_q_fb_bg" text="Подложка" def="" x="130" y="176" w="55" h="11"/>
			<param type="label" id="lab_q_fb_border" text="Граница" def="" x="190" y="176" w="65" h="11"/>
			<param type="label" id="lab_q_fb_close" text="Кнопка" def="" x="250" y="176" w="65" h="11"/>
			<param type="label" id="lab_q_fb_correct_color" text="Правильный ответ" def="" x="10" y="192" w="120" h="11"/>
			<param type="color" id="q_fb_correct_color_bg" text="" def="#E0FFE0" x="130" y="190" w="40" h="13"/>
			<param type="color" id="q_fb_correct_color_border" text="" def="#006600" x="190" y="190" w="40" h="13"/>
			<param type="color" id="q_fb_correct_color_close" text="" def="#006600" x="250" y="190" w="40" h="13"/>
			<param type="label" id="lab_q_fb_incorrect_color" text="Неправильный ответ" def="" x="10" y="208" w="120" h="11"/>
			<param type="color" id="q_fb_incorrect_color_bg" text="" def="#FFE0D0" x="130" y="206" w="40" h="13"/>
			<param type="color" id="q_fb_incorrect_color_border" text="" def="#CC0000" x="190" y="206" w="40" h="13"/>
			<param type="color" id="q_fb_incorrect_color_close" text="" def="#CC0000" x="250" y="206" w="40" h="13"/>
			<param type="label" id="lab_q_fb_lastattempt_color" text="Последняя попытка" def="" x="10" y="224" w="120" h="11"/>
			<param type="color" id="q_fb_lastattempt_color_bg" text="" def="#FFE0D0" x="130" y="222" w="40" h="13"/>
			<param type="color" id="q_fb_lastattempt_color_border" text="" def="#CC0000" x="190" y="222" w="40" h="13"/>
			<param type="color" id="q_fb_lastattempt_color_close" text="" def="#CC0000" x="250" y="222" w="40" h="13"/>
			<param type="label" id="lab_q_fb_exceed_color" text="Попытки исчерпаны" def="" x="10" y="240" w="120" h="11"/>
			<param type="color" id="q_fb_exceed_color_bg" text="" def="#FFE0D0" x="130" y="238" w="40" h="13"/>
			<param type="color" id="q_fb_exceed_color_border" text="" def="#CC0000" x="190" y="238" w="40" h="13"/>
			<param type="color" id="q_fb_exceed_color_close" text="" def="#CC0000" x="250" y="238" w="40" h="13"/>
			<param type="label" id="lab_q_fb_timeout_color" text="Истечение времени" def="" x="10" y="256" w="120" h="11"/>
			<param type="color" id="q_fb_timeout_color_bg" text="" def="#FFE0D0" x="130" y="254" w="40" h="13"/>
			<param type="color" id="q_fb_timeout_color_border" text="" def="#CC0000" x="190" y="254" w="40" h="13"/>
			<param type="color" id="q_fb_timeout_color_close" text="" def="#CC0000" x="250" y="254" w="40" h="13"/>
		</param>
  	</page>
	<page name="Элементы" w="320" h="280">
		<param type="line" id="line_btns1" text="" def="" x="4" y="4" w="312" h="94"/>
		<param type="check" id="q_custom_btns" text="Нестандартные кнопки" def="no" x="10" y="8" w="260" h="13">
			<events>
				<event name="check" target="fs_btns" action="enable"/>
				<event name="uncheck" target="fs_btns" action="disable"/>
			</events>
		</param>
		<param type="line" id="line_btns2" text="" def="" x="4" y="24" w="312" h="74"/>
		<param type="fieldset" id="fs_btns">
			<param type="label" id="lab_q_abtn_0" text="Принять ответ" x="10" y="32" w="120" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="file" id="q_abtn_0" text="" def="" x="130" y="30" w="163" h="13"/>
			<param type="label" id="lab_q_abtn_1" text="Принять ответ (over)" x="10" y="48" w="120" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="file" id="q_abtn_1" text="" def="" x="130" y="46" w="163" h="13"/>
			<param type="label" id="lab_q_nbtn_0" text="Следующий вопрос" x="10" y="64" w="120" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="file" id="q_nbtn_0" text="" def="" x="130" y="62" w="163" h="13"/>
			<param type="label" id="lab_q_nbtn_1" text="Следующий вопрос (over)" x="10" y="80" w="120" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="file" id="q_nbtn_1" text="" def="" x="130" y="78" w="163" h="13"/>
		</param>
		<param type="line" id="line_spots1" text="" def="" x="4" y="104" w="312" h="158"/>
		<param type="check" id="q_custom_spots" text="Нестандартные области" def="yes" x="10" y="108" w="260" h="13">
			<events>
				<event name="check" target="fs_spots" action="enable"/>
				<event name="uncheck" target="fs_spots" action="disable"/>
			</events>
		</param>
		<param type="line" id="line_spots2" text="" def="" x="4" y="124" w="312" h="138"/>
		<param type="fieldset" id="fs_spots">
			<param type="label" id="lab_q_choicespot_0" text="Ед. выбор неотмеченная" x="10" y="132" w="120" h="13"/>
			<param type="file" id="q_choicespot_0" text="" def="" x="130" y="130" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="label" id="lab_q_choicespot_1" text="Ед. выбор отмеченная" x="10" y="148" w="120" h="13"/>
			<param type="file" id="q_choicespot_1" text="" def="" x="130" y="146" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="label" id="lab_q_selectspot_0" text="Мн. выбор неотмеченная" x="10" y="164" w="120" h="13"/>
			<param type="file" id="q_selectspot_0" text="" def="" x="130" y="162" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="label" id="lab_q_selectspot_1" text="Мн. выбор отмеченная" x="10" y="180" w="120" h="13"/>
			<param type="file" id="q_selectspot_1" text="" def="" x="130" y="178" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="label" id="lab_q_rangespot_up_0" text="Ранж. вверх активная" x="10" y="196" w="120" h="13"/>
			<param type="file" id="q_rangespot_up_0" text="" def="" x="130" y="194" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="label" id="lab_q_rangespot_up_1" text="Ранж. вверх запрещенная" x="10" y="212" w="120" h="13"/>
			<param type="file" id="q_rangespot_up_1" text="" def="" x="130" y="210" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="label" id="lab_q_rangespot_down_0" text="Ранж. вниз активная" x="10" y="228" w="120" h="13"/>
			<param type="file" id="q_rangespot_down_0" text="" def="" x="130" y="226" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
			<param type="label" id="lab_q_rangespot_down_1" text="Ранж. вниз запрещенная" x="10" y="244" w="120" h="13"/>
			<param type="file" id="q_rangespot_down_1" text="" def="" x="130" y="242" w="163" h="13" ext="Картинки (*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif|PNG (*.png)|*.png|JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|GIF (*.gif)|*.gif|Все файлы (*.*)|*.*|||"/>
		</param>
	</page>
	<page name="Тексты" w="320" h="280">
		<param type="label" id="lab_strings_header" text="Верхний блок" x="10" y="10" w="120" h="13"/>
		<param type="select" id="strings_header" text="" def="5" x="130" y="8" w="88" h="13">
			<items>
				<item id="1" label="Оцениваемый тест">
					<events>
						<event name="selendok" target="q_scored_msg" action="show"/>
						<event name="selendok" target="q_notscored_msg" action="hide"/>
						<event name="selendok" target="string_answered" action="hide"/>
						<event name="selendok" target="string_question_count" action="hide"/>
						<event name="selendok" target="string_test_time" action="hide"/>
						<event name="selendok" target="string_test_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="2" label="Неоцениваемый тест">
					<events>
						<event name="selendok" target="q_scored_msg" action="hide"/>
						<event name="selendok" target="q_notscored_msg" action="show"/>
						<event name="selendok" target="string_answered" action="hide"/>
						<event name="selendok" target="string_question_count" action="hide"/>
						<event name="selendok" target="string_test_time" action="hide"/>
						<event name="selendok" target="string_test_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="3" label="Отвечено">
					<events>
						<event name="selendok" target="q_scored_msg" action="hide"/>
						<event name="selendok" target="q_notscored_msg" action="hide"/>
						<event name="selendok" target="string_answered" action="show"/>
						<event name="selendok" target="string_question_count" action="hide"/>
						<event name="selendok" target="string_test_time" action="hide"/>
						<event name="selendok" target="string_test_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="4" label="Номер вопроса">
					<events>
						<event name="selendok" target="q_scored_msg" action="hide"/>
						<event name="selendok" target="q_notscored_msg" action="hide"/>
						<event name="selendok" target="string_answered" action="hide"/>
						<event name="selendok" target="string_question_count" action="show"/>
						<event name="selendok" target="string_test_time" action="hide"/>
						<event name="selendok" target="string_test_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="5" label="Время теста">
					<events>
						<event name="selendok" target="q_scored_msg" action="hide"/>
						<event name="selendok" target="q_notscored_msg" action="hide"/>
						<event name="selendok" target="string_answered" action="hide"/>
						<event name="selendok" target="string_question_count" action="hide"/>
						<event name="selendok" target="string_test_time" action="show"/>
						<event name="selendok" target="string_test_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="6" label="Время не ограничено">
					<events>
						<event name="selendok" target="q_scored_msg" action="hide"/>
						<event name="selendok" target="q_notscored_msg" action="hide"/>
						<event name="selendok" target="string_answered" action="hide"/>
						<event name="selendok" target="string_question_count" action="hide"/>
						<event name="selendok" target="string_test_time" action="hide"/>
						<event name="selendok" target="string_test_time_unlimited" action="show"/>
					</events>
				</item>
			</items>
		</param>
		<param type="edit" id="q_scored_msg" text="" def="Оцениваемый тест" x="220" y="8" w="90" h="13"/>
		<param type="edit" id="q_notscored_msg" text="" def="Неоцениваемый тест" x="220" y="8" w="90" h="13"/>
		<param type="edit" id="string_answered" text="" def="Отвечено {{1}} из {{2}}" x="220" y="8" w="90" h="13"/>
		<param type="edit" id="string_question_count" text="" def="Вопрос {{1}} из {{2}}" x="220" y="8" w="90" h="13"/>
		<param type="edit" id="string_test_time" text="" def="Время теста {{1}} мин {{2}} сек" x="220" y="8" w="90" h="13"/>
		<param type="edit" id="string_test_time_unlimited" text="" def="Время теста не ограничено" x="220" y="8" w="90" h="13"/>
		<param type="label" id="lab_strings_instr" text="Строка инструкции вопроса" x="10" y="26" w="120" h="13"/>
		<param type="select" id="strings_instr" text="" def="2" x="130" y="24" w="88" h="13">
			<items>
				<item id="1" label="Правда-Ложь">
					<events>
						<event name="selendok" target="q_goal_true-false" action="show"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="2" label="Единственный выбор">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="show"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="3" label="Множественный выбор">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="show"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="4" label="Упорядочивание">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="show"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="5" label="Числовой ввод">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="show"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="6" label="Текстовый ввод">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="show"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="7" label="Парное соответствие">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="show"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="8" label="Правильный ответ">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="show"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="9" label="Последнее состояние">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="show"/>
						<event name="selendok" target="q_goal_skip" action="hide"/>
					</events>
				</item>
				<item id="10" label="Пропущен">
					<events>
						<event name="selendok" target="q_goal_true-false" action="hide"/>
						<event name="selendok" target="q_goal_choice" action="hide"/>
						<event name="selendok" target="q_goal_select" action="hide"/>
						<event name="selendok" target="q_goal_order" action="hide"/>
						<event name="selendok" target="q_goal_numeric" action="hide"/>
						<event name="selendok" target="q_goal_fib" action="hide"/>
						<event name="selendok" target="q_goal_oto" action="hide"/>
						<event name="selendok" target="q_goal_right" action="hide"/>
						<event name="selendok" target="q_goal_last" action="hide"/>
						<event name="selendok" target="q_goal_skip" action="show"/>
					</events>
				</item>
			</items>
		</param>
		<param type="edit" id="q_goal_true-false" text="" def="Выберите правильный вариант" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_choice" text="" def="Выберите правильный вариант" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_select" text="" def="Выберите все правильные варианты" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_order" text="" def="Расположите варианты в правильном порядке" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_numeric" text="" def="Введите числовое значение" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_fib" text="" def="Введите строковое значение" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_oto" text="" def="Соедините элементы справа с их парами слева" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_right" text="" def="ПРАВИЛЬНЫЙ ОТВЕТ" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_last" text="" def="ПОСЛЕДНЕЕ СОСТОЯНИЕ ВОПРОСА" x="220" y="24" w="90" h="13"/>
		<param type="edit" id="q_goal_skip" text="" def="ВОПРОС ПРОПУЩЕН" x="220" y="24" w="90" h="13"/>
		<param type="label" id="lab_strings_footer" text="Нижний блок" x="10" y="42" w="120" h="13"/>
		<param type="select" id="strings_footer" text="" def="1" x="130" y="40" w="88" h="13">
			<items>
				<item id="1" label="Попытки вопроса">
					<events>
						<event name="selendok" target="string_question_attempts" action="show"/>
						<event name="selendok" target="string_attempt_for_list" action="hide"/>
						<event name="selendok" target="t_stop_msg" action="hide"/>
						<event name="selendok" target="t_allanswered_msg" action="hide"/>
						<event name="selendok" target="string_question_time" action="hide"/>
						<event name="selendok" target="string_question_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="2" label="1 попытка на список">
					<events>
						<event name="selendok" target="string_question_attempts" action="hide"/>
						<event name="selendok" target="string_attempt_for_list" action="show"/>
						<event name="selendok" target="t_stop_msg" action="hide"/>
						<event name="selendok" target="t_allanswered_msg" action="hide"/>
						<event name="selendok" target="string_question_time" action="hide"/>
						<event name="selendok" target="string_question_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="3" label="Остановленный тест">
					<events>
						<event name="selendok" target="string_question_attempts" action="hide"/>
						<event name="selendok" target="string_attempt_for_list" action="hide"/>
						<event name="selendok" target="t_stop_msg" action="show"/>
						<event name="selendok" target="t_allanswered_msg" action="hide"/>
						<event name="selendok" target="string_question_time" action="hide"/>
						<event name="selendok" target="string_question_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="4" label="Все отвечено">
					<events>
						<event name="selendok" target="string_question_attempts" action="hide"/>
						<event name="selendok" target="string_attempt_for_list" action="hide"/>
						<event name="selendok" target="t_stop_msg" action="hide"/>
						<event name="selendok" target="t_allanswered_msg" action="show"/>
						<event name="selendok" target="string_question_time" action="hide"/>
						<event name="selendok" target="string_question_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="5" label="Время вопроса">
					<events>
						<event name="selendok" target="string_question_attempts" action="hide"/>
						<event name="selendok" target="string_attempt_for_list" action="hide"/>
						<event name="selendok" target="t_stop_msg" action="hide"/>
						<event name="selendok" target="t_allanswered_msg" action="hide"/>
						<event name="selendok" target="string_question_time" action="show"/>
						<event name="selendok" target="string_question_time_unlimited" action="hide"/>
					</events>
				</item>
				<item id="6" label="Время не ограничено">
					<events>
						<event name="selendok" target="string_question_attempts" action="hide"/>
						<event name="selendok" target="string_attempt_for_list" action="hide"/>
						<event name="selendok" target="t_stop_msg" action="hide"/>
						<event name="selendok" target="t_allanswered_msg" action="hide"/>
						<event name="selendok" target="string_question_time" action="hide"/>
						<event name="selendok" target="string_question_time_unlimited" action="show"/>
					</events>
				</item>
			</items>
		</param>
		<param type="edit" id="string_question_attempts" text="" def="Попытка {{1}} из {{2}}" x="220" y="40" w="90" h="13"/>
		<param type="edit" id="string_attempt_for_list" text="" def="Ответ принимается сразу на все вопросы теста" x="220" y="40" w="90" h="13"/>
		<param type="edit" id="t_stop_msg" text="" def="Тест остановлен по истечению времени" x="220" y="40" w="90" h="13"/>
		<param type="edit" id="t_allanswered_msg" text="" def="Все вопросы отвечены. Тест закончен." x="220" y="40" w="90" h="13"/>
		<param type="edit" id="string_question_time" text="" def="Время вопроса {{1}} мин {{2}} сек" x="220" y="40" w="90" h="13"/>
		<param type="edit" id="string_question_time_unlimited" text="" def="Время вопроса не ограничено" x="220" y="40" w="90" h="13"/>
		<param type="label" id="lab_strings_btns" text="Кнопки" x="10" y="58" w="120" h="13"/>
		<param type="select" id="strings_btns" text="" def="1" x="130" y="56" w="88" h="13">
			<items>
				<item id="1" label="Принять ответ">
					<events>
						<event name="selendok" target="string_btn_submit" action="show"/>
						<event name="selendok" target="string_btn_next" action="hide"/>
					</events>
				</item>
				<item id="2" label="Следующий вопрос">
					<events>
						<event name="selendok" target="string_btn_submit" action="hide"/>
						<event name="selendok" target="string_btn_next" action="show"/>
					</events>
				</item>
			</items>
		</param>
		<param type="edit" id="string_btn_submit" text="" def="ОТВЕТИТЬ" x="220" y="56" w="90" h="13"/>
		<param type="edit" id="string_btn_next" text="" def="ДАЛЕЕ" x="220" y="56" w="90" h="13"/>
		<param type="label" id="lab_strings_tooltips" text="Подсказки" x="10" y="74" w="120" h="13"/>
		<param type="select" id="strings_tooltips" text="" def="1" x="130" y="72" w="88" h="13">
			<items>
				<item id="1" label="Принять ответ">
					<events>
						<event name="selendok" target="title_btn_submit" action="show"/>
						<event name="selendok" target="title_btn_next" action="hide"/>
						<event name="selendok" target="title_close_fb" action="hide"/>
					</events>
				</item>
				<item id="2" label="Следующий вопрос">
					<events>
						<event name="selendok" target="title_btn_submit" action="hide"/>
						<event name="selendok" target="title_btn_next" action="show"/>
						<event name="selendok" target="title_close_fb" action="hide"/>
					</events>
				</item>
				<item id="3" label="Закрыть обратную связь">
					<events>
						<event name="selendok" target="title_btn_submit" action="hide"/>
						<event name="selendok" target="title_btn_next" action="hide"/>
						<event name="selendok" target="title_close_fb" action="show"/>
					</events>
				</item>
			</items>
		</param>
		<param type="edit" id="title_btn_submit" text="" def="ОТВЕТИТЬ" x="220" y="72" w="90" h="13"/>
		<param type="edit" id="title_btn_next" text="" def="ДАЛЕЕ" x="220" y="72" w="90" h="13"/>
		<param type="edit" id="title_close_fb" text="" def="Закрыть сообщение" x="220" y="72" w="90" h="13"/>
		<param type="label" id="lab_alerts" text="Предупреждения" x="10" y="90" w="120" h="13"/>
		<param type="select" id="strings_alerts" text="" def="1" x="130" y="88" w="88" h="13">
			<items>
				<item id="1" label="Не закончен">
					<events>
						<event name="selendok" target="t_continue_alert" action="show"/>
						<event name="selendok" target="t_browse_alert" action="hide"/>
						<event name="selendok" target="t_secondrun_confirm" action="hide"/>
						<event name="selendok" target="t_proceed_confirm" action="hide"/>
						<event name="selendok" target="q_input_alert" action="hide"/>
					</events>
				</item>
				<item id="2" label="Уже пройден">
					<events>
						<event name="selendok" target="t_continue_alert" action="hide"/>
						<event name="selendok" target="t_browse_alert" action="show"/>
						<event name="selendok" target="t_secondrun_confirm" action="hide"/>
						<event name="selendok" target="t_proceed_confirm" action="hide"/>
						<event name="selendok" target="q_input_alert" action="hide"/>
					</events>
				</item>
				<item id="3" label="Повторный подход">
					<events>
						<event name="selendok" target="t_continue_alert" action="hide"/>
						<event name="selendok" target="t_browse_alert" action="hide"/>
						<event name="selendok" target="t_secondrun_confirm" action="show"/>
						<event name="selendok" target="t_proceed_confirm" action="hide"/>
						<event name="selendok" target="q_input_alert" action="hide"/>
					</events>
				</item>
				<item id="4" label="Остались неотвеченные">
					<events>
						<event name="selendok" target="t_continue_alert" action="hide"/>
						<event name="selendok" target="t_browse_alert" action="hide"/>
						<event name="selendok" target="t_secondrun_confirm" action="hide"/>
						<event name="selendok" target="t_proceed_confirm" action="show"/>
						<event name="selendok" target="q_input_alert" action="hide"/>
					</events>
				</item>
				<item id="5" label="Только цифры">
					<events>
						<event name="selendok" target="t_continue_alert" action="hide"/>
						<event name="selendok" target="t_browse_alert" action="hide"/>
						<event name="selendok" target="t_secondrun_confirm" action="hide"/>
						<event name="selendok" target="t_proceed_confirm" action="hide"/>
						<event name="selendok" target="q_input_alert" action="show"/>
					</events>
				</item>
			</items>
		</param>
		<param type="edit" id="t_continue_alert" text="" def="Вы уже начинали проходить этот тест. Прохождение будет продолжено с последнего неотвеченного вопроса." x="220" y="88" w="90" h="13"/>
		<param type="edit" id="t_browse_alert" text="" def="Вы уже отвечали на этот тест. Повторный проход запрещен." x="220" y="88" w="90" h="13"/>
		<param type="edit" id="t_secondrun_confirm" text="" def="Вы уже отвечали на этот тест. Нажатие кнопки OK позволит Вам пройти его снова. Нажатие Cancel сохранит результаты предыдущего прохода." x="220" y="88" w="90" h="13"/>
		<param type="edit" id="t_proceed_confirm" text="" def="В тесте остались неотвеченные вопросы. Вернуться к их прохождению?" x="220" y="88" w="90" h="13"/>
		<param type="edit" id="q_input_alert" text="" def="Пожалуйста, вводите только цифры и знаки" x="220" y="88" w="90" h="13"/>
	</page>
	<page name="Звук" w="320" h="280">
		<param type="line" id="LINE_snd_1" text="" def="" x="5" y="8" w="310" h="48"/>
		<param type="line" id="LINE_snd_2" text="" def="" x="5" y="24" w="310" h="32"/>
		<param type="label" id="lab_snd_click" text="Нажатие мыши" def="" x="15" y="12" w="120" h="11"/>
		<param type="select" id="sound_click" text="" def="none" x="15" y="34" w="113" h="13">
			<items>
				<item id="none" label="Без звука">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="click1" label="Стандартный 1">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="click2" label="Стандартный 2">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="click3" label="Стандартный 3">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="click4" label="Стандартный 4">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="disable"/>
					</events>
				</item>
				<item id="custom" label="По выбору">
					<events>
						<event name="selendok" target="sound_click_file_custom" action="enable"/>
					</events>
				</item>
			</items>
		</param>
		<param type="file" id="sound_click_file_custom" text="" def="" x="130" y="34" w="158" h="13" ext="Звуковые файлы (*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf)|*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf|MP3 (*.mp3)|*.mp3|OGG (*.oga;*.ogg)|*.ogg;*.oga;|WebM (*.webm)|*.webm|WAV (*.wav)|*.wav|Все файлы (*.*)|*.*|||"/>
		<param type="line" id="LINE_snd_3" text="" def="" x="5" y="62" w="310" h="48"/>
		<param type="line" id="LINE_snd_4" text="" def="" x="5" y="78" w="310" h="32"/>
		<param type="label" id="lab_snd_over" text="Наведение мыши" def="" x="15" y="66" w="120" h="11"/>
		<param type="select" id="sound_over" text="" def="none" x="15" y="88" w="113" h="13">
			<items>
				<item id="none" label="Без звука">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="over1" label="Стандартный 1">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="over2" label="Стандартный 2">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="over3" label="Стандартный 3">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="over4" label="Стандартный 4">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="disable"/>
					</events>
				</item>
				<item id="custom" label="По выбору">
					<events>
						<event name="selendok" target="sound_over_file_custom" action="enable"/>
					</events>
				</item>
			</items>
		</param>
		<param type="file" id="sound_over_file_custom" text="" def="" x="130" y="88" w="158" h="13" ext="Звуковые файлы (*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf)|*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf|MP3 (*.mp3)|*.mp3|OGG (*.oga;*.ogg)|*.ogg;*.oga;|WebM (*.webm)|*.webm|WAV (*.wav)|*.wav|Все файлы (*.*)|*.*|||"/>
		<param type="line" id="LINE_snd_5" text="" def="" x="5" y="116" w="310" h="48"/>
		<param type="line" id="LINE_snd_6" text="" def="" x="5" y="132" w="310" h="32"/>
		<param type="label" id="lab_snd_success" text="Правильный ответ" def="" x="15" y="120" w="120" h="11"/>
		<param type="select" id="sound_success" text="" def="none" x="15" y="140" w="113" h="13">
			<items>
				<item id="none" label="Без звука">
					<events>
						<event name="selendok" target="sound_success_file_custom" action="disable"/>
					</events>
				</item>
				<item id="success1" label="Стандартный 1">
					<events>
						<event name="selendok" target="sound_success_file_custom" action="disable"/>
					</events>
				</item>
				<item id="success2" label="Стандартный 2">
					<events>
						<event name="selendok" target="sound_success_file_custom" action="disable"/>
					</events>
				</item>
				<item id="success3" label="Стандартный 3">
					<events>
						<event name="selendok" target="sound_success_file_custom" action="disable"/>
					</events>
				</item>
				<item id="success4" label="Стандартный 4">
					<events>
						<event name="selendok" target="sound_success_file_custom" action="disable"/>
					</events>
				</item>
				<item id="custom" label="По выбору">
					<events>
						<event name="selendok" target="sound_success_file_custom" action="enable"/>
					</events>
				</item>
			</items>
		</param>
		<param type="file" id="sound_success_file_custom" text="" def="" x="130" y="140" w="158" h="13" ext="Звуковые файлы (*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf)|*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf|MP3 (*.mp3)|*.mp3|OGG (*.oga;*.ogg)|*.ogg;*.oga;|WebM (*.webm)|*.webm|WAV (*.wav)|*.wav|Все файлы (*.*)|*.*|||"/>
		<param type="line" id="LINE_snd_7" text="" def="" x="5" y="168" w="310" h="48"/>
		<param type="line" id="LINE_snd_8" text="" def="" x="5" y="184" w="310" h="32"/>
		<param type="label" id="lab_snd_failure" text="Неправильный ответ" def="" x="15" y="172" w="120" h="11"/>
		<param type="select" id="sound_failure" text="" def="none" x="15" y="192" w="113" h="13">
			<items>
				<item id="none" label="Без звука">
					<events>
						<event name="selendok" target="sound_failure_file_custom" action="disable"/>
					</events>
				</item>
				<item id="failure1" label="Стандартный 1">
					<events>
						<event name="selendok" target="sound_failure_file_custom" action="disable"/>
					</events>
				</item>
				<item id="failure2" label="Стандартный 2">
					<events>
						<event name="selendok" target="sound_failure_file_custom" action="disable"/>
					</events>
				</item>
				<item id="failure3" label="Стандартный 3">
					<events>
						<event name="selendok" target="sound_failure_file_custom" action="disable"/>
					</events>
				</item>
				<item id="failure4" label="Стандартный 4">
					<events>
						<event name="selendok" target="sound_failure_file_custom" action="disable"/>
					</events>
				</item>
				<item id="custom" label="По выбору">
					<events>
						<event name="selendok" target="sound_failure_file_custom" action="enable"/>
					</events>
				</item>
			</items>
		</param>
		<param type="file" id="sound_failure_file_custom" text="" def="" x="130" y="192" w="158" h="13" ext="Звуковые файлы (*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf)|*.mp3;*.ogg;*.oga;*.webm;*.wav;*.swf|MP3 (*.mp3)|*.mp3|OGG (*.oga;*.ogg)|*.ogg;*.oga;|WebM (*.webm)|*.webm|WAV (*.wav)|*.wav|Все файлы (*.*)|*.*|||"/>
	</page>
    <methods>
		<method name="Constructor" label="_Constructor" access="private">
			<params></params>
			<body>
			<![CDATA[function Constructor(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var bDefer = false;
				switch(oCurObj.display)
				{
					case "none":
					{
						bDefer = true;
						CL.Event.Subscribe({ aList: [ { sId: argobj.pid, sEvtName: "EVENT_OBJECT_SHOW" } ] });
						break;
					}
					case "time":
					case "frame":
					case "slide":
					{
						if(oCurObj.iBegin!=null && +oCurObj.iBegin!=0)
						{
							bDefer = true;
							CL.Event.Subscribe({ aList: [ { sId: argobj.pid, sEvtName: "EVENT_OBJECT_SHOW" } ] });
						}
						break;
					}
				}
				var jSBtn = jCurObjDiv.find(".cl-btn-submit");
				jSBtn.parent().height(jSBtn.outerHeight());

				oCurObj.data =
				{
					aQuestions: [],
					bAllAnswered: false,
					bAllowQTimer: (oCurObj.jxParams.children("test_q_timer_switch").text()=="yes"),
					bAllowFeedback: (oCurObj.jxParams.children("q_fb_switch").text()=="yes"),
					bCredit: (oCurObj.jxParams.children("test_scored").text()=="yes"),
					bCombineBtn: (oCurObj.jxParams.children("combine_btn_next").text()=="yes"),
					bDisplayGoal: (oCurObj.jxParams.children("display_goal").text()=="yes"),
					bQuestionTimer: (oCurObj.jxParams.children("test_q_timer_switch").text()=="yes"),
					bRandom: (oCurObj.jxParams.children("randomize").text()=="yes"),
					bShowCorrect: (oCurObj.jxParams.children("q_showright").text()=="yes"),
					bTestTimer: (oCurObj.jxParams.children("test_timer_switch").text()=="yes"),
					jxQuestions: oCurObj.jxParams.find("q_questions > item"),
					sDisplayAs: oCurObj.jxParams.find("display_type").text(),
					sMode: "init",
					sSoundSuccess: oCurObj.jxParams.children("sound_success").text(),
					sSoundFailure: oCurObj.jxParams.children("sound_failure").text(),
					sSoundClick: oCurObj.jxParams.children("sound_click").text(),
					sSoundOver: oCurObj.jxParams.children("sound_over").text()
				};
				if(oCurObj.data.jxQuestions.length==0)
				{
					return false;
				}
				var jAudioContainer = jCurObjDiv.find(".cl-audio-files-list");
				if(oCurObj.data.sSoundClick!="none")
				{
					oCurObj.data.jAudioClick = CL.Sound.Append({ oContainer: jAudioContainer, sId: argobj.pid + "_AUDIO1", sType: oCurObj.data.sSoundClick, sFile: oCurObj.jxParams.children("sound_click_file_custom").text() });
				}
				if(oCurObj.data.sSoundOver!="none")
				{
					oCurObj.data.jAudioOver = CL.Sound.Append({ oContainer: jAudioContainer, sId: argobj.pid + "_AUDIO2", sType: oCurObj.data.sSoundOver, sFile: oCurObj.jxParams.children("sound_over_file_custom").text() });
				}
				if(oCurObj.data.sSoundSuccess!="none")
				{
					oCurObj.data.jAudioSuccess = CL.Sound.Append({ oContainer: jAudioContainer, sId: argobj.pid + "_AUDIO3", sType: oCurObj.data.sSoundSuccess, sFile: oCurObj.jxParams.children("sound_success_file_custom").text() });
				}
				if(oCurObj.data.sSoundFailure!="none")
				{
					oCurObj.data.jAudioFailure = CL.Sound.Append({ oContainer: jAudioContainer, sId: argobj.pid + "_AUDIO4", sType: oCurObj.data.sSoundFailure, sFile: oCurObj.jxParams.children("sound_failure_file_custom").text() });
				}
// fill runtime-only params fo all q
				var jxQuestion;
				var iIdx;
				for(var i=0; i<oCurObj.data.jxQuestions.length; i++)
				{
					jxQuestion = $(oCurObj.data.jxQuestions[i]);
					oCurObj.data.aQuestions[i] =
					{
						bDisplayText: (jxQuestion.children("display_question_text").text()=="yes"),
						sType: jxQuestion.children("question_type").text()
					}
					if(oCurObj.data.bQuestionTimer)
					{
						if(jxQuestion.children("q_timer_switch").text()=="yes")
						{
							var iTimer = +jxQuestion.children("q_timer").text();
							if(isNaN(iTimer))
							{
								oCurObj.data.aQuestions[i].bTimer = false;
							}
							else
							{
								oCurObj.data.aQuestions[i].bTimer = true;
								oCurObj.data.aQuestions[i].iTimer = iTimer;
							}
						}
					}
					if(oCurObj.data.bCredit)
					{
						oCurObj.data.aQuestions[i].aObjectives = [];
						jxQuestion.find("q_scoreboards > item").each(function ()
						{
							oCurObj.data.aQuestions[i].aObjectives.push({ sId: $(this).children("q_board").text(), nWeight: +$(this).children("q_weight_byobj").text() });
						});
					}
					switch(oCurObj.data.aQuestions[i].sType)
					{
						case "true-false":
						{
							oCurObj.data.aQuestions[i].sScoringType = jxQuestion.children("q_scoring_type_tf").text();
							oCurObj.data.aQuestions[i].bShuffle = (jxQuestion.children("q_elements_order").text()=="random");
							break;
						}
						case "choice":
						{
							oCurObj.data.aQuestions[i].sScoringType =jxQuestion.children("q_scoring_type_choice").text();
							oCurObj.data.aQuestions[i].jxVars = jxQuestion.find("q_variants_choice > item");
							oCurObj.data.aQuestions[i].bShuffle = (jxQuestion.children("q_shuffle_choice").text()=="yes");
							break;
						}
						case "select":
						{
							oCurObj.data.aQuestions[i].sScoringType = jxQuestion.children("q_scoring_type_choice").text();
							oCurObj.data.aQuestions[i].jxVars = jxQuestion.find("q_variants_select > item");
							oCurObj.data.aQuestions[i].bShuffle = (jxQuestion.children("q_shuffle_select").text()=="yes");
							break;
						}
						case "order":
						{
							oCurObj.data.aQuestions[i].sScoringType = jxQuestion.children("q_scoring_type_choice").text();
							oCurObj.data.aQuestions[i].jxVars = jxQuestion.find("q_variants_order > item");
							oCurObj.data.aQuestions[i].bShuffle = true;
							break;
						}
						case "numeric":
						{
							oCurObj.data.aQuestions[i].sScoringType = jxQuestion.children("q_scoring_type_choice").text();
							oCurObj.data.aQuestions[i].jxVars = jxQuestion.find("q_variants_numeric > item");
							oCurObj.data.aQuestions[i].sOp = jxQuestion.children("q_var_logic_numeric").text();
							break;
						}
						case "fib":
						{
							oCurObj.data.aQuestions[i].sScoringType = jxQuestion.children("q_scoring_type_choice").text();
							oCurObj.data.aQuestions[i].jxVars = jxQuestion.find("q_variants_fib > item");
							oCurObj.data.aQuestions[i].sOp = jxQuestion.children("q_var_logic_fib").text();
							break;
						}
						case "oto":
						{
							oCurObj.data.aQuestions[i].sScoringType = jxQuestion.children("q_scoring_type_choice").text();
							oCurObj.data.aQuestions[i].jxVars = jxQuestion.find("q_variants_oto > item");
							break;
						}
					}
				}
// detect mode
				if(CLZ.oStore[argobj.pid]!=null)
				{
					switch(CLZ.oStore[argobj.pid].u)
					{
						case "c":
						{
							switch(oCurObj.jxParams.children("repeat_test").text())
							{
								case "no":
								{
									oCurObj.data.sMode = "browse";
									alert(oCurObj.jxParams.children("t_browse_alert").text());
									break;
								}
								case "yes":
								{
									if(confirm(oCurObj.jxParams.children("t_secondrun_confirm").text()))
									{
										CLZ.oStore[argobj.pid] = {};
										CLZ.oStore[argobj.pid] = null;
										if(oCurObj.data.bCredit)
										{
											for(var i=0; i<oCurObj.data.aQuestions.length; i++)
											{
												for(var j=0; j<oCurObj.data.aQuestions[i].aObjectives.length; j++)
												{
													CL.SCO.RemoveScoreFromObjective({ sId: oCurObj.data.aQuestions[i].aObjectives[j].sId, sSrcId: argobj.pid + "_" + i });
												}
											}
										}
									}
									else
									{
										oCurObj.data.sMode = "browse";
									}
									break;
								}
							}
							break;
						}
						case "i":
						{
							alert(oCurObj.jxParams.children("t_continue_alert").text());
							oCurObj.data.sMode = "continue";
							break;
						}
						default:
						{
							CLZ.oStore[argobj.pid] = {};
							CLZ.oStore[argobj.pid] = null;
							if(oCurObj.data.bCredit)
							{
								for(var i=0; i<oCurObj.data.aQuestions.length; i++)
								{
									for(var j=0; j<oCurObj.data.aQuestions[i].aObjectives.length; j++)
									{
										CL.SCO.RemoveScoreFromObjective({ sId: oCurObj.data.aQuestions[i].aObjectives[j].sId, sSrcId: argobj.pid + "_" + i });
									}
								}
							}
							break;
						}
					}
				}
// create storage
				if(oCurObj.data.sMode=="init")
				{
					CLZ.oStore[argobj.pid] =
					{
						P: [],
						Q: [],
						R: [],
						s: (new Date()).valueOf(),
						y: "o",
						u: "i"
					};
					if(oCurObj.data.bTestTimer)
					{
						var iTimerM = +oCurObj.jxParams.children("test_timer").text();
						var iTimerS = +oCurObj.jxParams.children("test_timer_s").text();
						if(isNaN(iTimerM) && isNaN(iTimerS))
						{
							oCurObj.data.bTimer = false;
						}
						else
						{
							var iTimer = 0;
							if(!isNaN(iTimerM))
							{
								iTimer = 60*iTimerM;
							}
							if(!isNaN(iTimerS))
							{
										iTimer += iTimerS;
							}
							CLZ.oStore[argobj.pid].t = iTimer;
							CLZ.oStore[argobj.pid].e = 0;
						}
					}
					if(oCurObj.data.bRandom)
					{
						var iToPlay = +oCurObj.jxParams.children("random_quantity").text();
						if(iToPlay > oCurObj.data.jxQuestions.length)
						{
							iToPlay = oCurObj.data.jxQuestions.length;
						}
						var aShuffled = [];
						for(var i=0; i<iToPlay; i++) aShuffled[i] = CLTOOLS.Dice({ iMax: oCurObj.data.jxQuestions.length, bIncludeMax: false, aUsed: aShuffled, iMaxTries: 1000 });
						for(var i=0; i<iToPlay; i++) CLZ.oStore[argobj.pid].P.push(aShuffled[i]);
					}
					else
					{
						for(var i=0; i<oCurObj.data.jxQuestions.length; i++) CLZ.oStore[argobj.pid].P.push(i);
					}
					var oQuestion;
					var jxQuestion;
					var iIdx;
					for(var i=0; i<CLZ.oStore[argobj.pid].P.length; i++)
					{
						iIdx = +CLZ.oStore[argobj.pid].P[i];
						jxQuestion = $(oCurObj.data.jxQuestions[iIdx]);
						oQuestion = oCurObj.data.aQuestions[iIdx];
						CLZ.oStore[argobj.pid].Q[i] =
						{
							A:
							[
								{
									R: [],
									s: 0,
									d: 0,
									u: "i"
								}
							],
							O: [],
							P: [],
							R: [],
							s: 0,
							i: iIdx,
							y: CLD.CLTypeToAbbr[oQuestion.sType],
							u: (oCurObj.data.sDisplayAs=="list") ? "i" : "n"
						};
						if(oCurObj.data.bCredit)
						{
							CLZ.oStore[argobj.pid].Q[i].J = [];
							for(var j=0; j<oQuestion.aObjectives.length; j++)
							{
								CLZ.oStore[argobj.pid].Q[i].J.push( oQuestion.aObjectives[j].sId );
							}
						}
						if(oQuestion.bTimer && oCurObj.data.sDisplayAs!="list")
						{
							CLZ.oStore[argobj.pid].Q[i].t = oQuestion.iTimer;
							CLZ.oStore[argobj.pid].Q[i].e = 0;
						}
						switch(oQuestion.sType)
						{
							case "true-false":
							{
								CLZ.oStore[argobj.pid].Q[i].P.push( (jxQuestion.children("q_eval").text()=="true") ? 1 : 0 ); //no complex scoring
								if(jxQuestion.children("q_elements_order").text()=="random")
								{
									var aShuffled = [];
															for(var j=0; j<2; j++) aShuffled[j] = CLTOOLS.Dice({ iMax: 2, bIncludeMax: false, aUsed: aShuffled, iMaxTries: 1000 });
															for(var j=0; j<2; j++) CLZ.oStore[argobj.pid].Q[i].O.push(aShuffled[j]);
								}
								else
								{
									CLZ.oStore[argobj.pid].Q[i].O = [ 0, 1 ];
								}
								// always 1 attempt
								break;
							}
							case "choice":
							{
								for(var j=1; j<=oQuestion.jxVars.length; j++) // no complex scoring
								{
									if($(oQuestion.jxVars[j-1]).children("q_right").text()=="yes")
									{
										CLZ.oStore[argobj.pid].Q[i].P.push(j);
										break;
									}
								}
								if(oQuestion.bShuffle)
								{
									var aShuffled = [];
									for(var j=0; j<oQuestion.jxVars.length; j++) aShuffled.push( CLTOOLS.Dice({ iMax: oQuestion.jxVars.length, bIncludeMax: false, aUsed: aShuffled, iMaxTries: 1000 }) );
									for(var j=0; j<oQuestion.jxVars.length; j++) CLZ.oStore[argobj.pid].Q[i].O.push(aShuffled[j]+1);
								}
								else
								{
									for(var j=1; j<=oQuestion.jxVars.length; j++)
									{
										CLZ.oStore[argobj.pid].Q[i].O.push(j);
									}
								}
								if(oCurObj.data.sDisplayAs!="list")
								{
									var iMaxAttepmts = 1;
									if(jxQuestion.children("q_attempts_type").text()=="auto")
									{
										iMaxAttepmts = oQuestion.jxVars.length - 1;
									}
									else
									{
										iMaxAttepmts = +jxQuestion.children("q_attempts").text();
									}
									for(var j=1; j<iMaxAttepmts; j++)
									{
										CLZ.oStore[argobj.pid].Q[i].A.push({ u: "n" });
									}
								}
								break;
							}
							case "select":
							{
								for(var j=1; j<=oQuestion.jxVars.length; j++)
								{
									if($(oQuestion.jxVars[j-1]).children("q_right").text()=="yes")
									{
										CLZ.oStore[argobj.pid].Q[i].P.push(j);
									}
								}
								if(oQuestion.bShuffle)
								{
									var aShuffled = [];
									for(var j=0; j<oQuestion.jxVars.length; j++) aShuffled.push( CLTOOLS.Dice({ iMax: oQuestion.jxVars.length, bIncludeMax: false, aUsed: aShuffled, iMaxTries: 1000 }) );
									for(var j=0; j<oQuestion.jxVars.length; j++) CLZ.oStore[argobj.pid].Q[i].O.push(aShuffled[j]+1);
								}
								else
								{
									for(var j=1; j<=oQuestion.jxVars.length; j++)
									{
										CLZ.oStore[argobj.pid].Q[i].O.push(j);
									}
								}
								if(oCurObj.data.sDisplayAs!="list")
								{
									var iMaxAttepmts = 1;
									if(jxQuestion.children("q_attempts_type").text()=="auto")
									{
										iMaxAttepmts = oQuestion.jxVars.length - 1;
									}
									else
									{
										iMaxAttepmts = +jxQuestion.children("q_attempts").text();
									}
									for(var j=1; j<iMaxAttepmts; j++)
									{
										CLZ.oStore[argobj.pid].Q[i].A.push({ u: "n" });
									}
								}
								break;
							}
							case "order":
							case "oto":
							{
								for(var j=1; j<=oQuestion.jxVars.length; j++)
								{
									CLZ.oStore[argobj.pid].Q[i].P.push(j);
								}
								var aShuffled = [];
								for(var j=0; j<oQuestion.jxVars.length; j++) aShuffled.push( CLTOOLS.Dice({ iMax: oQuestion.jxVars.length, bIncludeMax: false, aUsed: aShuffled, iMaxTries: 1000 }) );
								for(var j=0; j<oQuestion.jxVars.length; j++)
								{
									CLZ.oStore[argobj.pid].Q[i].O.push(aShuffled[j]+1);
									CLZ.oStore[argobj.pid].Q[i].R.push(aShuffled[j]+1);
								}
								if(oCurObj.data.sDisplayAs!="list")
								{
									var iMaxAttepmts = 1;
									if(jxQuestion.children("q_attempts_type").text()=="auto")
									{
										iMaxAttepmts = oQuestion.jxVars.length - 1;
									}
									else
									{
										iMaxAttepmts = +jxQuestion.children("q_attempts").text();
									}
									for(var j=1; j<iMaxAttepmts; j++)
									{
										CLZ.oStore[argobj.pid].Q[i].A.push({ u: "n" });
									}
								}
								break;
							}
							case "numeric":
							case "fib":
							{
								var oPattern;
								var aConds;
								var jVar;
								var jConds;
								for(var j=1; j<=oQuestion.jxVars.length; j++)
								{
									jVar = $(oQuestion.jxVars[j-1]);
									jConds = jVar.find("q_conditions > item");
									oPattern = { sOp: jVar.children("q_cond_logic").text() };
									if(jConds.length != 0)
									{
                                        aConds = [];
										if (oQuestion.sType == "fib") {
											for (var k = 0; k < jConds.length; k++)
                                            {
												aConds.push({
													op: $(jConds[k]).children("q_condition").text(),
													val: $(jConds[k]).children("q_value").text(),
													cs: ($(jConds[k]).children("q_case").text() == "yes")
												})
                                            }
                                        }
                                        else
                                        {
											for (var k = 0; k < jConds.length; k++)
                                            {
												aConds.push({
													op: $(jConds[k]).children("q_condition").text(),
													val: +$(jConds[k]).children("q_value").text()
												})
                                            }
                                        }
                                        oPattern.aConds = aConds.slice(0);
                                        CLZ.oStore[argobj.pid].Q[i].P.push(oPattern);
                                    }
									CLZ.oStore[argobj.pid].Q[i].R.push("");
								}
								for(var j=1; j<=oQuestion.jxVars.length; j++)
								{
									CLZ.oStore[argobj.pid].Q[i].O.push(j);
								}
								if(oCurObj.data.sDisplayAs!="list")
								{
									var iMaxAttepmts = 1;
									if(jxQuestion.children("q_attempts_type").text()=="auto")
									{
										iMaxAttepmts = oQuestion.jxVars.length - 1;
									}
									else
									{
										iMaxAttepmts = +jxQuestion.children("q_attempts").text();
									}
									for(var j=1; j<iMaxAttepmts; j++)
									{
										CLZ.oStore[argobj.pid].Q[i].A.push({ u: "n" });
									}
								}
								break;
							}
						}
					}
				}
				jCurObjDiv.find(".q-feedback-btn").on("click", function (e) { oCurObj.CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
				oCurObj.data.bCreated = true;
				if(!bDefer)
				{
					oCurObj.CallMethod({ sMethod: "Init" });
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="Init" label="_Init" access="private">
			<params></params>
			<body>
			<![CDATA[function Init(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				if(oCurObj.data.bInit==true)
				{
					return false;
				}
				var jCurObjDiv = $(oCurObj.div);
				var iQId;
				var jxQuestion;
				var sIntId;
				var oStore = CLZ.oStore[argobj.pid];
				var oQStore;
				switch(oCurObj.data.sDisplayAs)
				{
					case "page":
					{
						switch(oCurObj.data.sMode)
						{
							case "init":
							{
								for(var i=0; i<oStore.P.length; i++)
								{
									iQId = +oStore.P[i];
									for(var j=0; j<oStore.Q.length; j++)
									{
										if(+oStore.Q[j].i==iQId)
										{
											oQStore = oStore.Q[j];
											break;
										}
									}
									oQStore = oStore.Q[i];
									oCurObj.CallMethod({ sMethod: "AppendQuestion", oMethodArgs: { qid: iQId, iNum: (i+1) } });
								}
								oCurObj.CallMethod({ sMethod: "InitRail" });
								oCurObj.CallMethod({ sMethod: "AdjustArea" });
								oCurObj.CallMethod({ sMethod: "DisplayQuestion", oMethodArgs: { qid: oStore.P[0] } });
								oCurObj.CallMethod({ sMethod: "UpdateRail" });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "hide" } });
								if(oCurObj.data.bTestTimer)
								{
									oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "init" } });
								}
								jCurObjDiv.find(".cl-btn, .cl-t-progress-item-btn").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								oCurObj.data.bInit = true;
								break;
							}
							case "continue":
							{
								var oQStore;
								for(var i=0; i<oStore.P.length; i++)
								{
									iQId = +oStore.P[i];
									for(var j=0; j<oStore.Q.length; j++)
									{
										if(+oStore.Q[j].i==iQId)
										{
											oQStore = oStore.Q[j];
											break;
										}
									}
									oCurObj.CallMethod({ sMethod: "AppendQuestion", oMethodArgs: { qid: iQId, iNum: (i+1) } });
									if(oQStore.u!="n")
									{
										oCurObj.CallMethod({ sMethod: "RestoreQuestionState", oMethodArgs: { qid: iQId } });
										if(oQStore.u=="c")
										{
											oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: [ iQId ] } });
										}
									}
								}
								oCurObj.CallMethod({ sMethod: "AdjustArea" });
								var iFirstUnfinished = oCurObj.CallMethod({ sMethod: "FirstUnfinished" });
								if(iFirstUnfinished==-1)
								{
									oCurObj.CallMethod({ sMethod: "DisplayQuestion", oMethodArgs: { qid: oStore.P[0] } });
								}
								else
								{
									oCurObj.CallMethod({ sMethod: "DisplayQuestion", oMethodArgs: { qid: oStore.P[iFirstUnfinished] } });
								}
								oCurObj.CallMethod({ sMethod: "InitRail" });
								oCurObj.CallMethod({ sMethod: "UpdateRail" });
								if(oCurObj.data.bTestTimer)
								{
									oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "proceed" } });
								}
								jCurObjDiv.find(".cl-btn, .cl-t-progress-item-btn").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "hide" } });
								oCurObj.data.bInit = true;
								break;
							}
							case "browse":
							{
								for(var i=0; i<oStore.P.length; i++)
								{
									iQId = +oStore.P[i];
									oCurObj.CallMethod({ sMethod: "AppendQuestion", oMethodArgs: { qid: iQId, iNum: (i+1) } });
									oCurObj.CallMethod({ sMethod: "RestoreQuestionState", oMethodArgs: { qid: iQId } });
								}
								oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: oStore.P }});
								oCurObj.CallMethod({ sMethod: "AdjustArea" });
								oCurObj.CallMethod({ sMethod: "DisplayQuestion", oMethodArgs: { qid: oStore.P[0] } });
								oCurObj.CallMethod({ sMethod: "InitRail" });
								oCurObj.CallMethod({ sMethod: "UpdateRail" });
								if(oCurObj.data.bTestTimer)
								{
									oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "restore" } });
								}
								jCurObjDiv.find(".cl-t-progress-item-btn").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "hide" } });
								jCurObjDiv.find(".cl-t-footer-cell-center").html((oCurObj.data.sTestResult=="t") ? oCurObj.jxParams.find("t_stop_msg").text() : oCurObj.jxParams.find("t_allanswered_msg").text());
								oCurObj.data.bInit = true;
								break;
							}
						}
						break;
					}
					case "list":
					{
						switch(oCurObj.data.sMode)
						{
							case "init":
							{
								for(var i=0; i<oStore.P.length; i++)
								{
									iQId = +oStore.P[i];
									for(var j=0; j<oStore.Q.length; j++)
									{
										if(+oStore.Q[j].i==iQId)
										{
											oQStore = oStore.Q[j];
											break;
										}
									}
									oCurObj.CallMethod({ sMethod: "AppendQuestion", oMethodArgs: { qid: iQId, iNum: (i+1) } });
									if(oQStore.u=="n")
									{
										oQStore.u = "i";
										oQStore.s = 0;
										oQStore.A[0].s = 0;
										oQStore.A[0].u = "i";
									}
								}
								oCurObj.CallMethod({ sMethod: "InitRail" });
								oCurObj.CallMethod({ sMethod: "AdjustArea" });
								if(oCurObj.jxParams.children("allow_partial_answer").text()!="yes" || oCurObj.data.sDisplayAs=="page")
								{
									oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
								}
								if(oCurObj.data.bTestTimer)
								{
									oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "init" } });
								}
								jCurObjDiv.find(".cl-btn, .cl-t-progress-item-btn").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								break;
							}
							case "continue":
							{
								var iFirstUnanswered = oCurObj.CallMethod({ sMethod: "FirstUnanswered" });
								for(var i=0; i<oStore.P.length; i++)
								{
									iQId = +oStore.P[i];
									for(var j=0; j<oStore.Q.length; j++)
									{
										if(+oStore.Q[j].i==iQId)
										{
											oQStore = oStore.Q[j];
											break;
										}
									}
									oCurObj.CallMethod({ sMethod: "AppendQuestion", oMethodArgs: { qid: iQId, iNum: (i+1) } });
									if(oQStore.u!="n")
									{
										oCurObj.CallMethod({ sMethod: "RestoreQuestionState", oMethodArgs: { qid: iQId } });
									}
								}
								oCurObj.CallMethod({ sMethod: "InitRail" });
								oCurObj.CallMethod({ sMethod: "UpdateRail" });
								oCurObj.CallMethod({ sMethod: "AdjustArea" });
								if(oCurObj.jxParams.children("allow_partial_answer").text()!="yes" || oCurObj.data.sDisplayAs=="page")
								{
									oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
								}
								if(oCurObj.data.bTestTimer)
								{
									oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "proceed" } });
								}
								jCurObjDiv.find(".cl-btn, .cl-t-progress-item-btn").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								if(iFirstUnanswered!=-1)
								{
									oCurObj.CallMethod({ sMethod: "GoTo", oMethodArgs: { qid: iFirstUnanswered } });
								}
								break;
							}
							case "browse":
							{
								for(var i=0; i<oStore.P.length; i++)
								{
									iQId = +oStore.P[i];
									for(var j=0; j<oStore.Q.length; j++)
									{
										if(+oStore.Q[j].i==iQId)
										{
											oQStore = oStore.Q[j];
											break;
										}
									}
									oCurObj.CallMethod({ sMethod: "AppendQuestion", oMethodArgs: { qid: iQId, iNum: (i+1) } });
									oCurObj.CallMethod({ sMethod: "RestoreQuestionState", oMethodArgs: { qid: iQId } });
								}
								oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: oStore.P } });
								oCurObj.CallMethod({ sMethod: "InitRail" });
								oCurObj.CallMethod({ sMethod: "UpdateRail" });
								oCurObj.CallMethod({ sMethod: "AdjustArea" });
								if(oCurObj.data.bTestTimer)
								{
									oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "restore" } });
								}
								jCurObjDiv.find(".cl-t-progress-item-btn").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
								jCurObjDiv.find(".cl-t-footer-cell-center").html((oCurObj.data.sTestResult=="t") ? oCurObj.jxParams.find("t_stop_msg").text() : oCurObj.jxParams.find("t_allanswered_msg").text());
								break;
							}
						}
						break;
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="AppendQuestion" label="_AppendQuestion" access="private">
			<params></params>
			<body>
			<![CDATA[function AppendQuestion(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jxQuestion = $(oCurObj.data.jxQuestions[+argobj.qid]);
				var oQStore = CLZ.oStore[argobj.pid].Q[+argobj.iNum-1];
				var oQuestion = oCurObj.data.aQuestions[+oQStore.i];
				var sQType = oQuestion.sType;
				var jQuestion = $(document.createElement("div")).addClass("q-question").attr({ "id": argobj.pid + "_Q_" + argobj.qid, "data-q-num": argobj.qid }).appendTo(jCurObjDiv.find(".cl-t-workarea"));
				if(oCurObj.data.sDisplayAs=="list")
				{
					var sString = oCurObj.jxParams.children("string_question_count").text();
					var aParts = sString.split("{{1}}");
					sString = aParts.join(argobj.iNum.toString());
					aParts = sString.split("{{2}}");
					sString = aParts.join(CLZ.oStore[argobj.pid].P.length.toString());
					jCurObjDiv.find(".template-storage div[data-template='qnumber']").clone(true).removeAttr("data-template").html(sString).appendTo(jQuestion);
				}
				if(jxQuestion.children("display_question_text").text()=="yes")
				{
					jCurObjDiv.find(".template-storage div[data-template='qtext']").clone(true).removeAttr("data-template").html(jxQuestion.children("text_main").text() ).appendTo(jQuestion);
				}
				if(oCurObj.data.bDisplayGoal)
				{
					jCurObjDiv.find(".template-storage div[data-template='qgoal']").clone(true).removeAttr("data-template").html( oCurObj.jxParams.children("q_goal_" + sQType).text() ).appendTo(jQuestion);
				}
				switch(sQType)
				{
					case "true-false":
					{
						var sLayout = jxQuestion.children("q_elements_layout").text();
						var jQBlock = jCurObjDiv.find(".template-storage div[data-template='qvars-true-false-" + sLayout + "']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-selection": "" }).appendTo(jQuestion);
						var sOrder = jxQuestion.children("q_elements_order").text();
						if(sOrder=="random")
						{
							sOrder = (Math.round(Math.random())==1) ? "tf" : "ft";
						}
						var jVar;
						if(sLayout=="v")
						{
							var jPlaces = jQBlock;
							if(sOrder=="tf")
							{
								jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-tf']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": "1" }).appendTo(jPlaces[0]);
								jVar.find(".text-main").html( jxQuestion.children("q_text_true").text() );
								jVar.addClass("var-clickable").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-tf']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": "0" }).appendTo(jPlaces[0]);
								jVar.find(".text-main").html( jxQuestion.children("q_text_false").text() );
								jVar.addClass("var-clickable").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
							}
							else
							{
								jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-tf']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": "1" }).appendTo(jPlaces[0]);
								jVar.find(".text-main").html( jxQuestion.children("q_text_false").text() );
								jVar.addClass("var-clickable").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-tf']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": "0" }).appendTo(jPlaces[0]);
								jVar.find(".text-main").html( jxQuestion.children("q_text_true").text() );
								jVar.addClass("var-clickable").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
							}
						}
						else
						{
							var jPlaces = jQBlock.find("*[data-append]");
							if(sOrder=="tf")
							{
								jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-tf']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": "1" }).appendTo(jPlaces[0]);
								jVar.find(".text-main").html( jxQuestion.children("q_text_true").text() );
								jVar.addClass("var-clickable").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-tf']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": "0" }).appendTo(jPlaces[1]);
								jVar.find(".text-main").html( jxQuestion.children("q_text_false").text() );
								jVar.addClass("var-clickable").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
							}
							else
							{
								jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-tf']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": "0" }).appendTo(jPlaces[0]);
								jVar.find(".text-main").html( jxQuestion.children("q_text_false").text() );
								jVar.addClass("var-clickable").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
								jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-tf']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": "1" }).appendTo(jPlaces[1]);
								jVar.find(".text-main").html( jxQuestion.children("q_text_true").text() );
								jVar.addClass("var-clickable").on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
							}
						}
						break;
					}
					case "choice":
					case "select":
					{
						var jxVars = jxQuestion.find("q_variants_" + sQType + " > item");
						var jQBlock = jCurObjDiv.find(".template-storage div[data-template='qvars-" + sQType + "']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-selection": "" }).appendTo(jQuestion);
						var jVar;
						for(var i=0; i<oQStore.O.length; i++)
						{
							jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-" + sQType + "']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": oQStore.O[i] }).appendTo(jQBlock);
							jVar.find(".text-main").html( $(jxVars[+oQStore.O[i] - 1]).children("q_variant").text() );
							jVar.addClass("var-clickable").on("click", function (e) { oCurObj.CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
						}
						break;
					}
					case "numeric":
					case "fib":
					{
						var jxVars = jxQuestion.find("q_variants_" + sQType + " > item");
						var jQBlock = jCurObjDiv.find(".template-storage div[data-template='qvars-" + sQType + "']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid }).appendTo(jQuestion);
						var jVar;
						for(var i=0; i<jxVars.length; i++)
						{
							jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-" + sQType + "']").clone(true).appendTo(jQBlock);
							jVar.removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": (i+1) });
							jVar.find(".text-main").html($(jxVars[i]).children("q_explanation").text());
							jVar.find("input").on("keyup", function (e) { oCurObj.CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); }).on("blur", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
							if($(jxVars[i]).children("q_exp_position").length!=0)
							{
								if($(jxVars[i]).children("q_exp_position").text()=="left")
								{
									jVar.find(".cl-var-exp-right").remove();
									jVar.find(".var-spot-td").addClass("cl-var-input-cell-left");
								}
								else
								{
									jVar.find(".cl-var-exp-left").remove();
									jVar.find(".var-spot-td").addClass("cl-var-input-cell-right");
								}
							}
							else
							{
								jVar.find(".cl-var-exp-left").remove();
								jVar.find(".var-spot-td").addClass("cl-var-input-cell-right");
							}
						}
						break;
					}
					case "order":
					{
						var jxVars = jxQuestion.find("q_variants_order > item");
						var jQBlock = jCurObjDiv.find(".template-storage div[data-template='qvars-order']").clone(true).removeAttr("data-template").attr({ "id": argobj.pid + "_" + argobj.qid + "_VC", "data-type": sQType, "data-qid": argobj.qid }).appendTo(jQuestion);
						var jVar;
						for(var i=0; i<oQStore.O.length; i++)
						{
							jVar = jCurObjDiv.find(".template-storage div[data-template='qvar-order']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": oQStore.O[i] }).appendTo(jQBlock);
							jVar.find(".text-main").html( $(jxVars[oQStore.O[i]-1]).children("q_variant").text() );
							jVar.addClass("unselectable cl-drag var-order-elem");
						}
						var jVars = jQBlock.find(".var");
						jVars.each(function ()
						{
							$(this).draggable(
							{
								snap: false,
								refreshPositions: false,
								containment: CLZ.nZoom==1 ? $(CL.oBoard) : false,
								axis: "y",
								stack: ".var-order-elem",
								revert: "invalid",
								scope: argobj.pid + "_" + argobj.qid,
								drag: function (event, ui)
								{
									if(CLZ.nZoom!=1) // zoom fix
									{
										ui.position.top = ui.position.top / CLZ.nZoom;
										ui.position.left = ui.position.left / CLZ.nZoom;
									}
								},
								stop: function (event, ui)
								{
									jVars.css({ "box-shadow": "none" }); // order needs no adjusting
								}
							}).droppable(
							{
								accept: ".var-order-elem",
								scope: argobj.pid + "_" + argobj.qid,
								tolerance: "intersect",
								over: function (event, ui)
								{
									$(this).css({ "box-shadow": "0 0 0.5em " + $(this).css("border-color") })
								},
								out: function (event, ui)
								{
									$(this).css({ "box-shadow": "none" })
								},
								drop: function(event, ui)
								{
									oCurObj.CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: event, elem: this, bullet: ui.draggable } })
								}
							});
						});
						if(jVars.length!=0)
						{
							var iLeft = $(jVars[0]).position().left;
							var aTops = [];
							jVars.each(function ()
							{
								aTops.push($(this).position().top);
							});
							jVars.attr({ "data-tops": aTops.join("|") });
							jQBlock.attr({ "data-order": oQStore.O.join("|") });
							jQBlock.css({ "height": jQBlock.height() + "px" });
						}
						break;
					}
					case "oto":
					{
						var jxVars = jxQuestion.find("q_variants_" + sQType + " > item");
						var jQBlock = jCurObjDiv.find(".template-storage div[data-template='qvars-" + sQType + "']").clone(true).removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid }).appendTo(jQuestion);

						var jTable = $(document.createElement("table")).addClass("oto-table").appendTo(jQBlock);
						var jTR;
						var jTD;
						var jTarget;
						var jBullet;
						for(var i=0; i<jxVars.length; i++)
						{
							jTR = $(document.createElement("tr")).appendTo(jTable);
							jTD = $(document.createElement("td")).addClass("left-part").appendTo(jTR);
							jTarget = jCurObjDiv.find(".template-storage div[data-template='qvar-oto-target']").clone(true).appendTo(jTD);
							jTarget.removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": (i+1) });
							jTarget.find(".text-main").html($(jxVars[i]).children("q_target").text());
							jTD = $(document.createElement("td")).addClass("center-part").appendTo(jTR);
							jTD.append( $(document.createElement("div")).addClass("oto-connector").html("&nbsp;") );
							jTD = $(document.createElement("td")).addClass("right-part").appendTo(jTR);
							jBullet = jCurObjDiv.find(".template-storage div[data-template='qvar-oto-bullet']").clone(true).appendTo(jTD);
							jBullet.removeAttr("data-template").attr({ "data-type": sQType, "data-qid": argobj.qid, "data-vid": (i+1) });
							jBullet.find(".text-main").html($(jxVars[i]).children("q_bullet").text());
						}

						// resize and distribute
						var jTargets = jQBlock.find(".var-target");
						var jBullets = jQBlock.find(".var-bullet");
						jTargets.each(function () { $(this).css({ "width": $(this).width + "px" }) });
						jBullets.each(function () { $(this).css({ "width": $(this).width + "px" }) });
						var iHMax = 0;
						jTargets.each(function () { if($(this).find(".target-text-cell").height() > iHMax) { iHMax = $(this).find(".target-text-cell").height() }  });
						jBullets.each(function () { if($(this).find(".bullet-text-cell").height() > iHMax) { iHMax = $(this).find(".bullet-text-cell").height() }  });
						jTargets.find(".target-text-cell").height(iHMax);
						jBullets.find(".bullet-text-cell").height(iHMax);
						jTargets.each(function () { $(this).height($(this.height)) });
						var aTops = [];
						jBullets.each(function ()
						{
							$(this).css( { "height": $(this).height + "px", "width": $(this).width() + "px" });
							var oPos = $(this).position();
							aTops.push(oPos.top/CLZ.nZoom);
							var jParent = $(this).parent();
							$(this).css({ "position": "absolute", "left": (oPos.left/CLZ.nZoom) + "px", "top": aTops[aTops.length-1] + "px", "z-index": 1000 }).appendTo(jQBlock);
							$(this).addClass("unselectable cl-drag").draggable(
							{
								snap: false,
								refreshPositions: false,
								containment: CLZ.nZoom==1 ? $(CL.oBoard) : false,
								axis: "y",
								stack: ".var-bullet",
								revert: "invalid",
								drag: function (event, ui)
								{
									if(CLZ.nZoom!=1) // zoom fix
									{
										ui.position.top = ui.position.top / CLZ.nZoom;
										ui.position.left = ui.position.left / CLZ.nZoom;
									}
								},
								stop: function (event, ui)
								{
									jBullets.css({ "box-shadow": "none" });
									oCurObj.CallMethod({ sMethod: "AdjustDraggables", oMethodArgs: { evt: event, elem: this, bullet: ui.draggable } });
								}
							}).droppable(
							{
								accept: ".var-bullet",
								tolerance: "intersect",
								over: function (event, ui)
								{
									$(this).css({ "box-shadow": "0 0 0.5em " + $(this).css("border-color") });
								},
								out: function (event, ui)
								{
									$(this).css({ "box-shadow": "none" });
								},
								drop: function(event, ui)
								{
									oCurObj.CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: event, elem: this, bullet: ui.draggable } });
								}
							});
						});
						jBullets.attr({ "data-tops": aTops.join("|") });
						var iIdx;
						for(var i=0; i<oQStore.O.length; i++)
						{
							jBullets.filter("[data-vid='" + oQStore.O[i] + "']").css({ "top": aTops[i] });
						}
						$(jBullets[0]).parent().attr({ "data-order": oQStore.O.join("|") });
						break;
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="AdjustDraggables" label="_AdjustDraggables" access="private">
			<params></params>
			<body>
			<![CDATA[function AdjustDraggables(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jParent = $(argobj.elem).parent();
				var jBullets = jParent.find(".var-bullet");
				var iQId = +argobj.elem.getAttribute("data-qid");
				var aTops = argobj.elem.getAttribute("data-tops").split("|");
				var aOrder = jParent.attr("data-order").split("|");
				for(var i=0; i<aOrder.length; i++)
				{
					jParent.children("[data-vid='" + aOrder[i] + "']").css({ top: aTops[i] + "px" });
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="DisplayQuestion" label="_DisplayQuestion" access="private">
			<params></params>
			<body>
			<![CDATA[function DisplayQuestion(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				jCurObjDiv.find(".q-question").hide();
				jCurObjDiv.find(".q-question[data-q-num='" + argobj.qid + "']").show();
				var iNumber = -1;
				var oQStore;
				for(var i=0; i<CLZ.oStore[argobj.pid].Q.length; i++)
				{
					if(+CLZ.oStore[argobj.pid].Q[i].i===argobj.qid)
					{
						iNumber = i;
						oQStore = CLZ.oStore[argobj.pid].Q[i];
						break;
					}
				}
				if(iNumber==-1) return false;
				var oQuestion = oCurObj.data.aQuestions[+oQStore.i];
				if(oQStore.u=="n") oQStore.u = "i";
				if(oQStore.s==0)
				{
					oQStore.s = (new Date()).valueOf() - CLZ.oStore[argobj.pid].s;
					if(oQuestion.bTimer)
					{
						oCurObj.CallMethod({ sMethod: "Timer", oMethodArgs: { qid: argobj.qid, sAction: "init" } });
					}
					else
					{
						oCurObj.CallMethod({ sMethod: "Timer", oMethodArgs: { qid: argobj.qid, sAction: "hide" } });
					}
				}
				else
				{
					oCurObj.CallMethod({ sMethod: "RestoreQuestionState", oMethodArgs: { qid: argobj.qid, inum: iNumber } });
					if(oQuestion.bTimer)
					{
						oCurObj.CallMethod({ sMethod: "Timer", oMethodArgs: { qid: argobj.qid, sAction: (oQStore.u=="c" ? "restore" : "proceed") } });
					}
					else
					{
						oCurObj.CallMethod({ sMethod: "Timer", oMethodArgs: { qid: argobj.qid, sAction: "hide" } });
					}
				}
				var iAtt = 0;
				for(var i=0; i<oQStore.A.length; i++)
				{
					if(oQStore.A[i].u!="c")
					{
						iAtt = i + 1;
						break;
					}
				}
				var sString = oCurObj.jxParams.children("string_question_attempts").text();
				var aParts = sString.split("{{2}}");
				sString = aParts.join(oQStore.A.length);
				aParts = sString.split("{{1}}");
				sString = aParts.join(iAtt);
				jCurObjDiv.find(".cl-t-attempts").html(sString);
				oCurObj.CallMethod({ sMethod: "UpdateRail" });
				oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "hide" } });
				if(oCurObj.data.sMode=="browse")
				{
					oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: [ argobj.qid ] } });
				}
				oCurObj.FireEvent({ sName: "onDisplayQuestion" });
				return true;
			}]]>
			</body>
		</method>
		<method name="DisableQuestions" label="_DisableQuestions" access="private">
			<params></params>
			<body>
			<![CDATA[function DisableQuestions(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jQuestion;
				var iIdx;
				var jQVars;
				var sQType;
				var jVars;
				for(var i=0; i<argobj.aTargets.length; i++)
				{
					iIdx = argobj.aTargets[i];
					jQuestion = jCurObjDiv.find(".q-question[data-q-num='" + iIdx + "']");
					if(jQuestion.hasClass("q-disabled"))
					{
						continue;
					}
					jQVars = jQuestion.find(".q-vars:first");
					sQType = jQVars.attr("data-type");
					switch(sQType)
					{
						case "true-false":
						case "choice":
						case "select":
						{
							jQVars.find(".var").removeClass("var-clickable").addClass("var-disabled");
							break;
						}
						case "order":
						{
							jQVars.find(".var").removeClass("cl-drag").addClass("var-disabled").draggable("destroy").droppable("destroy");
							break;
						}
						case "oto":
						{
							jQVars.find(".var-bullet").removeClass("cl-drag").addClass("var-disabled").draggable("destroy").droppable("destroy");
							break;
						}
						case "numeric":
						case "fib":
						{
							jQVars.find(".var-input").prop("disabled", true);
							break;
						}
					}
					jQuestion.addClass("q-disabled");
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="GoTo" label="_GoTo" access="private">
			<params></params>
			<body>
			<![CDATA[function GoTo(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var iIdx = argobj.qid;
				var jQuestion;
				oCurObj.CallMethod({ sMethod: "Feedback" });
				if(iIdx==null)
				{
					if(argobj.sDir==null || oCurObj.data.sDisplayAs=="list")
					{
						return false;
					}
					jQuestion = jCurObjDiv.find(".q-question:visible");
					iIdx = +jQuestion.attr("data-q-num");
					var i = $.inArray(iIdx, CLZ.oStore[argobj.pid].P);
					switch(argobj.sDir)
					{
						case "next":
						{
							if(i>=CLZ.oStore[argobj.pid].P.length-1)
							{
								i = oCurObj.CallMethod({ sMethod: "FirstUnfinished" });
								if((i>=CLZ.oStore[argobj.pid].P.length-1) || i<=0)
								{
									return false;
								}
								iIdx = CLZ.oStore[argobj.pid].P[i];
							}
							else
							{
								iIdx = CLZ.oStore[argobj.pid].P[i+1];
							}
							break;
						}
						case "back":
						{
							if(i<=0)
							{
								i = oCurObj.CallMethod({ sMethod: "FirstUnfinished" });
								if((i>=CLZ.oStore[argobj.pid].P.length-1) || i<=0)
								{
									return false;
								}
								iIdx = CLZ.oStore[argobj.pid].P[i];
							}
							else
							{
								iIdx = CLZ.oStore[argobj.pid].P[i-1];
							}
							break;
						}
					}
					if(iIdx==null) return false;
				}
				jQuestion = jCurObjDiv.find(".q-question[data-q-num='" + iIdx + "']");
				switch(oCurObj.data.sDisplayAs)
				{
					case "page":
					{
						oCurObj.CallMethod({ sMethod: "DisplayQuestion", oMethodArgs: { qid: iIdx } });
						break;
					}
					case "list":
					{
						var jWA = jCurObjDiv.find(".cl-t-workarea");
						jWA.animate({ scrollTop: jQuestion[0].offsetTop }, 400);
						break;
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="AdjustArea" label="_AdjustArea" access="private">
			<params></params>
			<body>
			<![CDATA[function AdjustArea(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jWA = jCurObjDiv.find(".cl-t-workarea");
				if(oCurObj.data.sDisplayAs=="list")
				{
					var jContainer = jCurObjDiv.find(".cl-t-container");
					var jHeader = jCurObjDiv.find(".cl-t-header");
					var jFooter = jCurObjDiv.find(".cl-t-footer");
					var iFullH = parseInt(oCurObj.initial.h, 10);
					var iBorder = parseInt(window.getComputedStyle(jContainer[0], null).getPropertyValue("border-top-width"), 10) + parseInt(window.getComputedStyle(jContainer[0], null).getPropertyValue("border-bottom-width"), 10);
					iBorder += parseInt(window.getComputedStyle(jHeader[0], null).getPropertyValue("border-top-width"), 10) + parseInt(window.getComputedStyle(jHeader[0], null).getPropertyValue("border-bottom-width"), 10);
					iBorder += parseInt(window.getComputedStyle(jWA[0], null).getPropertyValue("border-top-width"), 10) + parseInt(window.getComputedStyle(jWA[0], null).getPropertyValue("border-bottom-width"), 10);
					iBorder += parseInt(window.getComputedStyle(jFooter[0], null).getPropertyValue("border-top-width"), 10) + parseInt(window.getComputedStyle(jFooter[0], null).getPropertyValue("border-bottom-width"), 10);
					var iPadding = parseInt(window.getComputedStyle(jWA[0], null).getPropertyValue("padding-top"), 10) + parseInt(window.getComputedStyle(jWA[0], null).getPropertyValue("padding-bottom"), 10);
					var iH = iFullH - jHeader[0].offsetHeight - jFooter[0].offsetHeight - iPadding - iBorder;
					jWA.css({ "height": iH + "px" });
				}
				else if(oCurObj.data.sDisplayAs=="page")
				{
					if(oCurObj.jxParams.children("adjust_height").text()=="yes")
					{
						var jQuestions = jCurObjDiv.find(".q-question");
						var iMaxH = 0;
						jQuestions.each(function ()
						{
							var iQH = parseInt(window.getComputedStyle(this, null).getPropertyValue("height"), 10);
							if(iQH > iMaxH)
							{
								iMaxH = iQH;
							}
						});
						jWA.css({ "height": iMaxH + "px" });
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="InitRail" label="_InitRail" access="private">
			<params></params>
			<body>
			<![CDATA[function InitRail(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jRailItem = jCurObjDiv.find(".cl-t-progress-item");
				var iQNum;
				var sString = oCurObj.jxParams.children("string_question_count").text();
				var aParts = sString.split("{{2}}");
				sString = aParts.join(CLZ.oStore[argobj.pid].P.length.toString());
				for(var i=0; i<CLZ.oStore[argobj.pid].P.length; i++)
				{
					iQNum = CLZ.oStore[argobj.pid].P[i];
					$(jRailItem[i]).attr({ "data-q-num": iQNum });
					aParts = sString.split("{{1}}");
					$(jRailItem[i]).children(".cl-t-progress-item-btn").attr({ "title": aParts.join((i+1).toString()) });
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="UpdateRail" label="_UpdateRail" access="private">
			<params></params>
			<body>
			<![CDATA[function UpdateRail(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jQuestions = jCurObjDiv.find("div.q-question");
				var aTouched = [];
				var iIdx = -1;
				var oStore = CLZ.oStore[argobj.pid];
				var oQStore;
				for(var i=0; i<oStore.P.length; i++)
				{
					iIdx = +oStore.P[i];
					for(var j=0; j<oStore.Q.length; j++)
					{
						if(+oStore.Q[j].i==iIdx)
						{
							oQStore = oStore.Q[j];
							break;
						}
					}
					if(oQStore.A[0].R!=null)
					{
						if(oQStore.A[0].R.length!=0)
						{
							aTouched.push(iIdx);
						}
					}
				}
				var jRailItem = jCurObjDiv.find(".cl-t-progress-item");
				jRailItem.each(function ()
				{
					if($.inArray(+$(this).attr("data-q-num"), aTouched)!=-1)
					{
						$(this).removeClass("cl-unvisited cl-current").addClass("cl-visited");
					}
					else
					{
						$(this).removeClass("cl-visited cl-current").addClass("cl-unvisited");
					}
				});
				var sString;
				var aParts;
				if(oCurObj.data.sDisplayAs=="page")
				{
					var iIdx = +jQuestions.filter(":visible").attr("data-q-num")
					jCurObjDiv.find(".cl-t-progress-item[data-q-num='" + iIdx + "']").removeClass("cl-visited cl-unvisited").addClass("cl-current");
					sString = oCurObj.jxParams.children("string_question_count").text();
					aParts = sString.split("{{2}}");
					sString = aParts.join(oStore.P.length);
					aParts = sString.split("{{1}}");
					iIdx = $.inArray(iIdx, oStore.P) + 1;
					sString = aParts.join(iIdx);
					jCurObjDiv.find(".cl-t-info-line").html(sString);
				}
				sString = oCurObj.jxParams.children("string_answered").text();
				aParts = sString.split("{{1}}");
				sString = aParts.join(aTouched.length);
				aParts = sString.split("{{2}}");
				sString = aParts.join(oStore.P.length);
				jCurObjDiv.find(".cl-t-answered-info").html(sString);
				if(aTouched.length>=oStore.P.length)
				{
					oCurObj.data.bAllAnswered = true;
					if(oCurObj.data.sDisplayAs=="list")
					{
						oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } });
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="RestoreQuestionState" label="_RestoreQuestionState" access="private">
			<params></params>
			<body>
			<![CDATA[function RestoreQuestionState(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jxQuestion = $(oCurObj.data.jxQuestions[argobj.qid]);
				var iIdx = $.inArray(+argobj.qid, CLZ.oStore[argobj.pid].P);
				var oQStore = CLZ.oStore[argobj.pid].Q[iIdx];
				if(oQStore==null) return false;
				var oQuestion = oCurObj.data.aQuestions[+oQStore.i];
				var sQType = oQuestion.sType;
				if(argobj.bCorrect==true)
				{
					var jQuestion = jCurObjDiv.find(".q-question[data-q-num='" + argobj.qid + "']");
					var jQVars = jQuestion.find(".q-vars:first");
					jQuestion.find(".q-question-goal").html( oCurObj.jxParams.find("q_goal_right").text() );
					switch(sQType)
					{
						case "true-false":
						case "choice":
						{
							for(var i=0; i<oQStore.P.length; i++)
							{
								oCurObj.CallMethod({ sMethod: "HandleSpot", oMethodArgs: { jElem: jQuestion.find(".var[data-vid='" + oQStore.P[i] + "']") } });
							}
							break;
						}
						case "select":
						{
							var jElem;
							var iInPattern = -1;
							for(var i=0; i<oQStore.O.length; i++)
							{
								jElem = jQuestion.find(".var[data-vid='" + oQStore.O[i] + "']");
								iInPattern = $.inArray(+oQStore.O[i], oQStore.P);
								if(jElem.hasClass("var-selected"))
								{
									if(iInPattern==-1)
									{
										oCurObj.CallMethod({ sMethod: "HandleSpot", oMethodArgs: { jElem: jElem } });
									}
								}
								else
								{
									if(iInPattern!=-1)
									{
										oCurObj.CallMethod({ sMethod: "HandleSpot", oMethodArgs: { jElem: jElem } });
									}
								}
							}
							break;
						}
						case "order":
						{
							var jParent = jQuestion.find(".var").parent();
							for(var i=0; i<oQStore.P.length; i++)
							{
								jQuestion.find(".var[data-vid='" + oQStore.P[i] + "']").appendTo(jParent);
							}
							jQVars.attr({ "data-order": oQStore.P.join("|"), "data-touched": "1" });
							break;
						}
						case "oto":
						{
							var jBullets = jQuestion.find(".var-bullet");
							var jParent = $(jBullets[0]).parent();
							var aTops = $(jBullets[0]).attr("data-tops").split("|");
							for(var i=0; i<oQStore.R.length; i++)
							{
								jParent.children(".var-bullet[data-vid='"+ oQStore.P[i] +"']").css({ "top": aTops[i] + "px" });
							}
							jQVars.attr({ "data-order": oQStore.P.join("|"), "data-touched": "1" });
							break;
						}
						case "numeric":
						{
							var aParts;
							var sAnswerString = "";
							var oSigns = { "eq": "=", "gt": ">", "gte": ">=", "lt": "<", "lte": "<=", "ne": "!=" };
							var aAnswer = [];
							var aStrings = [];
							for(var i=0; i<oQStore.P.length; i++)
							{
								sAnswerString = "";
								if(oQStore.P[i].aConds.length==0)
								{
									sAnswerString = "*";
								}
								else
								{
									aStrings = [];
									for(var j=0; j<oQStore.P[i].aConds.length; j++)
									{
										aStrings.push(oSigns[oQStore.P[i].aConds[j].op] + oQStore.P[i].aConds[j].val);
									}
									sAnswerString += aStrings.join(" " + oQStore.P[i].sOp + " ");
								}
								jQuestion.find(".var[data-vid='" + (i+1) + "'] .var-input").val(sAnswerString);
							}
							jQVars.attr({ "data-touched": "1" });
							break;
						}
						case "fib":
						{
							var aParts;
							var sAnswerString = "";
							var aAnswer = [];
							var aStrings = [];
							for(var i=0; i<oQStore.P.length; i++)
							{
								sAnswerString = "";
								if(oQStore.P[i].aConds.length==0)
								{
									sAnswerString = "*";
								}
								else
								{
									aStrings = [];
									for(var j=0; j<oQStore.P[i].aConds.length; j++)
									{
										switch(oQStore.P[i].aConds[j].op)
										{
											case "eq":
											{
												aStrings.push("=" + oQStore.P[i].aConds[j].val);
												break;
											}
											case "ee":
											{
												aStrings.push("*" + oQStore.P[i].aConds[j].val);
												break;
											}
											case "bw":
											{
												aStrings.push(oQStore.P[i].aConds[j].val + "*");
												break;
											}
											case "cn":
											{
												aStrings.push("*" + oQStore.P[i].aConds[j].val + "*");
												break;
											}
										}
									}
									sAnswerString += aStrings.join(" " + oQStore.P[i].sOp + " ");
								}
								jQuestion.find(".var[data-vid='" + (i+1) + "'] .var-input").val(sAnswerString);
							}
							jQVars.attr({ "data-touched": "1" });
							break;
						}
					}
				}
				else if(oQStore.R.length!=0)
				{
					var jQuestion = jCurObjDiv.find(".q-question[data-q-num='" + argobj.qid + "']");
					var jQVars = jQuestion.find(".q-vars:first");
					switch(sQType)
					{
						case "true-false":
						case "choice":
						{
							for(var i=0; i<oQStore.R.length; i++)
							{
								oCurObj.CallMethod({ sMethod: "HandleSpot", oMethodArgs: { jElem: jQuestion.find(".var[data-vid='" + oQStore.R[i] + "']") } });
							}
							break;
						}
						case "select":
						{
							var jElem;
							for(var i=0; i<oQStore.R.length; i++)
							{
								jElem = jQuestion.find(".var[data-vid='" + oQStore.R[i] + "']");
								if(!jElem.hasClass("var-selected"))
								{
									oCurObj.CallMethod({ sMethod: "HandleSpot", oMethodArgs: { jElem: jElem } });
								}
							}
							break;
						}
						case "order":
						{
							var jParent = jQuestion.find(".var").parent();
							for(var i=0; i<oQStore.R.length; i++)
							{
								jQuestion.find(".var[data-vid='" + oQStore.R[i] + "']").appendTo(jParent);
							}
							jQVars.attr({ "data-order": oQStore.R.join("|"), "data-touched": "1" });
							break;
						}
						case "oto":
						{
							var jBullets = jQuestion.find(".var-bullet");
							var jParent = $(jBullets[0]).parent();
							var aTops = $(jBullets[0]).attr("data-tops").split("|");
							for(var i=0; i<oQStore.R.length; i++)
							{
								jParent.children(".var-bullet[data-vid='"+ oQStore.R[i] +"']").css({ "top": aTops[i] + "px" });
							}
							jQVars.attr({ "data-order": oQStore.R.join("|"), "data-touched": "1" });
							break;
						}
						case "numeric":
						case "fib":
						{
							var aParts;
							for(var i=0; i<oQStore.R.length; i++)
							{
								jQuestion.find(".var[data-vid='" + (i+1) + "'] .var-input").val(oQStore.R[i]);
							}
							jQVars.attr({ "data-touched": "1" });
							break;
						}
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="Button" label="_Button" access="private">
			<params></params>
			<body>
			<![CDATA[function Button(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jBtn = jCurObjDiv.find(".cl-btn").filter("[data-action='" + argobj.sBtn + "']");
				switch(argobj.sAction)
				{
					case "init":
					{
						jBtn.on("click", function (e) { CLO[argobj.pid].CallMethod({ sMethod: "UIEvent", oMethodArgs: { evt: e, elem: this } }); });
						break;
					}
					case "disable":
					{
						jBtn.removeClass("btn-idle").addClass("btn-disabled");
						break;
					}
					case "enable":
					{
						jBtn.show().removeClass("btn-disabled").addClass("btn-idle");
						break;
					}
					case "hide":
					{
						jBtn.hide();
						break;
					}
					case "show":
					{
						jBtn.show();
						break;
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="TestTimer" label="_TestTimer" access="private">
			<params></params>
			<body>
			<![CDATA[function TestTimer(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				if(oCurObj==null) return false;
				var jCurObjDiv = $(oCurObj.div);
				var jTimerDiv = jCurObjDiv.find(".cl-t-timer");
				var iValue = 0;
				switch(argobj.sAction)
				{
					case "init":
					{
						iValue = CLZ.oStore[argobj.pid].t;
						break;
					}
					case "proceed":
					case "restore":
					{
						iValue = CLZ.oStore[argobj.pid].t - CLZ.oStore[argobj.pid].e;
						if(iValue<0) iValue = 0;
						break;
					}
					case "stop":
					{
						clearTimeout(oCurObj.data.iTestTimeout);
						return false;
					}
					default:
					{
						CLZ.oStore[argobj.pid].e++;
						iValue = CLZ.oStore[argobj.pid].t - CLZ.oStore[argobj.pid].e;
						break;
					}
				}
				if(iValue < 0)
				{
					clearTimeout(oCurObj.data.iTestTimeout);
					oCurObj.FireEvent({ sName: "onTestTimeout" });
					oCurObj.CallMethod({ sMethod: "Submit", oMethodArgs: { sReason: "timeout", sTarget: "test" } });
					return false;
				}
				var oTime = CLTOOLS.FormatTime({ iValue: iValue });
				var sString = oCurObj.jxParams.children("string_test_time").text();
				var aParts = sString.split("{{1}}");
				sString = aParts.join(oTime.sMin);
				aParts = sString.split("{{2}}");
				sString = aParts.join(oTime.sSec);
				jTimerDiv.find(".cl-t-timer-value").html(sString);
				if(jTimerDiv.find(".cl-t-timer-progress").is(":visible"))
				{
					if(iValue!=CLZ.oStore[argobj.pid].t)
					{
						jTimerDiv.find(".cl-t-timer-progress .rnd-timer-svg-full").hide();
						jTimerDiv.find(".cl-t-timer-progress .rnd-timer-path").show();
						var sPath = "M12,12 L12,0 A12,12";
						if(iValue>=0.5*CLZ.oStore[argobj.pid].t)
						{
							sPath += " 1 1,1 ";
						}
						else
						{
							sPath += " 0 0,1 ";
						}
						var nAngle = 2*Math.PI*(1 - iValue/CLZ.oStore[argobj.pid].t);
						sPath += (12*(1 - Math.sin(nAngle))) + "," + (12*(1 - Math.cos(nAngle))) + " Z";
						jTimerDiv.find(".cl-t-timer-progress .rnd-timer-path").attr({ "d": sPath });
					}
				}
				else
				{
					jTimerDiv.find(".cl-t-timer-scale").css({ "left": (100*(1 - iValue/CLZ.oStore[argobj.pid].t)) + "%" });
				}
				if(iValue<=0)
				{
					clearTimeout(oCurObj.data.iTestTimeout);
					oCurObj.FireEvent({ sName: "onTestTimeout" });
					oCurObj.CallMethod({ sMethod: "Submit", oMethodArgs: { sReason: "timeout", sTarget: "test" } });
					return false;
				}
				if(argobj.sAction!="restore")
				{
					oCurObj.data.iTestTimeout = setTimeout(function () { oCurObj.CallMethod({ sMethod: "TestTimer" }); }, 1000);
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="FirstUnfinished" label="_FirstUnfinished" access="private">
			<params></params>
			<body>
			<![CDATA[function FirstUnfinished(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var iFirstUnfinished = -1;
				for(var i=0; i<CLZ.oStore[argobj.pid].P.length; i++)
				{
					if(iFirstUnfinished==-1)
					{
						if(CLZ.oStore[argobj.pid].Q[i].u!="c")
						{
							iFirstUnfinished = i;
							break;
						}
					}
				}
				return iFirstUnfinished;
			}]]>
			</body>
		</method>
		<method name="HasAnswer" label="_HasAnswer" access="private">
			<params></params>
			<body>
			<![CDATA[function HasAnswer(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var oStore = CLZ.oStore[argobj.pid];
				var oQStore;
				for(var j=0; j<oStore.Q.length; j++)
				{
					if(+oStore.Q[j].i==iIdx)
					{
						oQStore = oStore.Q[j];
						break;
					}
				}
				if(oQStore.A[0].R!=null)
				{
					if(oQStore.A[0].R.length!=0)
					{
						return true;
					}
				}
				return false;
			}]]>
			</body>
		</method>
		<method name="FirstUnanswered" label="_FirstUnanswered" access="private">
			<params></params>
			<body>
			<![CDATA[function FirstUnanswered(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var oStore = CLZ.oStore[argobj.pid];
				var iFirstUnanswered = -1;
				for(var j=0; j<oStore.Q.length; j++)
				{
					if(oStore.Q[j].A==null)
					{
						iFirstUnanswered = +oStore.Q[j].i;
						break;
					}
					if(oStore.Q[j].A.length==0)
					{
						iFirstUnanswered = +oStore.Q[j].i;
						break;
					}
					if(oStore.Q[j].A[0].R==null)
					{
						iFirstUnanswered = +oStore.Q[j].i;
						break;
					}
					if(oStore.Q[j].A[0].R.length==0)
					{
						iFirstUnanswered = +oStore.Q[j].i;
						break;
					}
					if(oStore.Q[j].A[0].R[0]=="")
					{
						iFirstUnanswered = +oStore.Q[j].i;
						break;
					}
				}
				return iFirstUnanswered;
			}]]>
			</body>
		</method>
		<method name="UIEvent" label="_UIEvent" access="private">
			<params></params>
			<body>
			<![CDATA[function UIEvent(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jElem;
				if($(argobj.elem).hasClass("var-spot-td"))
				{
					jElem = $(argobj.elem).parents(".var:first");
				}
				else
				{
					jElem = $(argobj.elem);
				}
				if(jElem.hasClass("var") || jElem.hasClass("var-bullet"))
				{
					if(jElem.hasClass("var-disabled")) return false;
					switch(argobj.evt.type)
					{
						case "mouseover":
						{
							if(CLZ.bSoundOn && oCurObj.data.sSoundOver!="none")
							{
								CL.Sound.CLPlay({ jPlayer: oCurObj.data.jAudioOver });
							}
							break;
						}
						case "mouseout":
						{
							if(CLZ.bSoundOn && oCurObj.data.sSoundOver!="none")
							{
								CL.Sound.CLStop({ jPlayer: oCurObj.data.jAudioOver });
							}
							break;
						}
						case "click":
						{
							if(CLZ.bSoundOn && oCurObj.data.sSoundClick!="none")
							{
								CL.Sound.CLPlay({ jPlayer: oCurObj.data.jAudioClick });
							}
							oCurObj.CallMethod({ sMethod: "HandleSpot", oMethodArgs: { evt: argobj.evt, jElem: jElem } });
							break;
						}
						case "drop":
						{
							argobj.evt.stopImmediatePropagation();
							oCurObj.CallMethod({ sMethod: "HandleOrder", oMethodArgs: { evt: argobj.evt, bullet: argobj.bullet, jElem: jElem } });
							break;
						}
					}
				}
				else if(jElem.hasClass("var-input"))
				{
					oCurObj.CallMethod({ sMethod: "HandleInput", oMethodArgs: { evt: argobj.evt, jElem: jElem } });
				}
				else if(jElem.hasClass("cl-btn"))
				{
					switch(argobj.evt.type)
					{
						case "click":
						{
							if(CLZ.bSoundOn && oCurObj.data.sSoundClick!="none")
							{
								CL.Sound.CLPlay({ jPlayer: oCurObj.data.jAudioClick });
							}
							if(jElem.attr("data-action")=="submit")
							{
								oCurObj.CallMethod({ sMethod: "Submit" });
							}
							else if(jElem.attr("data-action")=="next")
							{
								oCurObj.CallMethod({ sMethod: "GoTo", oMethodArgs: { sDir: "next" } });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "hide" } });
							}
							else if(jElem.attr("data-action")=="back")
							{
								//tManager({ pid: argobj.pid, sAction: "back" });
							}
							break;
						}
					}
				}
				else if(jElem.hasClass("q-feedback-btn"))
				{
					switch(argobj.evt.type)
					{
						case "click":
						{
							if(CLZ.bSoundOn && oCurObj.data.sSoundClick!="none")
							{
								CL.Sound.CLPlay({ jPlayer: oCurObj.data.jAudioClick });
							}
							oCurObj.CallMethod({ sMethod: "Feedback" });
							break;
						}
					}
				}
				else if(jElem.hasClass("cl-t-progress-item-btn"))
				{
					if(CLZ.bSoundOn && oCurObj.data.sSoundClick!="none")
					{
						CL.Sound.CLPlay({ jPlayer: oCurObj.data.jAudioClick });
					}
					oCurObj.CallMethod({ sMethod: "GoTo", oMethodArgs: { qid: +jElem.parent().attr("data-q-num") } });
				}
			}]]>
			</body>
		</method>
		<method name="HandleSpot" label="_HandleSpot" access="private">
			<params></params>
			<body>
			<![CDATA[function HandleSpot(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jElem = argobj.jElem;
				var sQType = jElem.attr("data-type");
				var iQId = +jElem.attr("data-qid");
				oCurObj.CallMethod({ sMethod: "Feedback" });
				var oQStore = null;
				for(var i=0; i<CLZ.oStore[argobj.pid].Q.length; i++)
				{
					if(+CLZ.oStore[argobj.pid].Q[i].i===iQId)
					{
						oQStore = CLZ.oStore[argobj.pid].Q[i];
						break;
					}
				}
				if(oQStore==null) return false;
				if(oQStore.u!="c")
				{
					var oAttempt = null;
					for(var i=0; i<oQStore.A.length; i++)
					{
						if(oQStore.A[i].u!="c")
						{
							oAttempt = oQStore.A[i];
							break;
						}
					}
					if(oAttempt==null) return false;
				}
				switch(sQType)
				{
					case "true-false":
					{
						if(jElem.hasClass("var-selected")) return false;
						var jParent = jElem.parents("div.q-vars-true-false:first");
						jParent.find(".var-selected").removeClass("var-selected").addClass("var-idle");
						jElem.removeClass("var-idle").addClass("var-selected");
						jParent.attr({ "data-selection": jElem.attr("data-vid"), "data-touched": "1" });
						if(oQStore.u!="c")
						{
							oAttempt.R[0] = +jElem.attr("data-vid");
							oQStore.R[0] = +jElem.attr("data-vid");
							oAttempt.u = "i";
							oQStore.u = "i";
							oCurObj.FireEvent({ sName: "onChangeChoice" });
						}
						break;
					}
					case "choice":
					{
						if(jElem.hasClass("var-selected")) return false;
						jElem.siblings(".var").removeClass("var-selected").addClass("var-idle");
						jElem.removeClass("var-idle").addClass("var-selected");
						jElem.parent().attr({ "data-selection": jElem.attr("data-vid"), "data-touched": "1" });
						if(oQStore.u!="c")
						{
							oAttempt.R[0] = +jElem.attr("data-vid");
							oQStore.R[0] = +jElem.attr("data-vid");
							oAttempt.u = "i";
							oQStore.u = "i";
							oCurObj.FireEvent({ sName: "onChangeChoice" });
						}
						break;
					}
					case "select":
					{
						if(jElem.hasClass("var-selected"))
						{
							jElem.removeClass("var-selected").addClass("var-idle");
						}
						else
						{
							jElem.removeClass("var-idle").addClass("var-selected");
						}
						jElem.parent().attr({ "data-touched": "1" });
						if(oQStore.u!="c")
						{
							oAttempt.R = [];
							oQStore.R = [];
							jElem.parent().children(".var").each( function()
							{
								if($(this).hasClass("var-selected"))
								{
									oAttempt.R.push(+$(this).attr("data-vid"));
									oQStore.R.push(+$(this).attr("data-vid"));
								}
							});
							oAttempt.u = "i";
							oQStore.u = "i";
							oCurObj.FireEvent({ sName: "onChangeSelect" });
						}
						break;
					}
				}
				if(oQStore.u!="c")
				{
					oCurObj.CallMethod({ sMethod: "UpdateRail" });
					if(oCurObj.data.sDisplayAs=="page")
					{
						oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: ((oQStore.R.length>0) ? "show" : "hide") } });
					}
					else
					{
						if(oCurObj.jxParams.children("allow_partial_answer").text()=="yes")
						{
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } });
						}
						else
						{
							if(oCurObj.CallMethod({ sMethod: "FirstUnanswered" })==-1)
							{
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } });
							}
							else
							{
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
							}
						}
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="HandleOrder" label="_HandleOrder" access="private">
			<params></params>
			<body>
			<![CDATA[function HandleOrder(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jElem = argobj.jElem;
				var sQType = jElem.attr("data-type");
				var iQId = +jElem.attr("data-qid");
				oCurObj.CallMethod({ sMethod: "Feedback" });
				var oQStore = null;
				for(var i=0; i<CLZ.oStore[argobj.pid].Q.length; i++)
				{
					if(+CLZ.oStore[argobj.pid].Q[i].i===iQId)
					{
						oQStore = CLZ.oStore[argobj.pid].Q[i];
						break;
					}
				}
				if(oQStore==null) return false;
				if(oQStore.u!="c")
				{
					var oAttempt = null;
					for(var i=0; i<oQStore.A.length; i++)
					{
						if(oQStore.A[i].u!="c")
						{
							oAttempt = oQStore.A[i];
							break;
						}
					}
					if(oAttempt==null) return false;
				}
                var iTargetIdx = String(jElem.attr("data-vid"));
                var iBulletIdx = String($(argobj.bullet).attr("data-vid"));
				var aOldOrder = jElem.parent().attr("data-order").split("|");
				var iTargetPos = aOldOrder.indexOf(iTargetIdx);
				var iBulletPos = aOldOrder.indexOf(iBulletIdx);
				var sMoved = aOldOrder.splice(iBulletPos, 1)[0];
				aOldOrder.splice(iTargetPos, 0, sMoved);
				var aNewOrder = aOldOrder;
				if(jElem.hasClass("var-bullet"))
				{
					var aTops = jElem.attr("data-tops").split("|");
					var jParent = jElem.parent();
					for(var i=0; i<aNewOrder.length; i++)
					{
						jParent.children(".var-bullet[data-vid='"+ aNewOrder[i] +"']").css({ "top": aTops[i] + "px" });
					}
					jElem.parent().attr({ "data-order": aNewOrder.join("|"), "data-touched": "1" });
					oCurObj.FireEvent({ sName: "onChangeMatch" });
				}
				else
				{
					var jQVars = jElem.parent(".q-vars:first");
					var jVars = jQVars.find(".var-order-elem");
					jVars.each(function ()
					{
						$(this).css({ "position": "relative", "left": "", "top": "" });
					});
					var aOrder = [];
					for(var i=0; i<aNewOrder.length; i++)
					{
						jQVars.find(".var-order-elem[data-vid='" + aNewOrder[i] + "']").appendTo(jQVars);
						aOrder.push(aNewOrder[i]);
					}
					jQVars.attr({ "data-order": aNewOrder.join("|"), "data-touched": "1" });
					oCurObj.FireEvent({ sName: "onChangeOrder" });
				}
				if(oQStore.u!="c")
				{
					oAttempt.R = aNewOrder.slice(0);
					oAttempt.u = "i";
					oQStore.R = aNewOrder.slice(0);
					oQStore.u = "i";
					oCurObj.CallMethod({ sMethod: "UpdateRail" });
					if(oCurObj.data.sDisplayAs=="page")
					{
						oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } })
					}
					else
					{
						if(oCurObj.jxParams.children("allow_partial_answer").text()=="yes")
						{
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } });
						}
						else
						{
							if(oCurObj.CallMethod({ sMethod: "FirstUnanswered" })==-1)
							{
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } });
							}
							else
							{
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
							}
						}
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="HandleInput" label="_HandleInput" access="private">
			<params></params>
			<body>
			<![CDATA[function HandleInput(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var jElem = argobj.jElem;
				var sQType = jElem.attr("data-type");
				var jQVars = jElem.parents(".q-vars:first");
				var iQId = +jQVars.attr("data-qid");
				oCurObj.CallMethod({ sMethod: "Feedback" });
				var oQStore = null;
				var oQuestion;
				for(var i=0; i<CLZ.oStore[argobj.pid].Q.length; i++)
				{
					if(+CLZ.oStore[argobj.pid].Q[i].i===iQId)
					{
						oQStore = CLZ.oStore[argobj.pid].Q[i];
						break;
					}
				}
				if(oQStore==null) return false;
				oQuestion = oCurObj.data.aQuestions[+oQStore.i];
				if(oQStore.u!="c")
				{
					var oAttempt = null;
					for(var i=0; i<oQStore.A.length; i++)
					{
						if(oQStore.A[i].u!="c")
						{
							oAttempt = oQStore.A[i];
							break;
						}
					}
					if(oAttempt==null) return false;
				}
				switch(argobj.evt.type)
				{
					case "blur":
					{
						break;
					}
					case "keyup":
					{
						if(oQuestion.sType=="numeric")
						{
							jElem.val( CL.Q.FixNumeric({ sText: jElem.val() }) );
						}
						jQVars.attr({"data-touched": "1"});
						break;
					}
				}
				if(oQStore.u!="c")
				{
					oQStore.R = [];
					oAttempt.R = [];
					jQVars.find(".var[data-vid]").each(function ()
					{
						var sVal = $(this).find(".var-input").val();
						oQStore.R.push(sVal);
						oAttempt.R.push(sVal);
					});
					oCurObj.CallMethod({ sMethod: "UpdateRail" });
					if(oCurObj.data.sDisplayAs=="page")
					{
						oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } })
					}
					else
					{
						if(oCurObj.jxParams.children("allow_partial_answer").text()=="yes")
						{
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } });
						}
						else
						{
							if(oCurObj.CallMethod({ sMethod: "FirstUnanswered" })==-1)
							{
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "show" } });
							}
							else
							{
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
							}
						}
					}
					oCurObj.FireEvent({ sName: ((sQType=="numeric") ? "onChangeNumericValue" : "onChangeTextValue") });
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="EvalQuestion" label="_EvalQuestion" access="private">
			<params></params>
			<body>
			<![CDATA[function EvalQuestion(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				if(argobj.oQStore==null) return false;
				var jxQuestion = $(oCurObj.data.jxQuestions[+argobj.qid]);
				var oQuestion = oCurObj.data.aQuestions[+argobj.qid];
				var sQType = oQuestion.sType;
				var jQuestion = jCurObjDiv.find(".q-question[data-q-num='" + argobj.qid + "']");
				var jQVars = jQuestion.find(".q-vars:first");
				var bCorrect = false;
				var sSelected;
				var sCorrect;
				var jxVars;
				var aSelection;
				switch(sQType)
				{
					case "true-false":
					{
						if(argobj.oQStore.R.length!=0)
						{
							bCorrect = (+argobj.oQStore.R[0]==+argobj.oQStore.P[0]);
						}
						return bCorrect;
					}
					case "choice":
					{
						if(argobj.oQStore.R.length==0) return false;
						return (+argobj.oQStore.P[0]==+argobj.oQStore.R[0]);
					}
					case "select":
					{
						if(argobj.oQStore.P.length!=argobj.oQStore.R.length)
						{
							return false;
						}
						bCorrect = true;
						for(var i=1; i<=oQuestion.jxVars.length; i++)
						{
							if($.inArray(i, argobj.oQStore.P)!=-1)
							{
								if($.inArray(i, argobj.oQStore.R)!=-1)
								{
									continue;
								}
								else
								{
									bCorrect = false;
									break;
								}
							}
							else
							{
								if($.inArray(i, argobj.oQStore.R)!=-1)
								{
									bCorrect = false;
									break;
								}
								else
								{
									continue;
								}
							}
						}
						return bCorrect;
					}
					case "order":
					case "oto":
					{
						for(var i=0; i<oQuestion.jxVars.length; i++)
						{
							if(argobj.oQStore.P[i]!=argobj.oQStore.R[i])
							{
								return false;
							}
						}
						return true;
					}
					case "numeric":
					case "fib":
					{
						var aCorrect = [];
						for(var i=0; i<argobj.oQStore.P.length; i++)
						{
							aCorrect.push(CL.Q.EvalSet({ sType: sQType, sValue: argobj.oQStore.R[i], oPattern: argobj.oQStore.P[i] }));
						}
						var sOp = jxQuestion.find("q_var_logic_" + sQType).text();
						bCorrect = (sOp=="AND");
						for(var i=0; i<aCorrect.length; i++)
						{
							if(sOp=="AND")
							{
								if(aCorrect[i]!=true)
								{
									bCorrect = false;
									break;
								}
							}
							else if(sOp=="OR")
							{
								if(aCorrect[i]==true)
								{
									bCorrect = true;
									break;
								}
							}
						}
						return bCorrect;
					}
				}
				return bCorrect;
			}]]>
			</body>
		</method>
		<method name="Submit" label="_Submit" access="private">
			<params></params>
			<body>
			<![CDATA[function Submit(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				var iIdx;
				var sQType;
				var sIntId;
				var jQVars;
				oCurObj.FireEvent({ sName: "onAttempt" });
				var oStore = CLZ.oStore[argobj.pid];
				switch(oCurObj.data.sDisplayAs)
				{
					case "list":
					{
						var bStopTest = (argobj.sReason=="timeout");
						if(!bStopTest)
						{
							var iFirstUnanswered = oCurObj.CallMethod({ sMethod: "FirstUnanswered" });
							if(iFirstUnanswered!=-1)
							{
								if(oCurObj.jxParams.children("allow_partial_answer").text()=="yes")
								{
									if(confirm(oCurObj.jxParams.children("t_proceed_confirm").text()))
									{
										oCurObj.CallMethod({ sMethod: "GoTo", oMethodArgs: { qid: iFirstUnanswered } });
										return false;
									}
									else
									{
										bStopTest = true;
									}
								}
								else
								{
									oCurObj.CallMethod({ sMethod: "GoTo", oMethodArgs: { qid: iFirstUnanswered } });
									return false;
								}
							}
							else
							{
								bStopTest = true;
							}
						}
						if(bStopTest)
						{
							// check all and stop test
							var sIntId;
							var iIdx;
							var sResult;
							var nFinalScore;
							var bCorrect;
							var jxObj;
							var sScoringType;
							var jxQuestion;
							var sQType;
							var jQVars;
							var oQStore;
							var oQuestion;
							var jxQuestion;
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
							for(var i=0; i<oStore.P.length; i++)
							{
								iIdx = oStore.P[i];
								for(var j=0; j<oStore.Q.length; j++)
								{
									if(+oStore.Q[j].i==iIdx)
									{
										oQStore = oStore.Q[j];
										break;
									}
								}
								oQuestion = oCurObj.data.aQuestions[iIdx];
								jxQuestion = $(oCurObj.data.jxQuestions[iIdx]);
								if(oQStore.R.length==0)
								{
									bCorrect = false;
									oCurObj.CallMethod({ sMethod: "CloseAttempt", oMethodArgs: { oQStore: oQStore, bCorrect: bCorrect, bInitNext: false } });
								}
								else
								{
									bCorrect = oCurObj.CallMethod({ sMethod: "EvalQuestion", oMethodArgs: { qid: iIdx, oQStore: oQStore } });
									oCurObj.CallMethod({ sMethod: "CloseAttempt", oMethodArgs: { oQStore: oQStore, bCorrect: bCorrect, bInitNext: false } });
									var nFinalScore = 0;
									if(bCorrect)
									{
										if(oCurObj.data.bCredit)
										{
											switch(oQuestion.sScoringType)
											{
												case "fixed": // fixed - 2.7 legacy
												case "plain":
												{
													nScore = +jxQuestion.children("q_weight").text();
													for(var k=0; k<oQuestion.aObjectives.length; k++)
													{
														CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[k].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
													}
													nFinalScore = nScore;
													break;
												}
												case "regressive":
												{
													var nWeight = +jxQuestion.children("q_weight").text();
													var iCompleted = 0;
													for(var k=0; k<oQStore.A.length; k++)
													{
														if(oQStore.A[k].u=="c")
														{
															iCompleted++;
														}
													}
													nScore = nWeight*(oQStore.A.length + 1 - iCompleted);
													for(var k=0; k<oQuestion.aObjectives.length; k++)
													{
														CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[k].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
													}
													nFinalScore = nScore;
													break;
												}
												case "byobj":
												{
													for(var k=0; k<oQuestion.aObjectives.length; k++)
													{
														nScore = oQuestion.aObjectives[k].nWeight;
														CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[k].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
													}
													break;
												}
											}
										}
									}
									else
									{
										if(oCurObj.data.bCredit)
										{
											nScore = 0;
											for(var k=0; k<oQuestion.aObjectives.length; k++)
											{
												CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[k].sId, sSrcId: argobj.pid + "_" + oQStore.i, bReplace: true, nScore: nScore });
											}
										}
									}
								}
								oCurObj.CallMethod({ sMethod: "CloseQuestion", oMethodArgs: {  oQStore: oQStore  }});
							}
							oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "stop" } });
							oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: CLZ.oStore[argobj.pid].P } });
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "hide" } });
							jCurObjDiv.find(".cl-t-footer-cell-center").html((argobj.sReason=="timeout") ? oCurObj.jxParams.find("t_stop_msg").text() : oCurObj.jxParams.find("t_allanswered_msg").text());
							jCurObjDiv.find(".cl-t-footer-cell-right").html("&nbsp;");
							CLZ.oStore[argobj.pid].u = (argobj.sReason=="timeout") ? "t" : "c";
							CLZ.oStore[argobj.pid].d = (new Date()).valueOf() - CLZ.oStore[argobj.pid].s;
							oCurObj.FireEvent({ sName: "onTestEnd" });
						}
						break;
					}
					case "page":
					{
						var bStopTest = (argobj.sReason=="timeout" && argobj.sTarget=="test");
						if(bStopTest)
						{
							// testtimeout - check all and stop test
							var sIntId;
							var iIdx;
							var sResult;
							var nFinalScore;
							var bCorrect;
							var jxObj;
							var sScoringType;
							var jxQuestion;
							var sQType;
							var jQVars;
							var oQStore;
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
							if(oCurObj.data.iQTimeout) clearTimeout(oCurObj.data.iQTimeout);
							for(var i=0; i<oStore.P.length; i++)
							{
								iIdx = oStore.P[i];
								for(var j=0; j<oStore.Q.length; j++)
								{
									if(+oStore.Q[j].i==iIdx)
									{
										oQStore = oStore.Q[j];
										break;
									}
								}
								oQuestion = oCurObj.data.aQuestions[+oQStore.i];
								if(oQStore.u=="c") continue;

								if(oQStore.R.length==0)
								{
									bCorrect = false;
									oCurObj.CallMethod({ sMethod: "CloseAttempt", oMethodArgs: { oQStore: oQStore, bCorrect: bCorrect, bInitNext: false } });
								}
								else
								{
									bCorrect = oCurObj.CallMethod({ sMethod: "EvalQuestion", oMethodArgs: { qid: iIdx, oQStore: oQStore } });
									oCurObj.CallMethod({ sMethod: "CloseAttempt", oMethodArgs: { oQStore: oQStore, bCorrect: bCorrect, bInitNext: false } });
									var nFinalScore = 0;
									if(bCorrect)
									{
										if(oCurObj.data.bCredit)
										{
											switch(oQuestion.sScoringType)
											{
												case "fixed": // fixed - 2.7 legacy
												case "plain":
												{
													nScore = +jxQuestion.children("q_weight").text();
													for(var k=0; k<oQuestion.aObjectives.length; k++)
													{
														CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[k].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
													}
													nFinalScore = nScore;
													break;
												}
												case "regressive":
												{
													var nWeight = +jxQuestion.children("q_weight").text();
													var iCompleted = 0;
													for(var k=0; k<oQStore.A.length; k++)
													{
														if(oQStore.A[k].u=="c")
														{
															iCompleted++;
														}
													}
													nScore = nWeight*(oQStore.A.length + 1 - iCompleted);
													for(var k=0; k<oQuestion.aObjectives.length; k++)
													{
														CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[k].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
													}
													nFinalScore = nScore;
													break;
												}
												case "byobj":
												{
													for(var k=0; k<oQuestion.aObjectives.length; k++)
													{
														nScore = oQuestion.aObjectives[k].nWeight;
														CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[k].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
													}
													break;
												}
											}
										}
										oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: [ iIdx ] } });
										oCurObj.CallMethod({ sMethod: "CloseQuestion", oMethodArgs: {  oQStore: oQStore  }});
									}
									else
									{
										if(oCurObj.data.bCredit)
										{
											nScore = 0;
											for(var k=0; k<oQuestion.aObjectives.length; k++)
											{
												CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[k].sId, sSrcId: argobj.pid + "_" + oQStore.i, bReplace: true, nScore: nScore });
											}
										}
										oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: [ iIdx ] } });
										oCurObj.CallMethod({ sMethod: "CloseQuestion", oMethodArgs: {  oQStore: oQStore  } });
									}
								}
							}
							oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "stop" } });
							oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: CLZ.oStore[argobj.pid].P } });
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
							oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "hide" } });
							jCurObjDiv.find(".cl-t-footer-cell-center").html((argobj.sReason=="timeout") ? oCurObj.jxParams.find("t_stop_msg").text() : oCurObj.jxParams.find("t_allanswered_msg").text());
							jCurObjDiv.find(".cl-t-footer-cell-right").html("&nbsp;");
							CLZ.oStore[argobj.pid].u = "c";
							oCurObj.FireEvent({ sName: "onTestEnd" });
						}
						else
						{
							var jQuestion = jCurObjDiv.find(".q-question:visible");
							var jQVars = jQuestion.find(".q-vars:first");
							var iIdx = +jQuestion.attr("data-q-num");
							var oQStore = null;
							for(var i=0; i<CLZ.oStore[argobj.pid].Q.length; i++)
							{
								if(+CLZ.oStore[argobj.pid].Q[i].i===iIdx)
								{
									oQStore = CLZ.oStore[argobj.pid].Q[i];
									break;
								}
							}
							if(oQStore==null) return false;
							var jxQuestion = $(oCurObj.data.jxQuestions[iIdx]);
							var oQuestion = oCurObj.data.aQuestions[iIdx];
							var nScore = 0;
							var bCorrect = false;
							if(oQStore.R.length==0)
							{
								bCorrect = false;
								oCurObj.CallMethod({ sMethod: "CloseAttempt", oMethodArgs: { oQStore: oQStore, bCorrect: bCorrect, bInitNext: (argobj.sReason=="timeout" ? false: !bCorrect) } });
								if(CLZ.bSoundOn && oCurObj.data.sSoundFailure!="none")
								{
									CL.Sound.CLPlay({ jPlayer: oCurObj.data.jAudioFailure });
								}
								oCurObj.FireEvent({ sName: "onFailure" });
							}
							else
							{
								bCorrect = oCurObj.CallMethod({ sMethod: "EvalQuestion", oMethodArgs: { qid: iIdx, oQStore: oQStore } });
								oCurObj.CallMethod({ sMethod: "CloseAttempt", oMethodArgs: { oQStore: oQStore, bCorrect: bCorrect, bInitNext: (argobj.sReason=="timeout" ? false: !bCorrect) } });
								var nFinalScore = 0;
								if(bCorrect)
								{
									if(CLZ.bSoundOn && oCurObj.data.sSoundSuccess!="none")
									{
										CL.Sound.CLPlay({ jPlayer: oCurObj.data.jAudioSuccess });
									}
									oCurObj.FireEvent({ sName: "onSuccess" });
									if(oCurObj.data.bCredit)
									{
										switch(oQuestion.sScoringType)
										{
											case "fixed": // fixed - 2.7 legacy
											case "plain":
											{
												nScore = +jxQuestion.children("q_weight").text();
												for(var i=0; i<oQuestion.aObjectives.length; i++)
												{
													CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[i].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
												}
												nFinalScore = nScore;
												break;
											}
											case "regressive":
											{
												var nWeight = +jxQuestion.children("q_weight").text();
												var iCompleted = 0;
												for(var k=0; k<oQStore.A.length; k++)
												{
													if(oQStore.A[k].u=="c")
													{
														iCompleted++;
													}
												}
												nScore = nWeight*(oQStore.A.length + 1 - iCompleted);
												for(var i=0; i<oQuestion.aObjectives.length; i++)
												{
													CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[i].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
												}
												nFinalScore = nScore;
												break;
											}
											case "byobj":
											{
												for(var i=0; i<oQuestion.aObjectives.length; i++)
												{
													nScore = oQuestion.aObjectives[i].nWeight;
													CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[i].sId, sSrcId: argobj.pid + "_" + iIdx, bReplace: true, nScore: nScore });
												}
												break;
											}
										}
									}
									if(oCurObj.data.iQTimeout) clearTimeout(oCurObj.data.iQTimeout);
									oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
									oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: [ iIdx ] } });
									oCurObj.CallMethod({ sMethod: "CloseQuestion", oMethodArgs: {  oQStore: oQStore  }});
									oCurObj.FireEvent({ sName: "onQuestionEnd" });
									var iFirstUnfinished = oCurObj.CallMethod({ sMethod: "FirstUnfinished" });
									if(oCurObj.data.bCombineBtn)
									{
										if(iFirstUnfinished==-1)
										{
											bStopTest = true;
										}
										else
										{
											oCurObj.CallMethod({ sMethod: "GoTo", oMethodArgs: { sDir: "next" } });
										}
									}
									else
									{
										if(oCurObj.data.bAllowFeedback)
										{
											oCurObj.CallMethod({ sMethod: "Feedback", oMethodArgs: { sType: "correct", xQuestion: jxQuestion } });
										}
										if(iFirstUnfinished==-1)
										{
											bStopTest = true;
										}
										else
										{
											oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "show" } });
										}
									}
								}
								else
								{
									if(CLZ.bSoundOn && oCurObj.data.sSoundFailure!="none")
									{
										CL.Sound.CLPlay({ jPlayer: oCurObj.data.jAudioFailure });
									}
									oCurObj.FireEvent({ sName: "onFailure" });
									if(oQuestion.bNoMoreAttempts==true || argobj.sReason=="timeout")
									{
										if(oCurObj.data.bCredit)
										{
											nScore = 0;
											for(var i=0; i<oQuestion.aObjectives.length; i++)
											{
												CL.SCO.SetObjectiveScore({ sId: oQuestion.aObjectives[i].sId, sSrcId: argobj.pid + "_" + oQStore.i, bReplace: true, nScore: nScore });
											}
										}
										if(oCurObj.data.iQTimeout) clearTimeout(oCurObj.data.iQTimeout);
										oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
										oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: [ iIdx ] } });
										oCurObj.CallMethod({ sMethod: "CloseQuestion", oMethodArgs: {  oQStore: oQStore  } });
										var iFirstUnfinished = oCurObj.CallMethod({ sMethod: "FirstUnfinished" });
										if(oCurObj.data.bCombineBtn)
										{
											if(iFirstUnfinished==-1)
											{
												bStopTest = true;
											}
											else
											{
												oCurObj.CallMethod({ sMethod: "GoTo", oMethodArgs: { sDir: "next" } });
											}
										}
										else
										{
											if(oCurObj.data.bShowCorrect)
											{
												oCurObj.CallMethod({ sMethod: "RestoreQuestionState", oMethodArgs: { qid: iIdx, bCorrect: true } });
											}
											if(oCurObj.data.bAllowFeedback)
											{
												if(argobj.sQReason=="timeout")
												{
													oCurObj.CallMethod({ sMethod: "Feedback", oMethodArgs: { sType: "timeout", xQuestion: jxQuestion } });
												}
												else
												{
													oCurObj.CallMethod({ sMethod: "Feedback", oMethodArgs: { sType: "exceed", xQuestion: jxQuestion } });
												}
											}
											if(iFirstUnfinished==-1)
											{
												bStopTest = true;
											}
											else
											{
												oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "show" } });
											}
										}
									}
									else
									{
										if(oCurObj.data.bAllowFeedback)
										{
											if(argobj.sQReason=="timeout")
											{
												oCurObj.CallMethod({ sMethod: "Feedback", oMethodArgs: { sType: "timeout", xQuestion: jxQuestion } });
											}
											else
											{
												if(oQuestion.iAttemptsLeft==1)
												{
													oCurObj.CallMethod({ sMethod: "Feedback", oMethodArgs: { sType: "lastattempt", xQuestion: jxQuestion } });
												}
												else
												{
														oCurObj.CallMethod({ sMethod: "Feedback", oMethodArgs: { sType: "incorrect", xQuestion: jxQuestion } });
												}
											}
										}
										oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
									}
								}
							}
							if(bStopTest)
							{
								oCurObj.CallMethod({ sMethod: "TestTimer", oMethodArgs: { sAction: "stop" } });
								oCurObj.CallMethod({ sMethod: "DisableQuestions", oMethodArgs: { aTargets: CLZ.oStore[argobj.pid].P } });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "submit", sAction: "hide" } });
								oCurObj.CallMethod({ sMethod: "Button", oMethodArgs: { sBtn: "next", sAction: "hide" } });
								jCurObjDiv.find(".cl-t-footer-cell-center").html((argobj.sReason=="timeout") ? oCurObj.jxParams.find("t_stop_msg").text() : oCurObj.jxParams.find("t_allanswered_msg").text());
								jCurObjDiv.find(".cl-t-footer-cell-right").html("&nbsp;");
								CLZ.oStore[argobj.pid].u = (argobj.sReason=="timeout") ? "t" : "c";
								oCurObj.FireEvent({ sName: "onTestEnd" });
							}
						}
						break;
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="CloseAttempt" label="_CloseAttempt" access="private">
			<params></params>
			<body>
			<![CDATA[function CloseAttempt(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				if(argobj.oQStore==null) return false;
				var iAttemptIdx = -1;
				var oAttempt = null;
				for(var i=0; i<argobj.oQStore.A.length; i++)
				{
					if(argobj.oQStore.A[i].u=="c") continue;
					iAttemptIdx = i;
					oAttempt = argobj.oQStore.A[i];
					break;
				}
				if(oAttempt==null) return false;
				var iStart = CLZ.oStore[argobj.pid].s + argobj.oQStore.s + oAttempt.s;
				var iNow = (new Date()).valueOf();
				oAttempt.d = iNow - iStart;
				oAttempt.u = "c"; // current attempt closed
				iAttemptIdx++;
				var iAttemptsLeft = argobj.oQStore.A.length - iAttemptIdx;
				if(iAttemptsLeft<0)
				{
					iAttemptsLeft = 0;
				}
				if(argobj.bCorrect)
				{
					argobj.oQStore.r = argobj.bCorrect ? "c" : "i";
				}
				if(!argobj.bInitNext)
				{
					return true;
				}
				oCurObj.data.aQuestions[+argobj.oQStore.i].iAttemptsLeft = iAttemptsLeft;
				if(iAttemptsLeft==0 || argobj.oQStore.A[iAttemptIdx]==null)
				{
					oCurObj.data.aQuestions[+argobj.oQStore.i].bNoMoreAttempts = true;
					oCurObj.FireEvent({ sName: "onAttemptsLimit" });
				}
				else
				{
					if(argobj.bInitNext)
					{
						var sString = oCurObj.jxParams.children("string_question_attempts").text();
						var aParts = sString.split("{{2}}");
						sString = aParts.join(argobj.oQStore.A.length);
						aParts = sString.split("{{1}}");
						sString = aParts.join((iAttemptIdx + 1));
						jCurObjDiv.find(".cl-t-attempts").html(sString);
						argobj.oQStore.A[iAttemptIdx] =
						{
							s: iNow - argobj.oQStore.s - CLZ.oStore[argobj.pid].s,
							d: 0,
							u: "i",
							R: []
						}
						if((argobj.oQStore.A.length>1) && (iAttemptIdx==argobj.oQStore.A.length-1))
						{
							oCurObj.data.aQuestions[+argobj.oQStore.i].bLastAttempt = true;
							oCurObj.FireEvent({ sName: "onLastAttemptStart" });
						}
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="CloseQuestion" label="_CloseQuestion" access="private">
			<params></params>
			<body>
			<![CDATA[function CloseQuestion(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				if(argobj.oQStore==null) return false;
				oCurObj.CallMethod({ sMethod: "Timer", oMethodArgs: { action: "stop" } });
				var jQuestion = jCurObjDiv.find(".q-question[data-q-num='" + argobj.oQStore.i + "']");
				var oQuestion = oCurObj.data.aQuestions[+argobj.oQStore.i];
				var jQVars = jQuestion.find(".q-vars:first");
				var jVars;
				switch(oQuestion.sType)
				{
					case "true-false":
					case "choice":
					case "select":
					case "order":
					{
						jVars = jQVars.find(".cl-var");
						break;
					}
					case "numeric":
					case "fib":
					{
						jVars = jQVars.find(".cl-var");
						jVars.find(".cl-var-input").prop("disabled", true);
						break;
					}
					case "oto":
					case "otm":
					case "mtm":
					{
						jVars = jQVars.find(".cl-var-bullet");
						if(jVars.hasClass("ui-draggable"))
						{
							jVars.draggable("destroy");
						}
						if(jVars.hasClass("ui-droppable"))
						{
							jVars.droppable("destroy");
						}
						break;
					}
				}
				jVars.addClass("cl-var-disabled");
				argobj.oQStore.d = (new Date()).valueOf() - argobj.oQStore.s - CLZ.oStore[argobj.pid].s;
				argobj.oQStore.u = "c";
				if($.inArray(+argobj.oQStore.i, CLZ.oStore[argobj.pid].R)==-1)
				{
					CLZ.oStore[argobj.pid].R.push(+argobj.oQStore.i);
				}
				oCurObj.FireEvent({ sName: "onQuestionEnd" })
				return true;
			}]]>
			</body>
		</method>
		<method name="Timer" label="_Timer" access="private">
			<params></params>
			<body>
			<![CDATA[function Timer(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				if(oCurObj==null) return false;
				var jCurObjDiv = $(oCurObj.div);

				var jTimerDiv = jCurObjDiv.find(".cl-q-timer");

				var iValue = 0;
				var oQStore = CLZ.oStore[argobj.pid].Q[+argobj.qid];
				switch(argobj.sAction)
				{
					case "init":
					{
						jCurObjDiv.find(".cl-q-timer-container").show();
						jCurObjDiv.find(".cl-q-no-timer").hide();
						iValue = oQStore.t;
						break;
					}
					case "hide":
					{
						jCurObjDiv.find(".cl-q-timer-container").hide();
						jCurObjDiv.find(".cl-q-no-timer").show();
						return true;
					}
					case "proceed":
					case "restore":
					{
						jCurObjDiv.find(".cl-q-timer-container").show();
						jCurObjDiv.find(".cl-q-no-timer").hide();
						iValue = oQStore.t - oQStore.e;
						if(iValue<0) iValue = 0;
						break;
					}
					case "stop":
					{
						clearTimeout(oCurObj.data.iQTimeout);
						return false;
					}
					default:
					{
						oQStore.e++;
						iValue = oQStore.t - oQStore.e;
						break;
					}
				}
				if(iValue < 0)
				{
					clearTimeout(oCurObj.data.iQTimeout);
					oCurObj.CallMethod({ sMethod: "Submit", oMethodArgs: { qid: argobj.qid, sReason: "timeout", sTarget: "test" } });
					oCurObj.FireEvent({ sName: "onTimeout" });
					return false;
				}
				var oTime = CLTOOLS.FormatTime({ iValue: iValue });
				var sString = oCurObj.jxParams.children("string_question_time").text();
				var aParts = sString.split("{{1}}");
				sString = aParts.join(oTime.sMin);
				aParts = sString.split("{{2}}");
				sString = aParts.join(oTime.sSec);
				jTimerDiv.find(".cl-q-timer-value").html(sString);
				if(jTimerDiv.find(".cl-q-timer-progress").is(":visible"))
				{
					if(iValue!=oQStore.t)
					{
						jTimerDiv.find(".cl-q-timer-progress .rnd-timer-svg-full").hide();
						jTimerDiv.find(".cl-q-timer-progress .rnd-timer-path").show();
						var sPath = "M12,12 L12,0 A12,12";
						if(iValue>=0.5*oQStore.t)
						{
							sPath += " 1 1,1 ";
						}
						else
						{
							sPath += " 0 0,1 ";
						}
						var nAngle = 2*Math.PI*(1 - iValue/oQStore.t);
						sPath += (12*(1 - Math.sin(nAngle))) + "," + (12*(1 - Math.cos(nAngle))) + " Z";
						jTimerDiv.find(".cl-q-timer-progress .rnd-timer-path").attr({ "d": sPath });
					}
				}
				else
				{
					jTimerDiv.find(".cl-q-timer-scale").css({ "left": (100*(1 - iValue/oQStore.t)) + "%" });
				}
				if(argobj.sAction!="restore")
				{
					if(iValue <= 0)
					{
						clearTimeout(oCurObj.data.iQTimeout);
						oCurObj.CallMethod({ sMethod: "Submit", oMethodArgs: { qid: argobj.qid, sReason: "timeout" } });
						oCurObj.FireEvent({ sName: "onTimeout" });
						return false;
					}
					oCurObj.data.iQTimeout = setTimeout(function () { oCurObj.CallMethod({ sMethod: "Timer", oMethodArgs: { qid: argobj.qid } }); }, 1000);
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="GetProperty" label="_GetProperty" access="private">
			<params></params>
			<body>
			<![CDATA[function GetProperty(argobj)
			{
				if(argobj.pid==null || argobj.property==null) return false;
				var oCurObj = CLO[argobj.pid];
				if(oCurObj==null) return false;
				var jCurObjDiv = $(oCurObj.div);
				var iIdx = (oCurObj.data.sDisplayAs == "list") ? -1 : +jCurObjDiv.find(".q-question:visible").attr("data-q-num");
				switch(argobj.property.toLowerCase())
				{
					case "totalquestionquantity":    	return CLZ.oStore[argobj.pid].P.length;
					case "testmode":                	return oCurObj.data.sMode;
					case "testduration":            	return CLZ.oStore[argobj.pid].t;
					case "testtimer":                	return CLZ.oStore[argobj.pid].e;
					case "questionnumber":
					{
						if(oCurObj.data.sDisplayAs == "list")
						{
							return -1;
						}
						return ($.inArray(iIdx, CLZ.oStore[argobj.pid].P) + 1);
					}
					case "questiontype":
					{
						if(oCurObj.data.sDisplayAs == "list")
						{
							return "";
						}
						return jCurObjDiv.find(".q-question:visible").attr("data-type");
					}
					case "questionduration":
					{
						if(oCurObj.data.sDisplayAs == "list")
						{
							return -1;
						}
						var iIdx = +jCurObjDiv.find(".q-question:visible").attr("data-q-num");
						return -1;
					}
					case "questiontimer":
					{
						if(oCurObj.data.sDisplayAs == "list")
						{
							return -1;
						}
						if(oCurObj.data.aQuestions[iIdx].bTimer)
						{
							var i = $.inArray(iIdx, CLZ.oStore[argobj.pid].P);
							if(i==-1) return -1;
							return CLZ.oStore[argobj.pid].Q[i].e;
						}
						else
						{
							return -1;
						}
					}
					case "itemquantity":
					{
						if(oCurObj.data.sDisplayAs == "list")
						{
							return -1;
						}
						return jCurObjDiv.find(".q-question:visible .var").length;
					}
					case "questionvalue":
					{
						if(oCurObj.data.sDisplayAs == "list")
						{
							return -1;
						}
						var i = $.inArray(iIdx, CLZ.oStore[argobj.pid].P);
						if(i==-1) return -1;
						return CLZ.oStore[argobj.pid].Q[i].R.join("~");
					}
					case "attemptslast":
					{
						if(oCurObj.data.sDisplayAs == "list")
						{
							return -1;
						}
						var i = $.inArray(iIdx, CLZ.oStore[argobj.pid].P);
						if(i==-1) return -1;
						for(var j=CLZ.oStore[argobj.pid].Q[i].A.length; j>=0; j--)
						{
							if(CLZ.oStore[argobj.pid].Q[i].A[j].u!="c")
							{
								return i;
							}
						}
						return 0;
					}
					case "attemptstotal":
					{
						if(oCurObj.data.sDisplayAs == "list")
						{
							return -1;
						}
						var i = $.inArray(iIdx, CLZ.oStore[argobj.pid].P);
						if(i==-1) return -1;
						return CLZ.oStore[argobj.pid].Q[i].A.length;
					}
				}
				return "";
			}]]>
			</body>
		</method>
		<method name="HandleEvt" label="_HandleEvt" access="private">
			<params></params>
            <body>
			<![CDATA[function HandleEvt(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				if(oCurObj==null) return false;
				switch(argobj.evt)
				{
					case "EVENT_OBJECT_SHOW":
					{
						if(!oCurObj.data.bCreated) return false;
						oCurObj.CallMethod({ sMethod: "Init" });
						break;
					}
				}
				return true;
			}]]>
			</body>
		</method>
		<method name="Feedback" label="_Feedback" access="private">
			<params></params>
			<body>
			<![CDATA[function Feedback(argobj)
			{
				var oCurObj = CLO[argobj.pid];
				var jCurObjDiv = $(oCurObj.div);
				if(!oCurObj.data.bAllowFeedback)
				{
					return false;
				}
				var jCurState = jCurObjDiv.find(".cl-state[data-state='default']");
				jCurState.find(".q-feedback").remove();
				if(oCurObj.iFBTimer!=null)
				{
					clearTimeout(oCurObj.iFBTimer);
				}
				if(argobj.sType==null)
				{
					return true;
				}
				var sFBText = "";
				var sType = argobj.sType;
				if(oCurObj.data.bAllowFeedback)
				{
					var jxQuestion = $(argobj.xQuestion);
					if(jxQuestion.children("q_fb_test").text()!="yes")
					{
						if((sType=="exceed" && jxQuestion.children("display_fb_exceed").text()!="yes") || (sType=="lastattempt" && jxQuestion.children("display_fb_lastattempt").text()!="yes"))
						{
							sType = "incorrect";
						}
						if(jxQuestion.children("display_fb_" + sType).text()=="yes")
						{
							sFBText = jxQuestion.children("fb_" + sType).text();
						}
					}
					else
					{
						if((sType=="exceed" && oCurObj.jxParams.children("q_display_fb_exceed").text()!="yes") || (sType=="lastattempt" && oCurObj.jxParams.children("q_display_fb_lastattempt").text()!="yes"))
						{
							sType = "incorrect";
						}
						if(oCurObj.jxParams.children("q_display_fb_" + sType).text()=="yes")
						{
							sFBText = oCurObj.jxParams.children("q_fb_" + sType).text();
						}
					}
				}
				if(sFBText!="")
				{
					var jFB = jCurObjDiv.find(".q-feedback-template").clone(true).removeClass("q-feedback-template").addClass("q-feedback q-feedback-" + sType).appendTo(jCurState);
					jFB.find(".text-main").html(sFBText).fadeIn();
					if(oCurObj.jxParams.children("q_fb_timerswitch").text()=="yes")
					{
						oCurObj.iFBTimer = setTimeout(function () { oCurObj.CallMethod({ sMethod: "Feedback", oMethodArgs: { hide: true } }); }, +oCurObj.jxParams.children("q_fb_timer").text());
					}
				}
				return true;
			}]]>
			</body>
		</method>
    </methods>
</params>